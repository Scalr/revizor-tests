swagger: '2.0'
basePath: /api/v1beta0/user
definitions:
  Action:
    discriminator: actionType
    properties:
      actionType:
        enum:
        - ScalrScriptAction
        - RemoteScriptAction
        - ChefAction
        - LocalScriptAction
        - AnsibleTowerAction
        type: string
    required:
    - actionType
    x-concreteTypes:
    - $ref: '#/definitions/RemoteScriptAction'
    - $ref: '#/definitions/ChefAction'
    - $ref: '#/definitions/LocalScriptAction'
    - $ref: '#/definitions/ScalrScriptAction'
    - $ref: '#/definitions/AnsibleTowerAction'
  AllEventsTrigger:
    description: Triggers when any Event fires.
    properties:
      triggerType:
        enum:
        - AllEventsTrigger
        - SpecificEventTrigger
        type: string
    required:
    - triggerType
    x-abstractType:
      $ref: '#/definitions/Trigger'
    x-discriminator: triggerType
  AnsibleTowerAction:
    properties:
      actionType:
        enum:
        - ScalrScriptAction
        - RemoteScriptAction
        - ChefAction
        - LocalScriptAction
        - AnsibleTowerAction
        type: string
      configuration:
        $ref: '#/definitions/AnsibleTowerConfigurationIdentity'
        description: Ansible Tower identity stored at Bootstrap Configurations.
      jobTemplate:
        $ref: '#/definitions/JobTemplateIdentity'
        description: Ansible Tower Job template stored at Tower Server.
      variables:
        description: The Ansible Tower variables to override. JSON or YAML representation.
        type: string
    required:
    - actionType
    - configuration
    - jobTemplate
    x-abstractType:
      $ref: '#/definitions/Action'
    x-discriminator: actionType
  AnsibleTowerBootstrapConfiguration:
    description: Farm Role bootstrap configuration. Please note that this configuration
      is available only for Roles configured with Chef built-in automation.
    properties:
      configurations:
        description: The list of Ansible Tower Bootstrap Configuration identifiers.
        items:
          $ref: '#/definitions/FarmRoleAnsibleTowerConfiguration'
        type: array
      enabled:
        default: false
        type: boolean
      hostName:
        default: publicIp
        description: Hostname source. Selected value will be used as name for Ansible
          Tower host.
        enum:
        - publicIp
        - privateIp
        - hostname
        type: string
      type:
        description: Bootstrap configuration type.
        enum:
        - ChefServerBootstrapConfiguration
        - ChefSoloBootstrapConfiguration
        - AnsibleTowerBootstrapConfiguration
        type: string
    required:
    - type
    - configurations
    x-abstractType:
      $ref: '#/definitions/BootstrapConfiguration'
    x-discriminator: type
  AnsibleTowerConfigurationIdentity:
    properties:
      id:
        description: The Ansible Tower configuration identifier.
        type: integer
      name:
        description: The Ansible Tower configuration name.
        type: string
  ApiErrorResponse:
    description: Common reponse for erroneous requests.
    properties:
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-usedIn:
    - /user/{envId}/scripts/{scriptId}/script-versions/
    - /user/{envId}/servers/{serverId}/actions/resume/
    - /user/{envId}/servers/{serverId}/
    - /user/{envId}/os/{osId}/
    - /user/{envId}/roles/{roleId}/
    - /user/{envId}/scaling-metrics/
    - /user/{envId}/farms/{farmId}/actions/suspend/
    - /user/{envId}/global-variables/{globalVariableName}/
    - /user/{envId}/farm-roles/{farmRoleId}/global-variables/
    - /user/{envId}/farm-roles/{farmRoleId}/actions/import-server/
    - /user/{envId}/roles/{roleId}/images/{imageId}/
    - /user/{envId}/global-variables/
    - /user/{envId}/farm-roles/{farmRoleId}/global-variables/{globalVariableName}/
    - /user/{envId}/orchestration-rules/{orchestrationRuleId}/
    - /user/{envId}/images/
    - /user/{envId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/actions/execute/
    - /user/{envId}/clouds/{cloudPlatform}/cloud-locations/{cloudLocation}/instance-types/
    - /user/{envId}/scripts/{scriptId}/actions/execute/
    - /user/{envId}/farms/{farmId}/actions/resume/
    - /user/{envId}/farm-roles/{farmRoleId}/storage/
    - /user/{envId}/farm-roles/{farmRoleId}/scaling/
    - /user/{envId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}/
    - /user/{envId}/roles/{roleId}/orchestration-rules/
    - /user/{envId}/images/{imageId}/actions/replace/
    - /user/{envId}/scripts/
    - /user/{envId}/roles/{roleId}/images/{imageId}/actions/replace/
    - /user/{envId}/webhook-endpoints/
    - /user/{envId}/farms/{farmId}/actions/launch/
    - /user/{envId}/servers/{serverId}/actions/reboot/
    - /user/{envId}/servers/
    - /user/{envId}/roles/{roleId}/global-variables/{globalVariableName}/
    - /user/{envId}/farms/{farmId}/actions/terminate/
    - /user/{envId}/farm-roles/{farmRoleId}/scaling/{metricName}/
    - /user/{envId}/servers/{serverId}/actions/terminate/
    - /user/{envId}/images/{imageId}/
    - /user/{envId}/farms/{farmId}/actions/generate-template/
    - /user/{envId}/roles/{roleId}/actions/clone/
    - /user/{envId}/roles/{roleId}/global-variables/
    - /user/{envId}/farm-roles/{farmRoleId}/orchestration-rules/
    - /user/{envId}/servers/{serverId}/actions/suspend/
    - /user/{envId}/role-categories/{roleCategoryId}/
    - /user/{envId}/farms/{farmId}/global-variables/{globalVariableName}/
    - /user/{envId}/roles/{roleId}/actions/deprecate/
    - /user/{envId}/os/
    - /user/{envId}/farms/{farmId}/farm-roles/
    - /user/{envId}/farms/{farmId}/actions/lock/
    - /user/{envId}/scripts/{scriptId}/
    - /user/{envId}/projects/{projectId}/
    - /user/{envId}/images/{imageId}/actions/copy/
    - /user/{envId}/orchestration-rules/
    - /user/{envId}/orchestration-logs/
    - /user/{envId}/scaling-metrics/{metricName}/
    - /user/{envId}/cost-centers/
    - /user/{envId}/farms/{farmId}/global-variables/
    - /user/{envId}/event-logs/{eventLogEntryId}/
    - /user/{envId}/projects/
    - /user/{envId}/farm-roles/{farmRoleId}/storage/{storageConfigurationId}/
    - /user/{envId}/events/
    - /user/{envId}/cost-centers/{costCenterId}/
    - /user/{envId}/servers/{serverId}/global-variables/
    - /user/{envId}/farms/{farmId}/
    - /user/{envId}/servers/{serverId}/global-variables/{globalVariableName}/
    - /user/{envId}/role-categories/
    - /user/{envId}/farm-roles/{farmRoleId}/orchestration-rules/{orchestrationRuleId}/
    - /user/{envId}/clouds/{cloudPlatform}/cloud-locations/
    - /user/{envId}/farm-roles/{farmRoleId}/
    - /user/{envId}/roles/
    - /user/{envId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/
    - /user/{envId}/farms/{farmId}/servers/
    - /user/{envId}/farm-roles/{farmRoleId}/servers/
    - /user/{envId}/roles/{roleId}/images/
    - /user/{envId}/roles/{roleId}/actions/promote/
    - /user/{envId}/farms/{farmId}/actions/unlock/
    - /user/{envId}/event-logs/
    - /user/{envId}/events/{eventId}/actions/fire/
    - /user/{envId}/orchestration-logs/{logEntryId}/
    - /user/{envId}/script-executions/{scriptExecutionId}/
    - /user/{envId}/events/{eventId}/
    - /user/{envId}/farms/
    - /user/{envId}/farms/{farmId}/actions/clone/
  ApiMessage:
    properties:
      code:
        description: A machine-readable representation of the message.
        type: string
      message:
        description: A human-readable representation of the message.
        type: string
  ApiMetaContainer:
    properties:
      sample:
        description: Actual properties TBD.
        type: string
  ApiPagination:
    properties:
      first:
        readOnly: true
        type: string
        x-nullable: true
      last:
        readOnly: true
        type: string
        x-nullable: true
      next:
        readOnly: true
        type: string
        x-nullable: true
      prev:
        readOnly: true
        type: string
        x-nullable: true
  AwsCloudFeatures:
    description: AWS Farm Role configuration. Available only for AWS Farm Roles.
    properties:
      backupInstanceTypes:
        description: 'The list of instance types to use as a backup when Amazon capacity
          reached. Note: Instances will be used in order they have been passed.'
        items:
          $ref: '#/definitions/InstanceTypeForeignKey'
        type: array
      ebsOptimized:
        description: Enable EBS optimization for all instances of this Farm Role.
          Note that this option is available only for EBS-optimized instance types.
        type: boolean
      iamInstanceProfile:
        description: The Specific Amazon IAM instance profile.
        type: string
      type:
        enum:
        - AwsCloudFeatures
        - AzureCloudFeatures
        - VmwareCloudFeatures
        - GceCloudFeatures
        type: string
    required:
    - type
    x-abstractType:
      $ref: '#/definitions/CloudFeatures'
    x-createOnly:
    - type
    x-discriminator: type
  AwsImageCloudFeatures:
    description: Cloud specifics Image configuration.
    properties:
      type:
        enum:
        - AwsImageCloudFeatures
        - VmwareImageCloudFeatures
        type: string
      virtualization:
        description: 'The Image virtualization type. Can be one of two types of virtualization:
          paravirtual (pv) or hardware virtual machine (hvm). At the Environment scope
          this property is read-only.'
        enum:
        - hvm
        - paravirtual
        type: string
    required:
    - type
    x-abstractType:
      $ref: '#/definitions/ImageCloudFeatures'
    x-discriminator: type
  AwsInstanceTypeCloudFeatures:
    description: AWS instance type configuration.
    properties:
      ebsEncryption:
        description: Whether current instance type supports EBS encryption.
        type: boolean
      ebsOptimized:
        description: EBS-optimized instance uses an optimized configuration stack
          and provides additional, dedicated capacity for Amazon EBS I/O.
        type: boolean
      enhancedNetworking:
        description: Enhanced networking uses single root I/O virtualization (SR-IOV)
          to provide high-performance networking capabilities on supported instance
          types.
        type: boolean
      hvmOnly:
        description: Instance type supports only HVM images.
        type: boolean
      type:
        enum:
        - AwsInstanceTypeCloudFeatures
        type: string
      vpcOnly:
        description: Instance type can be launched only in VPC.
        type: boolean
    required:
    - type
    x-abstractType:
      $ref: '#/definitions/InstanceTypeCloudFeatures'
    x-discriminator: type
  AwsStorageTemplateCloudFeatures:
    description: Cloud specifics template configuration.
    properties:
      iops:
        description: The number of input/output operations per second. It is required
          field when the volume type is io1  and should not be used with other types
          of volumes.
        maximum: 20000
        minimum: 100
        type: integer
      isEncrypted:
        description: Please note this property available only for instance types that
          support Amazon EBS encryption and it is not available for root storage configuration.
        type: boolean
      kmsKey:
        description: Key to encrypt EBS volumes. Please note this property is available
          only if EBS encryption is enabled and it is not available for root storage
          configuration.
        type: string
      type:
        enum:
        - AwsStorageTemplateCloudFeatures
        - VmwareStorageTemplateCloudFeatures
        - AzureStorageTemplateCloudFeatures
        type: string
    required:
    - type
    x-abstractType:
      $ref: '#/definitions/StorageTemplateCloudFeatures'
    x-createOnly:
    - type
    x-discriminator: type
  AzureCloudFeatures:
    description: Azure Farm Role configuration. Required for Azure Farm Roles.
    properties:
      resourceGroup:
        description: An Azure resource group.
        type: string
      storageAccount:
        description: Identifier of the general-purpose storage account.
        type: string
      type:
        enum:
        - AwsCloudFeatures
        - AzureCloudFeatures
        - VmwareCloudFeatures
        - GceCloudFeatures
        type: string
    required:
    - type
    - resourceGroup
    x-abstractType:
      $ref: '#/definitions/CloudFeatures'
    x-createOnly:
    - type
    - resourceGroup
    x-discriminator: type
  AzureStorageTemplateCloudFeatures:
    description: Cloud specifics template configuration.
    properties:
      resourceGroup:
        description: An Azure resource group. Please note, that this property is available
          only for Farm Role that use managed disks.
        readOnly: true
        type: string
      storageAccount:
        description: Identifier of the general-purpose storage account. Please note,
          that this property is available only for Farm Role that use unmanaged disks.
        type: string
      type:
        enum:
        - AwsStorageTemplateCloudFeatures
        - VmwareStorageTemplateCloudFeatures
        - AzureStorageTemplateCloudFeatures
        type: string
    required:
    - type
    x-abstractType:
      $ref: '#/definitions/StorageTemplateCloudFeatures'
    x-createOnly:
    - type
    x-discriminator: type
  BandWidthScalingRule:
    description: It is used in combination with the user defined Scaling Metrics.
    properties:
      direction:
        enum:
        - inbound
        - outbound
        type: string
      name:
        description: Scaling rule name.
        enum:
        - BandWidth
        type: string
      ruleType:
        enum:
        - BasicScalingRule
        - LoadAveragesScalingRule
        - FreeRamScalingRule
        - UrlResponseTimeScalingRule
        - SqsQueueSizeScalingRule
        - DateAndTimeScalingRule
        - BandWidthScalingRule
        type: string
      scaleDown:
        description: Scale down threshold.
        type: number
      scaleUp:
        description: Scale up threshold.
        type: number
    required:
    - name
    - ruleType
    - scaleUp
    - scaleDown
    - direction
    x-abstractType:
      $ref: '#/definitions/BasicScalingRule'
    x-createOnly:
    - name
    - ruleType
    x-discriminator: ruleType
    x-filterable:
    - name
    - ruleType
  BasicScalingRule:
    description: It is used in combination with the user defined Scaling Metrics.
    properties:
      name:
        description: The name of a Scaling Metric.
        type: string
      ruleType:
        enum:
        - BasicScalingRule
        - LoadAveragesScalingRule
        - FreeRamScalingRule
        - UrlResponseTimeScalingRule
        - SqsQueueSizeScalingRule
        - DateAndTimeScalingRule
        - BandWidthScalingRule
        type: string
      scaleDown:
        description: Scale down threshold.
        type: number
      scaleUp:
        description: Scale up threshold.
        type: number
    required:
    - name
    - ruleType
    - scaleUp
    - scaleDown
    x-abstractType:
      $ref: '#/definitions/ScalingRule'
    x-concreteTypes:
    - $ref: '#/definitions/FreeRamScalingRule'
    - $ref: '#/definitions/SqsQueueSizeScalingRule'
    - $ref: '#/definitions/UrlResponseTimeScalingRule'
    - $ref: '#/definitions/BandWidthScalingRule'
    - $ref: '#/definitions/LoadAveragesScalingRule'
    x-createOnly:
    - name
    - ruleType
    x-discriminator: ruleType
    x-filterable:
    - name
    - ruleType
  BootstrapConfiguration:
    description: Farm Role bootstrap configuration. Please note that this configuration
      is available only for Roles configured with Chef built-in automation.
    discriminator: type
    properties:
      enabled:
        default: false
        type: boolean
      type:
        description: Bootstrap configuration type.
        enum:
        - ChefServerBootstrapConfiguration
        - ChefSoloBootstrapConfiguration
        - AnsibleTowerBootstrapConfiguration
        type: string
    required:
    - type
    x-concreteTypes:
    - $ref: '#/definitions/ChefBootstrapConfiguration'
    - $ref: '#/definitions/AnsibleTowerBootstrapConfiguration'
  ChefAction:
    properties:
      actionType:
        enum:
        - ScalrScriptAction
        - RemoteScriptAction
        - ChefAction
        - LocalScriptAction
        - AnsibleTowerAction
        type: string
    required:
    - actionType
    x-abstractType:
      $ref: '#/definitions/Action'
    x-discriminator: actionType
  ChefBootstrapConfiguration:
    description: Farm Role bootstrap configuration. Please note that this configuration
      is available only for Roles configured with Chef built-in automation.
    properties:
      attributes:
        description: The attributes are specific details about a node.
        type: string
      enabled:
        default: false
        type: boolean
      runList:
        description: A list of Chef recipes / roles which is applied. It defines all
          information necessary for Chef to configure a node.
        type: string
      scope:
        enum: &id001
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      template:
        description: A cookbook template is an Embedded Ruby template that is used
          to dynamically generate static text files.
        type: string
      type:
        description: Bootstrap configuration type.
        enum:
        - ChefServerBootstrapConfiguration
        - ChefSoloBootstrapConfiguration
        - AnsibleTowerBootstrapConfiguration
        type: string
    required:
    - type
    x-abstractType:
      $ref: '#/definitions/BootstrapConfiguration'
    x-concreteTypes:
    - $ref: '#/definitions/ChefServerBootstrapConfiguration'
    - $ref: '#/definitions/ChefSoloBootstrapConfiguration'
    x-discriminator: type
  ChefServerBootstrapConfiguration:
    description: Farm Role Chef server configuration. Please note that almost all
      properties are read-only if Chef is configured at higher scope and  it is only
      possible to override "environment" and "attributes" properties.
    properties:
      attributes:
        description: The attributes are specific details about a node.
        type: string
      daemonize:
        description: Whether Run Chef client as a daemon.
        type: boolean
      enabled:
        default: false
        type: boolean
      environment:
        default: _default
        description: Identifier of the Chef Environment.
        type: string
      logLevel:
        default: auto
        description: The level of the chef log.
        enum:
        - auto
        - debug
        - info
        - warn
        - error
        - fatal
        type: string
      node:
        description: The Chef node name.
        type: string
      roleName:
        description: A Chef role which to be applied for bootstrapping. Please note
          that this property can not be set simultaneously with runList property.
        type: string
      runList:
        description: A list of Chef recipes / roles which is applied. It defines all
          information necessary for Chef to configure a node.
        type: string
      scope:
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      server:
        $ref: '#/definitions/ChefServerForeignKey'
        description: Identifier of the Chef Server.
      sslVerificationMode:
        default: none
        enum:
        - auto
        - peer
        - none
        type: string
      template:
        description: A cookbook template is an Embedded Ruby template that is used
          to dynamically generate static text files.
        type: string
      type:
        description: Bootstrap configuration type.
        enum:
        - ChefServerBootstrapConfiguration
        - ChefSoloBootstrapConfiguration
        - AnsibleTowerBootstrapConfiguration
        type: string
    required:
    - type
    - server
    x-abstractType:
      $ref: '#/definitions/ChefBootstrapConfiguration'
    x-discriminator: type
  ChefServerForeignKey:
    properties:
      id:
        type: integer
    required:
    - id
  ChefSoloBootstrapConfiguration:
    description: Farm Role Chef server configuration. Please note that almost all
      properties are read-only if Chef is configured at higher scope and  it is only
      possible to override "environment" and "attributes" properties.
    properties:
      attributes:
        description: The attributes are specific details about a node.
        type: string
      cookbookUrl:
        description: Location from which cookbook can be run.
        type: string
      enabled:
        default: false
        type: boolean
      privateKey:
        description: The private key. Please note that this property is available
          only if urlType value is "git".
        type: string
      relativePath:
        description: The relative path witch can be used with any resource. Please
          note that this property is available only if urlType value is "git".
        type: string
      runList:
        description: A list of Chef recipes / roles which is applied. It defines all
          information necessary for Chef to configure a node.
        type: string
      scope:
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      template:
        description: A cookbook template is an Embedded Ruby template that is used
          to dynamically generate static text files.
        type: string
      type:
        description: Bootstrap configuration type.
        enum:
        - ChefServerBootstrapConfiguration
        - ChefSoloBootstrapConfiguration
        - AnsibleTowerBootstrapConfiguration
        type: string
      urlType:
        default: http
        description: The url type.
        enum:
        - git
        - http
        type: string
    required:
    - type
    - cookbookUrl
    x-abstractType:
      $ref: '#/definitions/ChefBootstrapConfiguration'
    x-discriminator: type
  CloudFeatures:
    description: Cloud specifics Farm Role configuration.
    discriminator: type
    properties:
      type:
        enum:
        - AwsCloudFeatures
        - AzureCloudFeatures
        - VmwareCloudFeatures
        - GceCloudFeatures
        type: string
    required:
    - type
    x-concreteTypes:
    - $ref: '#/definitions/GceCloudFeatures'
    - $ref: '#/definitions/AzureCloudFeatures'
    - $ref: '#/definitions/AwsCloudFeatures'
    - $ref: '#/definitions/VmwareCloudFeatures'
    x-createOnly:
    - type
  CloudLocation:
    properties:
      cloudLocation: &id010
        description: 'Cloud Location, inside a given Cloud Platform, for this resource.
          May be null if this resource does not have a specific location. Note: if
          you would like to filter on this property, you **must** also filter on `cloudPlatform`.'
        type: string
      cloudPlatform: &id011
        description: The Cloud Platform this resource resides in.
        enum: &id002
        - ec2
        - gce
        - azure
        - cloudstack
        - idcf
        - openstack
        - ocs
        - rackspacenguk
        - rackspacengus
        - hpcloud
        - mirantis
        - vio
        - cisco
        - vmware
        type: string
    required:
    - cloudPlatform
    x-filterable:
    - cloudPlatform
    - cloudLocation
    x-usedIn:
    - /user/{envId}/images/{imageId}/actions/copy/
  CloudLocationListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/CloudLocation'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/CloudLocation'
    x-usedIn:
    - /user/{envId}/clouds/{cloudPlatform}/cloud-locations/
  CloudNetworkForeignKey:
    properties:
      id:
        type: string
    required:
    - id
  CloudSnapshotForeignKey:
    properties:
      id:
        description: Cloud Snapshot identifier.
        type: string
    required:
    - id
  CloudSubnetForeignKey:
    properties:
      id:
        type: string
    required:
    - id
  ComposedTeamIdentity:
    properties:
      id:
        description: Unique identifier for a Team.
        type: integer
      name:
        description: Team name.
        readOnly: true
        type: string
    required:
    - id
  ComposedUserIdentity:
    properties:
      email:
        description: Email of the owner of the Farm.
        format: email
        readOnly: true
        type: string
      id:
        description: Unique identifier for an User.
        type: integer
    required:
    - id
  CostCenter:
    properties:
      billingCode:
        readOnly: true
        type: string
      id:
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      name:
        type: string
    required:
    - name
    x-filterable:
    - id
    - name
    - billingCode
    x-usedIn:
    - /user/{envId}/cost-centers/{costCenterId}/
  CostCenterDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/CostCenter'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/CostCenter'
    x-usedIn:
    - /user/{envId}/cost-centers/{costCenterId}/
  CostCenterForeignKey:
    properties:
      id:
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/CostCenter'
    x-references:
      $ref: '#/definitions/CostCenter'
  CostCenterListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/CostCenter'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/CostCenter'
    x-usedIn:
    - /user/{envId}/cost-centers/
  CreateFarmRequest:
    properties:
      description:
        type: string
      launchOrder:
        default: simultaneous
        enum:
        - simultaneous
        - sequential
        type: string
      name:
        type: string
      project:
        $ref: '#/definitions/ProjectForeignKey'
      teams:
        description: List of the Teams that have access to this Farm.
        items:
          $ref: '#/definitions/ComposedTeamIdentity'
        type: array
      timezone:
        type: string
    required:
    - name
    - project
    x-usedIn:
    - /user/{envId}/farms/
  DateAndTimeScalingRule:
    description: This Scaling Rule defines the number of instances that should be
      running during specified time frames.
    properties:
      name:
        description: Scaling rule name.
        enum:
        - DateAndTime
        type: string
      ruleType:
        enum:
        - BasicScalingRule
        - LoadAveragesScalingRule
        - FreeRamScalingRule
        - UrlResponseTimeScalingRule
        - SqsQueueSizeScalingRule
        - DateAndTimeScalingRule
        - BandWidthScalingRule
        type: string
      schedule:
        items:
          $ref: '#/definitions/ScalingRuleTimeFrame'
        type: array
    required:
    - name
    - ruleType
    - schedule
    x-abstractType:
      $ref: '#/definitions/ScalingRule'
    x-createOnly:
    - name
    - ruleType
    x-discriminator: ruleType
    x-filterable:
    - name
    - ruleType
  EphemeralStorageConfiguration:
    properties:
      id:
        description: Identifier of the Storage.
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      mounting:
        $ref: '#/definitions/MountConfiguration'
        description: Configuration contains the necessary information to automate
          the process of mounting partitions.
      template:
        $ref: '#/definitions/EphemeralStorageTemplate'
        description: Volume template.
      type:
        description: Storage configuration type.
        enum:
        - PersistentStorageConfiguration
        - RootStorageConfiguration
        - EphemeralStorageConfiguration
        type: string
    required:
    - type
    - template
    x-abstractType:
      $ref: '#/definitions/StorageConfiguration'
    x-createOnly:
    - type
    x-discriminator: type
  EphemeralStorageTemplate:
    description: Storage Template configuration.
    properties:
      name:
        description: The volume name.
        type: string
      size:
        description: The size of the volume, in GB.
        type: integer
  Event:
    properties:
      description:
        type: string
      id:
        description: The name of this Custom Event.
        maxLength: 25
        pattern: '[A-Za-z0-9]+'
        type: string
      scope:
        enum: *id001
        readOnly: true
        type: string
    required:
    - id
    x-createOnly:
    - id
    x-filterable:
    - id
    - scope
    x-usedIn:
    - /user/{envId}/events/
    - /user/{envId}/events/{eventId}/actions/fire/
    - /user/{envId}/events/{eventId}/
  EventDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Event'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Event'
    x-usedIn:
    - /user/{envId}/events/
    - /user/{envId}/events/{eventId}/
  EventForeignKey:
    properties:
      id:
        description: The name of this Custom Event.
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/Event'
    x-references:
      $ref: '#/definitions/Event'
  EventListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Event'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Event'
    x-usedIn:
    - /user/{envId}/events/
  EventLogEntry:
    properties:
      event:
        $ref: '#/definitions/EventForeignKey'
        description: Identifier of the Event.
        readOnly: true
      farm:
        $ref: '#/definitions/FarmForeignKey'
        description: Identifier of the Farm that triggered the Server is related to.
        readOnly: true
      farmRole:
        $ref: '#/definitions/FarmRoleForeignKey'
        description: Identifier of the Farm Role that triggered the Server is related
          to.
        readOnly: true
      firedBy:
        description: The context that caused fire of the Event.
        enum:
        - ui
        - api
        - system
        readOnly: true
        type: string
      id:
        description: Event log entry identifier.
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      logEntries:
        description: Orchestration log entry identifiers.
        items:
          $ref: '#/definitions/LogEntryForeignKey'
        readOnly: true
        type: array
      server:
        $ref: '#/definitions/ServerForeignKey'
        description: Identifier of the triggered Server.
        readOnly: true
    x-filterable:
    - id
    - server
    - farm
    - event
    - firedBy
    x-usedIn:
    - /user/{envId}/event-logs/{eventLogEntryId}/
  EventLogEntryDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/EventLogEntry'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/EventLogEntry'
    x-usedIn:
    - /user/{envId}/event-logs/{eventLogEntryId}/
    - /user/{envId}/events/{eventId}/actions/fire/
  EventLogEntryListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/EventLogEntry'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/EventLogEntry'
    x-usedIn:
    - /user/{envId}/event-logs/
  Farm:
    properties:
      description:
        type: string
      id:
        description: Identifier of the Farm.
        readOnly: true
        type: integer
      launchOrder:
        default: simultaneous
        enum:
        - simultaneous
        - sequential
        type: string
      locked:
        $ref: '#/definitions/FarmLockOptions'
        description: This property available only for locked Farm and included options
          with which the Farm has been locked.
        readOnly: true
      name:
        type: string
      owner:
        $ref: '#/definitions/ComposedUserIdentity'
        description: Identifier and email of the User who owns the Farm.
      project:
        $ref: '#/definitions/ProjectForeignKey'
      status:
        description: Farm status.
        enum:
        - running
        - suspended
        - terminated
        readOnly: true
        type: string
      teams:
        description: List of the Teams that have access to this Farm.
        items:
          $ref: '#/definitions/ComposedTeamIdentity'
        type: array
      timezone:
        type: string
    required:
    - name
    - project
    x-filterable:
    - id
    - name
    - project
    - launchOrder
    - owner
    - teams
    - timezone
    - status
    x-usedIn:
    - /user/{envId}/farms/{farmId}/actions/suspend/
    - /user/{envId}/farms/{farmId}/actions/resume/
    - /user/{envId}/farms/{farmId}/actions/launch/
    - /user/{envId}/farms/{farmId}/actions/terminate/
    - /user/{envId}/farms/{farmId}/actions/generate-template/
    - /user/{envId}/farms/{farmId}/global-variables/{globalVariableName}/
    - /user/{envId}/farms/{farmId}/farm-roles/
    - /user/{envId}/farms/{farmId}/actions/lock/
    - /user/{envId}/farms/{farmId}/global-variables/
    - /user/{envId}/farms/{farmId}/
    - /user/{envId}/farms/{farmId}/servers/
    - /user/{envId}/farms/{farmId}/actions/unlock/
    - /user/{envId}/farms/{farmId}/actions/clone/
  FarmDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Farm'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Farm'
    x-usedIn:
    - /user/{envId}/farms/{farmId}/actions/suspend/
    - /user/{envId}/farms/{farmId}/actions/resume/
    - /user/{envId}/farms/{farmId}/actions/launch/
    - /user/{envId}/farms/{farmId}/actions/terminate/
    - /user/{envId}/farms/{farmId}/actions/lock/
    - /user/{envId}/farms/{farmId}/
    - /user/{envId}/farms/{farmId}/actions/unlock/
    - /user/{envId}/farms/
    - /user/{envId}/farms/{farmId}/actions/clone/
  FarmForeignKey:
    properties:
      id:
        description: Identifier of the Farm.
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/Farm'
    x-references:
      $ref: '#/definitions/Farm'
  FarmListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Farm'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Farm'
    x-usedIn:
    - /user/{envId}/farms/
  FarmLockOptions:
    properties:
      comment:
        description: A brief comment or explanation.
        readOnly: true
        type: string
      unlockPermission:
        description: 'The field may have a three possible values: ''owner'', ''team''
          or ''anyone''. Owner - operation is allowed only for the owner of the Farm
          Team - operation is allowed only for the members of the Farm''s Team. Anyone
          - operation is allowed for anybody who has access permissions to Farms.'
        enum: &id009
        - owner
        - team
        - anyone
        readOnly: true
        type: string
      user:
        $ref: '#/definitions/UserForeignKey'
        description: The identifier of the User who locked a Farm.
        readOnly: true
  FarmRole:
    properties:
      advancedConfiguration: &id003
        $ref: '#/definitions/FarmRoleAdvancedConfiguration'
        description: Advanced Farm Role configuration.
      alias:
        description: The Alias for this Farm Role.
        type: string
      availabilityZones: &id004
        description: The list of availability zones. This property is available only
          for GCE, Openstack, Azure and AWS based Farm Roles. Please note, that the
          value is required for GCE Farm Roles, but for Openstack and AWS the availability
          zone will be chosen by the cloud engine if property is empty or not specified.
        items:
          type: string
        type: array
      bootstrapping: &id005
        $ref: '#/definitions/BootstrapConfiguration'
        description: Farm Role bootstrap configuration. Please note this property
          is available only for Farm Roles configured with enabled Chef built-in automation.
      cloudFeatures: &id006
        $ref: '#/definitions/CloudFeatures'
        description: Cloud specifics Farm Role configuration. This property is available
          only for Azure and AWS based Farm Roles. Please note, that the value is
          required for AzureConfiguration.
      cloudLocation:
        description: The Cloud Location.
        type: string
      cloudPlatform:
        description: The Cloud Platform this Farm Role runs on.
        enum:
        - ec2
        - gce
        - azure
        - cloudstack
        - idcf
        - openstack
        - ocs
        - rackspacenguk
        - rackspacengus
        - hpcloud
        - mirantis
        - vio
        - cisco
        - vmware
        type: string
      farm:
        $ref: '#/definitions/FarmForeignKey'
        description: Farm this Farm Role should be added to.
        readOnly: true
      id:
        description: Unique identifier for this Farm Role.
        readOnly: true
        type: integer
      instanceType:
        $ref: '#/definitions/InstanceTypeForeignKey'
        description: The instance type that should be used for all instances related
          to this Farm Role.
      launchIndex:
        description: Launch index for this Farm Role.
        type: integer
      networking: &id007
        $ref: '#/definitions/NetworkConfiguration'
        description: Farm Role network configuration. Please note that this property
          is not available for AWS Farm Roles that weren't launched inside Amazon
          VPC.
      role:
        $ref: '#/definitions/RoleIdentity'
        description: Identifier of the Role.
      scaling:
        $ref: '#/definitions/ScalingConfiguration'
        description: Farm Role scaling configuration.
      security: &id008
        $ref: '#/definitions/SecurityConfiguration'
    required:
    - role
    - cloudPlatform
    - cloudLocation
    - instanceType
    - alias
    x-createOnly:
    - cloudPlatform
    - cloudLocation
    x-filterable:
    - id
    - alias
    - farm
    - role
    - cloudPlatform
    - cloudLocation
    x-usedIn:
    - /user/{envId}/farm-roles/{farmRoleId}/global-variables/
    - /user/{envId}/farm-roles/{farmRoleId}/actions/import-server/
    - /user/{envId}/farm-roles/{farmRoleId}/global-variables/{globalVariableName}/
    - /user/{envId}/farm-roles/{farmRoleId}/storage/
    - /user/{envId}/farm-roles/{farmRoleId}/scaling/
    - /user/{envId}/farm-roles/{farmRoleId}/scaling/{metricName}/
    - /user/{envId}/farm-roles/{farmRoleId}/orchestration-rules/
    - /user/{envId}/farms/{farmId}/farm-roles/
    - /user/{envId}/farm-roles/{farmRoleId}/storage/{storageConfigurationId}/
    - /user/{envId}/farm-roles/{farmRoleId}/orchestration-rules/{orchestrationRuleId}/
    - /user/{envId}/farm-roles/{farmRoleId}/
    - /user/{envId}/farm-roles/{farmRoleId}/servers/
  FarmRoleAdvancedConfiguration:
    properties:
      disableAgentIptablesManagement:
        default: false
        description: 'General scalr agent option: Enable/Disable scalr agent management
          of iptables.'
        type: boolean
      disableAgentNtpManagement:
        default: false
        description: 'General scalr agent option: Enable/Disable scalr agent time
          synchronization.'
        type: boolean
      instanceName:
        description: The instance name in the cloud. Please note this property is
          available for AWS, OpenStack and VMware based Farm Roles.
        type: string
      rebootAfterHostInit:
        default: false
        description: 'Orchestration HostInit behavior: Enable/Disable reboot after
          HostInit Scripts have executed.'
        type: boolean
  FarmRoleAnsibleTowerConfiguration:
    properties:
      id:
        description: The Ansible Tower configuration identifier.
        type: integer
      name:
        description: The Ansible Tower configuration name.
        type: string
      scope:
        description: The scope of AnsiblTower bootstrap configuration. Property is
          returned only with FarmTemplates.
        enum:
        - role
        - farmrole
        readOnly: true
        type: string
      variables:
        description: The Ansible Tower variables to override. JSON or YAML representation.
        type: string
  FarmRoleDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/FarmRole'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/FarmRole'
    x-usedIn:
    - /user/{envId}/farms/{farmId}/farm-roles/
    - /user/{envId}/farm-roles/{farmRoleId}/
  FarmRoleForeignKey:
    properties:
      id:
        description: Unique identifier for this Farm Role.
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/FarmRole'
    x-references:
      $ref: '#/definitions/FarmRole'
  FarmRoleIdentity:
    properties:
      alias:
        description: The Alias for this Farm Role.
        type: string
      id:
        description: Unique identifier for this Farm Role.
        readOnly: true
        type: integer
    required:
    - alias
  FarmRoleNetwork:
    properties:
      associatePublicIpAddress:
        description: Whether we need to associate a public IP address to the instance
          of the current Farm Role.
        type: boolean
      id:
        type: string
      ipPool:
        $ref: '#/definitions/IpPoolForeignKey'
        description: Identifier of the IpPool configuration.
      primary:
        description: Whether this network is primary. Only one network from the list
          can be primary. If primary flag is omitted in all networks first network
          will be marked as primary.
        type: boolean
    required:
    - id
  FarmRoleSummary:
    properties:
      alias:
        description: The Alias for this Farm Role.
        type: string
      cloudLocation:
        description: The Cloud Location.
        type: string
      cloudPlatform:
        description: The Cloud Platform this Farm Role runs on.
        enum: *id002
        type: string
      farm:
        $ref: '#/definitions/FarmForeignKey'
        description: Farm this Farm Role should be added to.
        readOnly: true
      id:
        description: Unique identifier for this Farm Role.
        readOnly: true
        type: integer
      instanceType:
        $ref: '#/definitions/InstanceTypeForeignKey'
        description: The instance type that should be used for all instances related
          to this Farm Role.
      launchIndex:
        description: Launch index for this Farm Role.
        type: integer
      role:
        $ref: '#/definitions/RoleIdentity'
        description: Identifier of the Role.
    required:
    - role
    - cloudPlatform
    - cloudLocation
    - instanceType
    - alias
    x-createOnly:
    - cloudPlatform
    - cloudLocation
    x-filterable:
    - id
    - alias
    - farm
    - role
    - cloudPlatform
    - cloudLocation
  FarmRoleSummaryListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/FarmRoleSummary'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/FarmRoleSummary'
    x-usedIn:
    - /user/{envId}/farms/{farmId}/farm-roles/
  FarmRoleTemplateContent:
    properties:
      advancedConfiguration: *id003
      alias:
        description: The Alias for this Farm Role.
        type: string
      availabilityZones: *id004
      bootstrapping: *id005
      cloudFeatures: *id006
      cloudLocation:
        description: The Cloud Location.
        type: string
      cloudPlatform:
        description: The Cloud Platform this Farm Role runs on.
        enum: *id002
        type: string
      instanceType:
        $ref: '#/definitions/InstanceTypeForeignKey'
        description: The instance type that should be used for all instances related
          to this Farm Role.
      launchIndex:
        description: Launch index for this Farm Role.
        type: integer
      networking: *id007
      orchestration:
        $ref: '#/definitions/OrchestrationTemplateContent'
        description: Farm Role orchestration configuration.
      role:
        $ref: '#/definitions/RoleIdentityTemplateContent'
        description: Identifier of the Role.
      scaling:
        $ref: '#/definitions/ScalingTemplateContent'
      security: *id008
      storage:
        description: Storage configuration
        items:
          $ref: '#/definitions/StorageConfiguration'
        type: array
      variables:
        description: Farm Role Global Variables.
        items:
          $ref: '#/definitions/GlobalVariableTemplateContent'
        type: array
    x-createOnly:
    - cloudLocation
    - cloudPlatform
  FarmRolesCondition:
    properties:
      farmRoles:
        description: Farm Role identity objects.
        items:
          $ref: '#/definitions/FarmRoleIdentity'
        type: array
      type:
        description: Orchestration rule condition type. Selected only those servers
          that match conditions.
        enum:
        - FarmRolesCondition
        - OsCondition
        - TagsCondition
        type: string
    required:
    - type
    x-abstractType:
      $ref: '#/definitions/OrchestrationRuleCondition'
    x-discriminator: type
  FarmTarget:
    description: Selects all the Servers that belong to the triggering Server's Farm.
    properties:
      conditions:
        description: 'Triggering servers conditions. '
        items:
          $ref: '#/definitions/OrchestrationRuleCondition'
        type: array
      targetType:
        enum:
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-abstractType:
      $ref: '#/definitions/Target'
    x-discriminator: targetType
  FarmTemplate:
    properties:
      _meta:
        $ref: '#/definitions/TemplateMetadata'
      farm:
        $ref: '#/definitions/FarmTemplateContent'
        description: Farm properties.
      roles:
        description: Farm Role properties that belong to the current Farm.
        items:
          $ref: '#/definitions/FarmRoleTemplateContent'
        type: array
  FarmTemplateContent:
    properties:
      description:
        type: string
      launchOrder:
        default: simultaneous
        enum:
        - simultaneous
        - sequential
        type: string
      locked:
        $ref: '#/definitions/FarmTemplateContentLockOptions'
        description: Farm lock options.
      name:
        type: string
      project:
        $ref: '#/definitions/ProjectForeignKey'
      teams:
        description: List of the Teams that have access to this Farm.
        items:
          $ref: '#/definitions/ComposedTeamIdentity'
        type: array
      timezone:
        type: string
      variables:
        description: Farm Global variable.
        items:
          $ref: '#/definitions/GlobalVariableTemplateContent'
        type: array
    required:
    - name
    - project
    x-createOnly:
    - locked
  FarmTemplateContentLockOptions:
    properties:
      comment:
        description: A brief comment or explanation.
        type: string
      unlockPermission:
        description: 'The field may have a three possible values: ''owner'', ''team''
          or ''anyone''. Owner - operation is allowed only for the owner of the Farm
          Team - operation is allowed only for the members of the Farm''s Team. Anyone
          - operation is allowed for anybody who has access permissions to Farms.'
        enum: *id009
        type: string
    required:
    - comment
    x-createOnly:
    - comment
    - unlockPermission
  FarmTemplateDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/FarmTemplate'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/FarmTemplate'
    x-usedIn:
    - /user/{envId}/farms/{farmId}/actions/generate-template/
  FreeRamScalingRule:
    description: It is used in combination with the user defined Scaling Metrics.
    properties:
      name:
        description: Scaling rule name.
        enum:
        - FreeRam
        type: string
      ruleType:
        enum:
        - BasicScalingRule
        - LoadAveragesScalingRule
        - FreeRamScalingRule
        - UrlResponseTimeScalingRule
        - SqsQueueSizeScalingRule
        - DateAndTimeScalingRule
        - BandWidthScalingRule
        type: string
      scaleDown:
        description: Scale down threshold.
        type: number
      scaleUp:
        description: Scale up threshold.
        type: number
      useCachedRam:
        description: Whether the cached RAM is counted as free RAM in the metric computation.
        type: boolean
    required:
    - name
    - ruleType
    - scaleUp
    - scaleDown
    x-abstractType:
      $ref: '#/definitions/BasicScalingRule'
    x-createOnly:
    - name
    - ruleType
    x-discriminator: ruleType
    x-filterable:
    - name
    - ruleType
  GceCloudFeatures:
    description: GCE Farm Role configuration. Available only for GCE Farm Roles.
    properties:
      networkTags:
        description: The list of Network tags. These tags are used by networks to
          identify which instances are subject to certain firewall rules and network
          routes. Tags name must conform RFC1035.
        items:
          type: string
        type: array
      serviceAccount:
        $ref: '#/definitions/GceServiceAccount'
        description: The  Service Accounts for Instances.
      type:
        enum:
        - AwsCloudFeatures
        - AzureCloudFeatures
        - VmwareCloudFeatures
        - GceCloudFeatures
        type: string
    required:
    - type
    x-abstractType:
      $ref: '#/definitions/CloudFeatures'
    x-createOnly:
    - type
    x-discriminator: type
  GceServiceAccount:
    properties:
      email:
        description: Email address of the service account.
        format: email
        type: string
    required:
    - email
  GlobalVariable:
    properties:
      category:
        description: The category of this Global Variable.
        type: string
      computedCategory:
        description: The category computed by Scalr for this Global Variable.
        readOnly: true
        type: string
      computedValue:
        description: The value computed by Scalr for this Global Variable.
        readOnly: true
        type: string
      declaredIn:
        description: The Scope in which this Global Variable is declared.
        enum: *id001
        readOnly: true
        type: string
      definedIn:
        description: The Scope in which this Global Vsariable is given a value.
        enum: *id001
        readOnly: true
        type: string
      description:
        description: A description that explains what this Global Variable is used
          for.
        type: string
      hidden:
        description: Whether this Global Variable is hidden in inner scopes. This
          is read-only if `declaredIn` is not the current scope.
        type: boolean
      locked:
        description: Whether this Global Variable is locked in inner scopes. This
          is read-only if `declaredIn` is not the current scope.
        type: boolean
      name:
        type: string
      outputFormat:
        description: The formatting to apply when displaying this variable. This is
          read-only if `declaredIn` is not the current scope.
        type: string
      requiredIn:
        description: The scope where this Global Variable is required. This is read-only
          if `declaredIn` is not the current scope.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        type: string
      validationPattern:
        description: A validation pattern to apply in inner scopes. This is read-only
          if `declaredIn` is not the current scope.
        type: string
      value:
        description: The value declared in the current scope for this Global Variable.
          If it is null, the value will be inherited from higher scopes. This field
          is ignored if `declaredIn` is not the current scope.
        type: string
    required:
    - name
    x-createOnly:
    - name
    x-usedIn:
    - /user/{envId}/global-variables/{globalVariableName}/
    - /user/{envId}/farm-roles/{farmRoleId}/global-variables/
    - /user/{envId}/global-variables/
    - /user/{envId}/farm-roles/{farmRoleId}/global-variables/{globalVariableName}/
    - /user/{envId}/roles/{roleId}/global-variables/{globalVariableName}/
    - /user/{envId}/roles/{roleId}/global-variables/
    - /user/{envId}/farms/{farmId}/global-variables/{globalVariableName}/
    - /user/{envId}/farms/{farmId}/global-variables/
    - /user/{envId}/servers/{serverId}/global-variables/
    - /user/{envId}/servers/{serverId}/global-variables/{globalVariableName}/
  GlobalVariableDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/GlobalVariable'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/GlobalVariable'
    x-usedIn:
    - /user/{envId}/global-variables/{globalVariableName}/
    - /user/{envId}/farm-roles/{farmRoleId}/global-variables/
    - /user/{envId}/global-variables/
    - /user/{envId}/farm-roles/{farmRoleId}/global-variables/{globalVariableName}/
    - /user/{envId}/roles/{roleId}/global-variables/{globalVariableName}/
    - /user/{envId}/roles/{roleId}/global-variables/
    - /user/{envId}/farms/{farmId}/global-variables/{globalVariableName}/
    - /user/{envId}/farms/{farmId}/global-variables/
    - /user/{envId}/servers/{serverId}/global-variables/
    - /user/{envId}/servers/{serverId}/global-variables/{globalVariableName}/
  GlobalVariableListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/GlobalVariable'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/GlobalVariable'
    x-usedIn:
    - /user/{envId}/farm-roles/{farmRoleId}/global-variables/
    - /user/{envId}/global-variables/
    - /user/{envId}/roles/{roleId}/global-variables/
    - /user/{envId}/farms/{farmId}/global-variables/
    - /user/{envId}/servers/{serverId}/global-variables/
  GlobalVariableTemplateContent:
    properties:
      category:
        description: The category of this Global Variable.
        type: string
      description:
        description: A description that explains what this Global Variable is used
          for.
        type: string
      hidden:
        description: Whether this Global Variable is hidden in inner scopes. This
          is read-only if `declaredIn` is not the current scope.
        type: boolean
      locked:
        description: Whether this Global Variable is locked in inner scopes. This
          is read-only if `declaredIn` is not the current scope.
        type: boolean
      name:
        type: string
      outputFormat:
        description: The formatting to apply when displaying this variable. This is
          read-only if `declaredIn` is not the current scope.
        type: string
      requiredIn:
        description: The scope where this Global Variable is required. This is read-only
          if `declaredIn` is not the current scope.
        enum: *id001
        type: string
      validationPattern:
        description: A validation pattern to apply in inner scopes. This is read-only
          if `declaredIn` is not the current scope.
        type: string
      value:
        description: The value declared in the current scope for this Global Variable.
          If it is null, the value will be inherited from higher scopes. This field
          is ignored if `declaredIn` is not the current scope.
        type: string
    required:
    - name
    x-createOnly:
    - name
  HostnameConfiguration:
    description: Farm Role hostname configuration.
    discriminator: type
    properties:
      type:
        description: Hostname configuration type.
        enum:
        - TemplateHostnameConfiguration
        - WebhookHostnameConfiguration
        type: string
    required:
    - type
    x-concreteTypes:
    - $ref: '#/definitions/TemplateHostnameConfiguration'
    - $ref: '#/definitions/WebhookHostnameConfiguration'
  Image:
    properties:
      added:
        description: Date and time at which this Image was created.
        format: date-time
        readOnly: true
        type: string
      architecture:
        enum: &id012
        - i386
        - x86_64
        type: string
      cloudFeatures:
        $ref: '#/definitions/ImageCloudFeatures'
      cloudImageId:
        type: string
      cloudInitInstalled:
        description: Whether cloud-init is installed on this Image.
        type: boolean
      cloudLocation: *id010
      cloudPlatform: *id011
      deprecated:
        description: Whether this Image is deprecated.
        type: boolean
      id:
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      lastUsed:
        description: Date and time at which this Image was last used.
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      os:
        $ref: '#/definitions/OsForeignKey'
      scalrAgentInstalled:
        description: Whether Scalarizer is installed on this Image.
        type: boolean
      scope:
        enum: *id001
        readOnly: true
        type: string
      size:
        description: Size of the image in GB. This property is read-only at the Environment
          scope.
        type: integer
      source:
        description: Indicates how this Image was created.
        enum:
        - Manual
        - BundleTask
        readOnly: true
        type: string
      status:
        description: Current status for this Image. `failed` means that the deletion
          failed.
        enum:
        - active
        - pending_delete
        - failed
        readOnly: true
        type: string
      statusError:
        description: If the Image is in a failed state, this indicates why.
        readOnly: true
        type: string
      type:
        description: (Only used on EC2 currently) Whether this Image is HVM or EBS.
          At the Environment scope this property is read-only. Property is deprecated
          and will be removed soon. Use 'cloudFeatures' instead.
        type: string
    required:
    - name
    - cloudPlatform
    - cloudImageId
    - architecture
    - os
    x-createOnly:
    - cloudImageId
    - size
    - type
    - scalrAgentInstalled
    - cloudInitInstalled
    - cloudLocation
    - cloudPlatform
    - os
    - architecture
    - cloudFeatures
    x-filterable:
    - id
    - name
    - scope
    - cloudPlatform
    - cloudLocation
    - cloudImageId
    - architecture
    - source
    - status
    - deprecated
    - os
    - scalrAgentInstalled
    - cloudInitInstalled
    x-usedIn:
    - /user/{envId}/roles/{roleId}/images/{imageId}/
    - /user/{envId}/images/
    - /user/{envId}/images/{imageId}/actions/replace/
    - /user/{envId}/roles/{roleId}/images/{imageId}/actions/replace/
    - /user/{envId}/images/{imageId}/
    - /user/{envId}/images/{imageId}/actions/copy/
  ImageCloudFeatures:
    description: Cloud specifics Image configuration.
    discriminator: type
    properties:
      type:
        enum:
        - AwsImageCloudFeatures
        - VmwareImageCloudFeatures
        type: string
    required:
    - type
    x-concreteTypes:
    - $ref: '#/definitions/VmwareImageCloudFeatures'
    - $ref: '#/definitions/AwsImageCloudFeatures'
  ImageDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Image'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Image'
    x-usedIn:
    - /user/{envId}/roles/{roleId}/images/{imageId}/
    - /user/{envId}/images/
    - /user/{envId}/images/{imageId}/
    - /user/{envId}/images/{imageId}/actions/copy/
  ImageForeignKey:
    properties:
      id:
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/Image'
    x-references:
      $ref: '#/definitions/Image'
  ImageListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Image'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Image'
    x-usedIn:
    - /user/{envId}/images/
  InitializationStatus:
    properties:
      message:
        description: The initialization status description.
        readOnly: true
        type: string
      status:
        description: The status of the Scalr Agent initialization.
        enum:
        - insufficient-data
        - initializing
        - ok
        - failed
        readOnly: true
        type: string
  InstanceType:
    properties:
      cloudFeatures:
        $ref: '#/definitions/InstanceTypeCloudFeatures'
        description: Cloud specific parameters related to Instance Type.
        readOnly: true
      id:
        description: Identifier of the InstanceType object.
        readOnly: true
        type: string
      memory:
        description: Memory in GB allocated for the Instance.
        readOnly: true
        type: number
      name:
        description: The Instance Type Name in the Cloud.
        readOnly: true
        type: string
      storage:
        description: Total disks size in GB.
        readOnly: true
        type: integer
      vcpus:
        description: Virtual CPUs count.
        readOnly: true
        type: integer
    x-filterable:
    - id
    - name
    - storage
  InstanceTypeCloudFeatures:
    description: Cloud specific Instance type configuration.
    discriminator: type
    properties:
      type:
        enum:
        - AwsInstanceTypeCloudFeatures
        type: string
    required:
    - type
    x-concreteTypes:
    - $ref: '#/definitions/AwsInstanceTypeCloudFeatures'
  InstanceTypeForeignKey:
    properties:
      id:
        description: Identifier of the InstanceType object.
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/InstanceType'
    x-references:
      $ref: '#/definitions/InstanceType'
  InstanceTypeListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/InstanceType'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/InstanceType'
    x-usedIn:
    - /user/{envId}/clouds/{cloudPlatform}/cloud-locations/{cloudLocation}/instance-types/
  IpPoolForeignKey:
    properties:
      id:
        description: Identifier of the IpPool configuration.
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        type: string
    required:
    - id
  JobTemplateIdentity:
    properties:
      id:
        description: The Ansible Tower Job template identifier.
        type: integer
      name:
        description: The Ansible Tower Job template name.
        type: string
  LoadAveragesScalingRule:
    description: It is used in combination with the user defined Scaling Metrics.
    properties:
      calculatingPeriod:
        description: Period in minutes during which to aggregate the Metric Value.
        type: integer
      name:
        description: Scaling rule name.
        enum:
        - LoadAverages
        type: string
      ruleType:
        enum:
        - BasicScalingRule
        - LoadAveragesScalingRule
        - FreeRamScalingRule
        - UrlResponseTimeScalingRule
        - SqsQueueSizeScalingRule
        - DateAndTimeScalingRule
        - BandWidthScalingRule
        type: string
      scaleDown:
        description: Scale down threshold.
        type: number
      scaleUp:
        description: Scale up threshold.
        type: number
    required:
    - name
    - ruleType
    - scaleUp
    - scaleDown
    - calculatingPeriod
    x-abstractType:
      $ref: '#/definitions/BasicScalingRule'
    x-createOnly:
    - name
    - ruleType
    x-discriminator: ruleType
    x-filterable:
    - name
    - ruleType
  LocalScriptAction:
    properties:
      actionType:
        enum:
        - ScalrScriptAction
        - RemoteScriptAction
        - ChefAction
        - LocalScriptAction
        - AnsibleTowerAction
        type: string
      path:
        description: Path to the script to execute.
        type: string
    required:
    - actionType
    - path
    x-abstractType:
      $ref: '#/definitions/Action'
    x-discriminator: actionType
  LogEntry:
    properties:
      executionExitCode:
        description: The exit status code of the Script. The value is zero when the
          script is executed successfully and non-zero when it fails.
        readOnly: true
        type: integer
      executionTime:
        description: Total Script execution time in seconds.
        readOnly: true
        type: integer
      farm:
        $ref: '#/definitions/FarmForeignKey'
        description: Identifier of the Farm that the target Server is related to.
        readOnly: true
      farmRole:
        $ref: '#/definitions/FarmRoleForeignKey'
        description: Identifier of the Farm Role that the target Server is related
          to.
        readOnly: true
      id:
        description: Orchestration log entry identifier.
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      result:
        description: The result of the Script execution.
        readOnly: true
        type: string
      scriptName:
        description: The name of the Script that is executed.
        readOnly: true
        type: string
      server:
        $ref: '#/definitions/ServerForeignKey'
        description: Identifier of the target Server.
        readOnly: true
      triggeredBy:
        description: The context that caused excecution of the Script.
        enum:
        - ui
        - api
        - system
        readOnly: true
        type: string
    x-filterable:
    - id
    - server
    - farm
    - triggeredBy
    x-usedIn:
    - /user/{envId}/orchestration-logs/{logEntryId}/
  LogEntryDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/LogEntry'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/LogEntry'
    x-usedIn:
    - /user/{envId}/orchestration-logs/{logEntryId}/
  LogEntryForeignKey:
    properties:
      id:
        description: Orchestration log entry identifier.
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/LogEntry'
    x-references:
      $ref: '#/definitions/LogEntry'
  LogEntrySummary:
    properties:
      executionExitCode:
        description: The exit status code of the Script. The value is zero when the
          script is executed successfully and non-zero when it fails.
        readOnly: true
        type: integer
      executionTime:
        description: Total Script execution time in seconds.
        readOnly: true
        type: integer
      farm:
        $ref: '#/definitions/FarmForeignKey'
        description: Identifier of the Farm that the target Server is related to.
        readOnly: true
      farmRole:
        $ref: '#/definitions/FarmRoleForeignKey'
        description: Identifier of the Farm Role that the target Server is related
          to.
        readOnly: true
      id:
        description: Orchestration log entry identifier.
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      scriptName:
        description: The name of the Script that is executed.
        readOnly: true
        type: string
      server:
        $ref: '#/definitions/ServerForeignKey'
        description: Identifier of the target Server.
        readOnly: true
      triggeredBy:
        description: The context that caused excecution of the Script.
        enum:
        - ui
        - api
        - system
        readOnly: true
        type: string
    x-filterable:
    - id
    - server
    - farm
    - triggeredBy
  LogEntrySummaryListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/LogEntrySummary'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/LogEntrySummary'
    x-usedIn:
    - /user/{envId}/orchestration-logs/
  MountConfiguration:
    properties:
      enabled:
        description: Whether the storage should be mounted automatically.
        type: boolean
      fileSystem:
        enum:
        - ext3
        - ext4
        - xfs
        - ntfs
        type: string
      mountPoint:
        description: The mount point.
        type: string
      options:
        description: Mount options or disk label.
        type: string
  NetworkConfiguration:
    description: Farm Role network configuration.
    properties:
      hostname:
        $ref: '#/definitions/HostnameConfiguration'
        description: Hostname configuration
      networks:
        description: The network identifiers.
        items:
          $ref: '#/definitions/FarmRoleNetwork'
        type: array
      subnets:
        description: The subnet identifiers.
        items:
          $ref: '#/definitions/CloudSubnetForeignKey'
        type: array
  OrchestrationRule:
    properties:
      action:
        $ref: '#/definitions/Action'
        description: Orchestration Rule action that will be executed on the target
          servers.
      blocking:
        description: Whether this Orchestration Rule's execution should delay the
          execution of further Orchestration Rules and the triggering of further Events.
          Defaults to the action's default when null.
        type: boolean
      enabled:
        default: true
        description: If Orchestration Rule is not enabled this Rule won't be triggered
        type: boolean
      id:
        description: Unique identifier for an Orchestration Rule.
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      order:
        description: The priority of this Orchestration Rule relative to other Orchestration
          Rules that use the same triggeringEvent. Default is relative to existing
          Rules.
        type: integer
      runAs:
        description: User the Orchestration Rule should execute as. Defaults to root
          / Administrator when null.
        type: string
      scope:
        enum: *id001
        readOnly: true
        type: string
      target:
        $ref: '#/definitions/Target'
        description: The set of Servers where the Orchestration Rules Action will
          be executed.
      timeout:
        description: The time Scalr should wait for before aborting the execution
          of this Orchestration Rule, in seconds. Defaults to the action's default
          when null.
        type: integer
      trigger:
        $ref: '#/definitions/Trigger'
        description: Orchestration Rule trigger.
    required:
    - trigger
    - action
    - target
    x-filterable:
    - id
    - blocking
    - order
    - runAs
    x-usedIn:
    - /user/{envId}/orchestration-rules/{orchestrationRuleId}/
    - /user/{envId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}/
    - /user/{envId}/roles/{roleId}/orchestration-rules/
    - /user/{envId}/farm-roles/{farmRoleId}/orchestration-rules/
    - /user/{envId}/orchestration-rules/
    - /user/{envId}/farm-roles/{farmRoleId}/orchestration-rules/{orchestrationRuleId}/
  OrchestrationRuleCondition:
    discriminator: type
    properties:
      type:
        description: Orchestration rule condition type. Selected only those servers
          that match conditions.
        enum:
        - FarmRolesCondition
        - OsCondition
        - TagsCondition
        type: string
    required:
    - type
    x-concreteTypes:
    - $ref: '#/definitions/FarmRolesCondition'
    - $ref: '#/definitions/TagsCondition'
    - $ref: '#/definitions/OsCondition'
  OrchestrationRuleDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/OrchestrationRule'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/OrchestrationRule'
    x-usedIn:
    - /user/{envId}/orchestration-rules/{orchestrationRuleId}/
    - /user/{envId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}/
    - /user/{envId}/roles/{roleId}/orchestration-rules/
    - /user/{envId}/farm-roles/{farmRoleId}/orchestration-rules/
    - /user/{envId}/orchestration-rules/
    - /user/{envId}/farm-roles/{farmRoleId}/orchestration-rules/{orchestrationRuleId}/
  OrchestrationRuleListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/OrchestrationRule'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/OrchestrationRule'
    x-usedIn:
    - /user/{envId}/roles/{roleId}/orchestration-rules/
    - /user/{envId}/farm-roles/{farmRoleId}/orchestration-rules/
    - /user/{envId}/orchestration-rules/
  OrchestrationRuleTemplateContent:
    properties:
      action:
        $ref: '#/definitions/Action'
        description: Orchestration Rule action that will be executed on the target
          servers.
      blocking:
        description: Whether this Orchestration Rule's execution should delay the
          execution of further Orchestration Rules and the triggering of further Events.
          Defaults to the action's default when null.
        type: boolean
      enabled:
        default: true
        description: If Orchestration Rule is not enabled this Rule won't be triggered
        type: boolean
      order:
        description: The priority of this Orchestration Rule relative to other Orchestration
          Rules that use the same triggeringEvent. Default is relative to existing
          Rules.
        type: integer
      runAs:
        description: User the Orchestration Rule should execute as. Defaults to root
          / Administrator when null.
        type: string
      target:
        $ref: '#/definitions/Target'
        description: The set of Servers where the Orchestration Rules Action will
          be executed.
      timeout:
        description: The time Scalr should wait for before aborting the execution
          of this Orchestration Rule, in seconds. Defaults to the action's default
          when null.
        type: integer
      trigger:
        $ref: '#/definitions/Trigger'
        description: Orchestration Rule trigger.
  OrchestrationTemplateContent:
    properties:
      rules:
        description: Farm Role Orchestration Rules.
        items:
          $ref: '#/definitions/OrchestrationRuleTemplateContent'
        type: array
  Os:
    properties:
      family:
        description: OS family.
        type: string
      generation:
        type: string
      id:
        description: An ID uniquely identifying this OS in Scalr.
        pattern: '[A-Za-z0-9-]+'
        type: string
      name:
        description: A human-readable name for this OS.
        type: string
      version:
        type: string
    required:
    - id
    - name
    - family
    - generation
    - version
    x-filterable:
    - id
    - name
    - family
    - generation
    x-usedIn:
    - /user/{envId}/os/{osId}/
  OsCondition:
    properties:
      osType:
        description: OS family or type.
        type: string
      type:
        description: Orchestration rule condition type. Selected only those servers
          that match conditions.
        enum:
        - FarmRolesCondition
        - OsCondition
        - TagsCondition
        type: string
    required:
    - type
    x-abstractType:
      $ref: '#/definitions/OrchestrationRuleCondition'
    x-discriminator: type
  OsDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Os'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Os'
    x-usedIn:
    - /user/{envId}/os/{osId}/
  OsForeignKey:
    properties:
      id:
        description: An ID uniquely identifying this OS in Scalr.
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/Os'
    x-references:
      $ref: '#/definitions/Os'
  OsListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Os'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Os'
    x-usedIn:
    - /user/{envId}/os/
  PersistentStorageConfiguration:
    properties:
      fromTemplateIfMissing:
        description: If Scalr detects any missing volume it will regenerate this volume.
          Please note when launching Servers for the first time, no storage will be
          available, and Scalar will automatically provision what's needed, regardless
          of this flag.
        type: boolean
      id:
        description: Identifier of the Storage.
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      mounting:
        $ref: '#/definitions/MountConfiguration'
        description: Configuration contains the necessary information to automate
          the process of mounting partitions.
      reUse:
        default: true
        description: When the instance is terminated it won't lead to storage deletion.
          It will be reattached to the new server when it's up.
        type: boolean
      template:
        $ref: '#/definitions/PersistentStorageTemplate'
        description: Volume template.
      type:
        description: Storage configuration type.
        enum:
        - PersistentStorageConfiguration
        - RootStorageConfiguration
        - EphemeralStorageConfiguration
        type: string
    required:
    - type
    - template
    x-abstractType:
      $ref: '#/definitions/StorageConfiguration'
    x-createOnly:
    - type
    x-discriminator: type
  PersistentStorageTemplate:
    description: Storage Template configuration.
    properties:
      cloudFeatures:
        $ref: '#/definitions/StorageTemplateCloudFeatures'
        description: Cloud specifics storage template configuration.
      size:
        description: The size of the volume, in GB.
        type: integer
      sourceSnapshot:
        $ref: '#/definitions/CloudSnapshotForeignKey'
        description: Source snapshot identifier the volume is created from. Please
          note this property is not available for GCE, OpenStack and VMware based
          Farm Roles.
      type:
        description: "Specifies the template type to use for creation of the storage\
          \ configuration. Please note valid value depends on based cloud. For example,\
          \ the following are valid values:\n  - AWS: standard | io1 | gp2 | sc1 |\
          \ st1\n  - GCE: pd-standard | pd-ssd\n  - VMware: provisioning-thick-lazy\
          \ | provisioning-thin | provisioning-thick-eager\n  - CloudStack and OpenStack\
          \ based value depends on cloud configuration\n"
        type: string
    required:
    - type
    - size
  Project:
    properties:
      billingCode:
        type: string
      costCenter:
        $ref: '#/definitions/CostCenterForeignKey'
      description:
        type: string
      id:
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      leadEmail:
        type: string
      name:
        type: string
    required:
    - costCenter
    - billingCode
    - leadEmail
    - name
    x-createOnly:
    - costCenter
    - billingCode
    - leadEmail
    x-filterable:
    - id
    - name
    - costCenter
    - billingCode
    x-usedIn:
    - /user/{envId}/projects/{projectId}/
    - /user/{envId}/projects/
  ProjectDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Project'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Project'
    x-usedIn:
    - /user/{envId}/projects/{projectId}/
    - /user/{envId}/projects/
  ProjectForeignKey:
    properties:
      id:
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/Project'
    x-references:
      $ref: '#/definitions/Project'
  ProjectListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Project'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Project'
    x-usedIn:
    - /user/{envId}/projects/
  ReachabilityStatus:
    properties:
      message:
        description: The reachability status description.
        readOnly: true
        type: string
      status:
        description: The status of the reachability check.
        enum:
        - insufficient-data
        - ok
        - failed
        readOnly: true
        type: string
  RemoteScriptAction:
    properties:
      actionType:
        enum:
        - ScalrScriptAction
        - RemoteScriptAction
        - ChefAction
        - LocalScriptAction
        - AnsibleTowerAction
        type: string
      path:
        description: URL to the script to execute.
        type: string
    required:
    - actionType
    - path
    x-abstractType:
      $ref: '#/definitions/Action'
    x-discriminator: actionType
  Role:
    properties:
      builtinAutomation:
        items:
          enum:
          - base
          - chef
          - mysql
          - percona
          - postgresql
          - redis
          - apache
          - nginx
          - tomcat
          - haproxy
          - rabbitmq
          - memcached
          type: string
        type: array
      category:
        $ref: '#/definitions/RoleCategoryForeignKey'
      deprecated:
        $ref: '#/definitions/RoleDeprecatedOptions'
        description: The deprecation options associated with this Role.
        readOnly: true
      description:
        type: string
      id:
        readOnly: true
        type: integer
      name:
        description: The name of the Role.
        type: string
      os:
        $ref: '#/definitions/OsForeignKey'
      quickStart:
        description: Whether this Role is a QuickStart Role.
        type: boolean
      quickStartGroup:
        description: The name of the QuickStart Group.
        type: string
      scope:
        enum: *id001
        readOnly: true
        type: string
      tags:
        description: The list of tags that should be applied to the Role.
        items:
          type: string
        type: array
      useScalrAgent:
        description: Whether this Role uses Scalarizr, the Scalr agent.
        type: boolean
    required:
    - name
    - category
    - os
    x-createOnly:
    - useScalrAgent
    - builtinAutomation
    - os
    x-filterable:
    - id
    - name
    - os
    - category
    - scope
    - quickStart
    - quickStartGroup
    - useScalrAgent
    - builtinAutomation
    x-usedIn:
    - /user/{envId}/roles/{roleId}/
    - /user/{envId}/roles/{roleId}/images/{imageId}/
    - /user/{envId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}/
    - /user/{envId}/roles/{roleId}/orchestration-rules/
    - /user/{envId}/roles/{roleId}/images/{imageId}/actions/replace/
    - /user/{envId}/roles/{roleId}/global-variables/{globalVariableName}/
    - /user/{envId}/roles/{roleId}/actions/clone/
    - /user/{envId}/roles/{roleId}/global-variables/
    - /user/{envId}/roles/{roleId}/actions/deprecate/
    - /user/{envId}/roles/
    - /user/{envId}/roles/{roleId}/images/
    - /user/{envId}/roles/{roleId}/actions/promote/
  RoleCategory:
    properties:
      id:
        readOnly: true
        type: integer
      name:
        type: string
      scope:
        enum: *id001
        readOnly: true
        type: string
    required:
    - name
    x-filterable:
    - id
    - name
    - scope
    x-usedIn:
    - /user/{envId}/role-categories/{roleCategoryId}/
    - /user/{envId}/role-categories/
  RoleCategoryDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/RoleCategory'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/RoleCategory'
    x-usedIn:
    - /user/{envId}/role-categories/{roleCategoryId}/
    - /user/{envId}/role-categories/
  RoleCategoryForeignKey:
    properties:
      id:
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/RoleCategory'
    x-references:
      $ref: '#/definitions/RoleCategory'
  RoleCategoryListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/RoleCategory'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/RoleCategory'
    x-usedIn:
    - /user/{envId}/role-categories/
  RoleDeprecatedOptions:
    properties:
      deprecated:
        description: The timestamp at which this Role was deprecated.
        format: date-time
        readOnly: true
        type: string
      replacement:
        $ref: '#/definitions/RoleForeignKey'
        description: The suggested replacement Role foreign key for the current Role.
        readOnly: true
  RoleDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Role'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Role'
    x-usedIn:
    - /user/{envId}/roles/{roleId}/
    - /user/{envId}/roles/{roleId}/actions/clone/
    - /user/{envId}/roles/{roleId}/actions/deprecate/
    - /user/{envId}/roles/
    - /user/{envId}/roles/{roleId}/actions/promote/
  RoleForeignKey:
    properties:
      id:
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/Role'
    x-references:
      $ref: '#/definitions/Role'
  RoleIdentity:
    properties:
      deprecated:
        $ref: '#/definitions/RoleDeprecatedOptions'
      id:
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/Role'
    x-references:
      $ref: '#/definitions/Role'
  RoleIdentityTemplateContent:
    properties:
      id:
        type: integer
      name:
        description: The name of the Role.
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/Role'
    x-references:
      $ref: '#/definitions/Role'
  RoleImage:
    description: A Representation of a Role Image. Note that the `role` property is
      optional when POST-ing to a URL that already includes `{roleId}`.
    properties:
      image:
        $ref: '#/definitions/ImageForeignKey'
      role:
        $ref: '#/definitions/RoleForeignKey'
    required:
    - role
    - image
    x-filterable:
    - role
    - image
    x-usedIn:
    - /user/{envId}/roles/{roleId}/images/{imageId}/actions/replace/
    - /user/{envId}/roles/{roleId}/images/
  RoleImageDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/RoleImage'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/RoleImage'
    x-usedIn:
    - /user/{envId}/roles/{roleId}/images/{imageId}/actions/replace/
    - /user/{envId}/roles/{roleId}/images/
  RoleImageListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/RoleImage'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/RoleImage'
    x-usedIn:
    - /user/{envId}/roles/{roleId}/images/
  RoleListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Role'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Role'
    x-usedIn:
    - /user/{envId}/roles/
  RoleScopeIdentity:
    description: The Role Scope identity relation.
    properties:
      accountId:
        description: Account identifier.
        readOnly: true
        type: integer
      envId:
        description: Environment identifier.
        readOnly: true
        type: integer
      id:
        description: Identifier of the Role.
        readOnly: true
        type: integer
      scope:
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
  RoleScopeIdentityListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/RoleScopeIdentity'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/RoleScopeIdentity'
    x-usedIn:
    - /user/{envId}/images/{imageId}/actions/replace/
  RootStorageConfiguration:
    properties:
      id:
        description: Identifier of the Storage.
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      template:
        $ref: '#/definitions/PersistentStorageTemplate'
        description: Volume template.
      type:
        description: Storage configuration type.
        enum:
        - PersistentStorageConfiguration
        - RootStorageConfiguration
        - EphemeralStorageConfiguration
        type: string
    required:
    - type
    - template
    x-abstractType:
      $ref: '#/definitions/StorageConfiguration'
    x-createOnly:
    - type
    x-discriminator: type
  ScalingConfiguration:
    properties:
      considerSuspendedServers:
        default: running
        description: By default Scalr considers all suspended servers as running  when
          calculating the number of running instances to make a scaling decision.
        enum:
        - running
        - terminated
        type: string
      enabled:
        default: false
        type: boolean
      maxInstances:
        default: 2
        type: integer
      minInstances:
        default: 1
        type: integer
      rules:
        items:
          description: A list of Scaling Metrics' names.
          type: string
        readOnly: true
        type: array
      scalingBehavior:
        default: launch-terminate
        description: By default value is 'launch-terminate', Scalr autoscales by launching
          and terminating servers. If you change this options to 'suspend-resume'
          Scalr will automatically scale servers  by suspending and resuming servers.
        enum:
        - suspend-resume
        - launch-terminate
        type: string
    x-usedIn:
    - /user/{envId}/farm-roles/{farmRoleId}/scaling/
  ScalingConfigurationDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/ScalingConfiguration'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ScalingConfiguration'
    x-usedIn:
    - /user/{envId}/farm-roles/{farmRoleId}/scaling/
  ScalingMetric:
    properties:
      filePath:
        description: Path to the File
        type: string
      function:
        description: Aggregate function to use when executing decision logic.
        enum:
        - average
        - sum
        - min
        - max
        type: string
      inverted:
        description: Whether this metric should be inverted. By default Farm Roles
          scale up when the value goes above the scale up threshold. If this is true,
          Farm Roles will scale up when the value goes below the scale up threshold.
        type: boolean
      name:
        description: The name of a Scaling Metric.
        type: string
      retrieveMethod:
        description: The operation that should be performed on the File to obtain
          the value of the Metric.
        enum:
        - read
        - execute
        - url-request
        type: string
      scope:
        enum: *id001
        readOnly: true
        type: string
    required:
    - name
    - retrieveMethod
    - filePath
    - function
    x-filterable:
    - name
    - retrieveMethod
    - function
    - inverted
    - scope
    x-usedIn:
    - /user/{envId}/scaling-metrics/
    - /user/{envId}/scaling-metrics/{metricName}/
  ScalingMetricDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/ScalingMetric'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ScalingMetric'
    x-usedIn:
    - /user/{envId}/scaling-metrics/
    - /user/{envId}/scaling-metrics/{metricName}/
  ScalingMetricForeignKey:
    properties:
      name:
        description: The name of a Scaling Metric.
        type: string
    required:
    - name
    x-filterable:
    - name
  ScalingMetricListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/ScalingMetric'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ScalingMetric'
    x-usedIn:
    - /user/{envId}/scaling-metrics/
  ScalingRule:
    discriminator: ruleType
    properties:
      name:
        description: The name of a Scaling Metric.
        type: string
      ruleType:
        enum:
        - BasicScalingRule
        - LoadAveragesScalingRule
        - FreeRamScalingRule
        - UrlResponseTimeScalingRule
        - SqsQueueSizeScalingRule
        - DateAndTimeScalingRule
        - BandWidthScalingRule
        type: string
    required:
    - name
    - ruleType
    x-concreteTypes:
    - $ref: '#/definitions/BasicScalingRule'
    - $ref: '#/definitions/DateAndTimeScalingRule'
    x-createOnly:
    - name
    - ruleType
    x-filterable:
    - name
    - ruleType
    x-usedIn:
    - /user/{envId}/farm-roles/{farmRoleId}/scaling/
    - /user/{envId}/farm-roles/{farmRoleId}/scaling/{metricName}/
  ScalingRuleDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/ScalingRule'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ScalingRule'
    x-usedIn:
    - /user/{envId}/farm-roles/{farmRoleId}/scaling/{metricName}/
  ScalingRuleThresholds:
    properties:
      scaleDown:
        description: Scale down threshold.
        type: number
      scaleUp:
        description: Scale up threshold.
        type: number
    required:
    - scaleUp
    - scaleDown
  ScalingRuleTimeFrame:
    properties:
      daysOfWeek:
        description: The days this rule is applied on.
        items:
          enum:
          - sun
          - mon
          - tue
          - wed
          - thu
          - fri
          - sat
          type: string
        type: array
      end:
        description: End of the frame.
        format: date-time
        type: string
      instanceCount:
        description: The number of instances which should be running.
        type: integer
      start:
        description: Start time.
        format: date-time
        type: string
    required:
    - instanceCount
    - start
    - end
    - daysOfWeek
  ScalingTemplateContent:
    properties:
      considerSuspendedServers:
        default: running
        description: By default Scalr considers all suspended servers as running  when
          calculating the number of running instances to make a scaling decision.
        enum:
        - running
        - terminated
        type: string
      enabled:
        default: false
        type: boolean
      maxInstances:
        default: 2
        type: integer
      minInstances:
        default: 1
        type: integer
      rules:
        description: Farm Role scaling rules.
        items:
          $ref: '#/definitions/ScalingRule'
        type: array
      scalingBehavior:
        default: launch-terminate
        description: By default value is 'launch-terminate', Scalr autoscales by launching
          and terminating servers. If you change this options to 'suspend-resume'
          Scalr will automatically scale servers  by suspending and resuming servers.
        enum:
        - suspend-resume
        - launch-terminate
        type: string
  ScalrAgent:
    description: The information about Scalr Agent.
    properties:
      deployCommand:
        description: Command to launch Scalr Agent on your Server.
        readOnly: true
        type: string
      initializationStatus:
        $ref: '#/definitions/InitializationStatus'
        description: The detailed information about Scalr Agent initialization status.
        readOnly: true
      reachabilityStatus:
        $ref: '#/definitions/ReachabilityStatus'
        description: The detailed information about Scalr Agent reachability status
          check.
        readOnly: true
      version:
        description: The installed version of the Scalr Agent.
        readOnly: true
        type: string
  ScalrScriptAction:
    properties:
      actionType:
        enum:
        - ScalrScriptAction
        - RemoteScriptAction
        - ChefAction
        - LocalScriptAction
        - AnsibleTowerAction
        type: string
      scriptVersion:
        $ref: '#/definitions/ScriptVersionIdentity'
        description: ScriptVersion to execute.
    required:
    - actionType
    - scriptVersion
    x-abstractType:
      $ref: '#/definitions/Action'
    x-discriminator: actionType
  ScopeIdentity:
    properties:
      accountId:
        description: Account identifier.
        readOnly: true
        type: integer
      envId:
        description: Environment identifier.
        readOnly: true
        type: integer
      scope:
        enum: *id001
        readOnly: true
        type: string
  Script:
    properties:
      added:
        format: date-time
        readOnly: true
        type: string
      blockingDefault:
        description: Wether this Script is blocking by default. This can be overridden
          in the Orchestration Rules that use this Script.
        type: boolean
      deprecated:
        default: false
        description: Whether the Script is deprecated.
        type: boolean
      description:
        type: string
      id:
        readOnly: true
        type: integer
      lastChanged:
        format: date-time
        readOnly: true
        type: string
      name:
        description: The name of the Script.
        type: string
      osType:
        description: Type of OS this Script should execute on. This will influence
          Orchestration Rules, and will impact the validation rules applied to the
          ScriptVersions.
        enum:
        - linux
        - windows
        - cross-platform
        type: string
      scope:
        enum: *id001
        readOnly: true
        type: string
      tags:
        description: The list of tags that should be applied to the Script.
        items:
          type: string
        type: array
      timeoutDefault:
        description: The time after which Scalr will abort the execution of this Script,
          in seconds. This can be overridden in the Orchestration Rules that use this
          Script.
        type: integer
    required:
    - name
    - osType
    x-createOnly:
    - osType
    x-filterable:
    - id
    - name
    - osType
    - blockingDefault
    - scope
    - deprecated
    x-usedIn:
    - /user/{envId}/scripts/{scriptId}/script-versions/
    - /user/{envId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/actions/execute/
    - /user/{envId}/scripts/{scriptId}/actions/execute/
    - /user/{envId}/scripts/
    - /user/{envId}/scripts/{scriptId}/
    - /user/{envId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/
  ScriptDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Script'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Script'
    x-usedIn:
    - /user/{envId}/scripts/
    - /user/{envId}/scripts/{scriptId}/
  ScriptExecution:
    properties:
      id:
        description: Identifier of the Script execution.
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      logEntry:
        $ref: '#/definitions/LogEntryForeignKey'
        description: Orchestration log entry identifier.
        readOnly: true
      server:
        $ref: '#/definitions/ServerForeignKey'
        description: Identifier of the Server.
        readOnly: true
      status:
        description: The value indicates the Script execution status.
        enum:
        - running
        - finished
        readOnly: true
        type: string
    x-usedIn:
    - /user/{envId}/script-executions/{scriptExecutionId}/
  ScriptExecutionDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/ScriptExecution'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ScriptExecution'
    x-usedIn:
    - /user/{envId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/actions/execute/
    - /user/{envId}/scripts/{scriptId}/actions/execute/
    - /user/{envId}/script-executions/{scriptExecutionId}/
  ScriptExecutionRequest:
    properties:
      blocking:
        description: If it is true Scalr Agent will wait for your Script to finish
          executing before firing and processing further events.
        type: boolean
      server:
        $ref: '#/definitions/ServerForeignKey'
        description: Identifier of the Server
      timeout:
        description: How many secconds should Scalr Agent wait before aborting the
          execution of this Script.
        type: integer
    required:
    - server
    x-usedIn:
    - /user/{envId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/actions/execute/
    - /user/{envId}/scripts/{scriptId}/actions/execute/
  ScriptForeignKey:
    properties:
      id:
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/Script'
    x-references:
      $ref: '#/definitions/Script'
  ScriptIdentity:
    properties:
      id:
        type: integer
      name:
        description: The name of the Script.
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/Script'
    x-references:
      $ref: '#/definitions/Script'
  ScriptListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Script'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Script'
    x-usedIn:
    - /user/{envId}/scripts/
  ScriptVersion:
    properties:
      added:
        format: date-time
        readOnly: true
        type: string
      body:
        description: The content of this ScriptVersion. This content will be validated
          according to the Script's OS Type.
        type: string
      script:
        $ref: '#/definitions/ScriptForeignKey'
        description: The Script this ScriptVersion is a version of.
      version:
        description: The Script version number. null is interpreted as the latest
          Version.
        readOnly: true
        type: integer
    required:
    - script
    - body
    x-createOnly:
    - script
    x-filterable:
    - script
    x-usedIn:
    - /user/{envId}/scripts/{scriptId}/script-versions/
    - /user/{envId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/
  ScriptVersionDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/ScriptVersion'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ScriptVersion'
    x-usedIn:
    - /user/{envId}/scripts/{scriptId}/script-versions/
    - /user/{envId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/
  ScriptVersionForeignKey:
    properties:
      script:
        $ref: '#/definitions/ScriptForeignKey'
        description: The Script this ScriptVersion is a version of.
      version:
        description: The Script version number. null is interpreted as the latest
          Version.
        type: integer
    required:
    - script
  ScriptVersionIdentity:
    properties:
      script:
        $ref: '#/definitions/ScriptIdentity'
      version:
        description: The Script version number. null is interpreted as the latest
          Version.
        type: integer
  ScriptVersionListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/ScriptVersion'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ScriptVersion'
    x-usedIn:
    - /user/{envId}/scripts/{scriptId}/script-versions/
  SecurityConfiguration:
    properties:
      securityGroups:
        description: The list of the Security Groups associated to the Farm Role.
          Please note that this property is not available for GCE and VMware Farm
          Roles. It is required for AWS Farm Roles were was launched inside Amazon
          VPC.
        items:
          $ref: '#/definitions/SecurityGroupIdentity'
        type: array
    required:
    - securityGroups
  SecurityGroupForeignKey:
    properties:
      id:
        description: Identifier of the SecurityGroup object.
        type: string
    required:
    - id
  SecurityGroupIdentity:
    properties:
      id:
        description: Identifier of the SecurityGroup object.
        type: string
      name:
        description: The name of the Security Group which can be used to set a default
          Security Group when ID is unknown.
        type: string
    required:
    - id
  Server:
    description: A Scalr Server.
    properties:
      cloudLocation:
        description: 'Cloud Location, inside a given Cloud Platform, for this resource.
          May be null if this resource does not have a specific location. Note: if
          you would like to filter on this property, you **must** also filter on `cloudPlatform`.'
        readOnly: true
        type: string
      cloudPlatform:
        description: The Cloud Platform this resource resides in.
        enum:
        - ec2
        - gce
        - azure
        - cloudstack
        - idcf
        - openstack
        - ocs
        - rackspacenguk
        - rackspacengus
        - hpcloud
        - mirantis
        - vio
        - cisco
        - vmware
        readOnly: true
        type: string
      cloudServerId:
        description: Identifier of the Server on the cloud.
        readOnly: true
        type: string
      farm:
        $ref: '#/definitions/FarmForeignKey'
        description: Identifier of the Farm this Server belongs to.
        readOnly: true
      farmRole:
        $ref: '#/definitions/FarmRoleForeignKey'
        description: Identifier of the Farm Role this Server belongs to.
        readOnly: true
      hostname:
        description: The hostname of this Server.
        readOnly: true
        type: string
      id:
        description: Unique identifier for this Server.
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      index:
        description: The index of this Server in the Farm Role.
        readOnly: true
        type: integer
      instanceType:
        $ref: '#/definitions/InstanceTypeForeignKey'
        description: Instance type on the Cloud Platform.
      launchReason:
        description: The reason this Server was launched.
        readOnly: true
        type: string
      launched:
        description: The date at which this Server was launched.
        format: date-time
        readOnly: true
        type: string
      launchedBy:
        $ref: '#/definitions/ComposedUserIdentity'
        description: The identifier and email of the User who launched this Server.
        readOnly: true
      operations:
        description: Temporary states of the Cloud Server being processed by one or
          a number of Requests.
        items:
          $ref: '#/definitions/ServerOperations'
        readOnly: true
        type: array
      privateIp:
        description: The private IP address of this Server.
        items:
          type: string
        readOnly: true
        type: array
      publicIp:
        description: The public IP address of this Server.
        items:
          type: string
        readOnly: true
        type: array
      scalrAgent:
        $ref: '#/definitions/ScalrAgent'
        description: The information about Scalr Agent. This property is available
          only for a servers which have Scalr agent installed.
        readOnly: true
      status:
        description: Server status.
        enum:
        - temporary
        - running
        - pending
        - pending_launch
        - initializing
        - importing
        - terminated
        - pending_terminate
        - pending_suspend
        - suspended
        - resuming
        readOnly: true
        type: string
    x-filterable:
    - index
    - publicIp
    - privateIp
    - id
    - cloudServerId
    - status
    - cloudPlatform
    - cloudLocation
    - hostname
    - launchReason
    - launchedBy
    - farmRole
    - farm
    - instanceType
    x-usedIn:
    - /user/{envId}/servers/{serverId}/actions/resume/
    - /user/{envId}/servers/{serverId}/
    - /user/{envId}/servers/{serverId}/actions/reboot/
    - /user/{envId}/servers/{serverId}/actions/terminate/
    - /user/{envId}/servers/{serverId}/actions/suspend/
    - /user/{envId}/servers/{serverId}/global-variables/
    - /user/{envId}/servers/{serverId}/global-variables/{globalVariableName}/
  ServerForeignKey:
    properties:
      id:
        description: Unique identifier for this Server.
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/Server'
    x-references:
      $ref: '#/definitions/Server'
  ServerOperations:
    description: List of the temporary operations being processed in the Cloud Server
      by one or a number of requests.
    properties:
      name:
        description: Name of the current operation being processed on a Cloud server.
        enum:
        - resizing
        - rebooting
        type: string
    required:
    - name
  ServerSummary:
    description: A Scalr Server.
    properties:
      cloudLocation:
        description: 'Cloud Location, inside a given Cloud Platform, for this resource.
          May be null if this resource does not have a specific location. Note: if
          you would like to filter on this property, you **must** also filter on `cloudPlatform`.'
        readOnly: true
        type: string
      cloudPlatform:
        description: The Cloud Platform this resource resides in.
        enum: *id002
        readOnly: true
        type: string
      cloudServerId:
        description: Identifier of the Server on the cloud.
        readOnly: true
        type: string
      farm:
        $ref: '#/definitions/FarmForeignKey'
        description: Identifier of the Farm this Server belongs to.
        readOnly: true
      farmRole:
        $ref: '#/definitions/FarmRoleForeignKey'
        description: Identifier of the Farm Role this Server belongs to.
        readOnly: true
      hostname:
        description: The hostname of this Server.
        readOnly: true
        type: string
      id:
        description: Unique identifier for this Server.
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      index:
        description: The index of this Server in the Farm Role.
        readOnly: true
        type: integer
      instanceType:
        $ref: '#/definitions/InstanceTypeForeignKey'
        description: Instance type on the Cloud Platform.
      launchReason:
        description: The reason this Server was launched.
        readOnly: true
        type: string
      launched:
        description: The date at which this Server was launched.
        format: date-time
        readOnly: true
        type: string
      launchedBy:
        $ref: '#/definitions/ComposedUserIdentity'
        description: The identifier and email of the User who launched this Server.
        readOnly: true
      operations:
        description: Temporary states of the Cloud Server being processed by one or
          a number of Requests.
        items:
          $ref: '#/definitions/ServerOperations'
        readOnly: true
        type: array
      privateIp:
        description: The private IP address of this Server.
        items:
          type: string
        readOnly: true
        type: array
      publicIp:
        description: The public IP address of this Server.
        items:
          type: string
        readOnly: true
        type: array
      scalrAgent:
        $ref: '#/definitions/ScalrAgent'
        description: The information about Scalr Agent. This property is available
          only for a servers which have Scalr agent installed.
        readOnly: true
      status:
        description: Server status.
        enum:
        - temporary
        - running
        - pending
        - pending_launch
        - initializing
        - importing
        - terminated
        - pending_terminate
        - pending_suspend
        - suspended
        - resuming
        readOnly: true
        type: string
    x-filterable:
    - index
    - publicIp
    - privateIp
    - id
    - cloudServerId
    - status
    - cloudPlatform
    - cloudLocation
    - hostname
    - launchReason
    - launchedBy
    - farmRole
    - farm
    - instanceType
  ServerSummaryDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/ServerSummary'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ServerSummary'
    x-usedIn:
    - /user/{envId}/servers/{serverId}/actions/resume/
    - /user/{envId}/servers/{serverId}/
    - /user/{envId}/farm-roles/{farmRoleId}/actions/import-server/
    - /user/{envId}/servers/{serverId}/actions/reboot/
    - /user/{envId}/servers/
    - /user/{envId}/servers/{serverId}/actions/terminate/
    - /user/{envId}/servers/{serverId}/actions/suspend/
    - /user/{envId}/farm-roles/{farmRoleId}/servers/
  ServerSummaryListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/ServerSummary'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ServerSummary'
    x-usedIn:
    - /user/{envId}/servers/
    - /user/{envId}/farms/{farmId}/servers/
    - /user/{envId}/farm-roles/{farmRoleId}/servers/
  SpecificEventTrigger:
    description: Triggers when a specific Event fires.
    properties:
      event:
        $ref: '#/definitions/EventForeignKey'
      triggerType:
        enum:
        - AllEventsTrigger
        - SpecificEventTrigger
        type: string
    required:
    - triggerType
    x-abstractType:
      $ref: '#/definitions/Trigger'
    x-discriminator: triggerType
  SqsQueueSizeScalingRule:
    description: It is used in combination with the user defined Scaling Metrics.
    properties:
      name:
        description: Scaling rule name.
        enum:
        - SqsQueueSize
        type: string
      queue:
        description: The AWS SQS queue name.
        type: string
      ruleType:
        enum:
        - BasicScalingRule
        - LoadAveragesScalingRule
        - FreeRamScalingRule
        - UrlResponseTimeScalingRule
        - SqsQueueSizeScalingRule
        - DateAndTimeScalingRule
        - BandWidthScalingRule
        type: string
      scaleDown:
        description: Scale down threshold.
        type: integer
      scaleUp:
        description: Scale up threshold.
        type: integer
    required:
    - name
    - ruleType
    - scaleUp
    - scaleDown
    - queue
    x-abstractType:
      $ref: '#/definitions/BasicScalingRule'
    x-createOnly:
    - name
    - ruleType
    x-discriminator: ruleType
    x-filterable:
    - name
    - ruleType
  StorageConfiguration:
    discriminator: type
    properties:
      id:
        description: Identifier of the Storage.
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      type:
        description: Storage configuration type.
        enum:
        - PersistentStorageConfiguration
        - RootStorageConfiguration
        - EphemeralStorageConfiguration
        type: string
    required:
    - type
    x-concreteTypes:
    - $ref: '#/definitions/RootStorageConfiguration'
    - $ref: '#/definitions/EphemeralStorageConfiguration'
    - $ref: '#/definitions/PersistentStorageConfiguration'
    x-createOnly:
    - type
    x-usedIn:
    - /user/{envId}/farm-roles/{farmRoleId}/storage/
    - /user/{envId}/farm-roles/{farmRoleId}/storage/{storageConfigurationId}/
  StorageConfigurationDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/StorageConfiguration'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/StorageConfiguration'
    x-usedIn:
    - /user/{envId}/farm-roles/{farmRoleId}/storage/
    - /user/{envId}/farm-roles/{farmRoleId}/storage/{storageConfigurationId}/
  StorageConfigurationListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/StorageConfiguration'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/StorageConfiguration'
    x-usedIn:
    - /user/{envId}/farm-roles/{farmRoleId}/storage/
  StorageTemplate:
    description: Storage Template configuration.
    properties:
      size:
        description: The size of the volume, in GB.
        type: integer
  StorageTemplateCloudFeatures:
    description: Cloud specifics template configuration.
    discriminator: type
    properties:
      type:
        enum:
        - AwsStorageTemplateCloudFeatures
        - VmwareStorageTemplateCloudFeatures
        - AzureStorageTemplateCloudFeatures
        type: string
    required:
    - type
    x-concreteTypes:
    - $ref: '#/definitions/AwsStorageTemplateCloudFeatures'
    - $ref: '#/definitions/AzureStorageTemplateCloudFeatures'
    - $ref: '#/definitions/VmwareStorageTemplateCloudFeatures'
    x-createOnly:
    - type
  Tag:
    description: A Tag object.
    properties:
      key:
        description: The Tag's key.
        type: string
      value:
        description: The Tag's value.
        type: string
    required:
    - key
  TagsCondition:
    properties:
      tags:
        description: Selects all the Servers that belong to the Role with at least
          one tag from this list.
        items:
          type: string
        type: array
      type:
        description: Orchestration rule condition type. Selected only those servers
          that match conditions.
        enum:
        - FarmRolesCondition
        - OsCondition
        - TagsCondition
        type: string
    required:
    - type
    x-abstractType:
      $ref: '#/definitions/OrchestrationRuleCondition'
    x-discriminator: type
  Target:
    discriminator: targetType
    properties:
      targetType:
        enum:
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-concreteTypes:
    - $ref: '#/definitions/TriggeringFarmRoleTarget'
    - $ref: '#/definitions/FarmTarget'
    - $ref: '#/definitions/TriggeringServerTarget'
  TeamForeignKey:
    properties:
      id:
        description: Unique identifier for a Team.
        type: integer
    required:
    - id
  TemplateHostnameConfiguration:
    description: Template for hostname generation.
    properties:
      template:
        description: Hostname template. This field supports Global Variable interpolation.
        type: string
      type:
        description: Hostname configuration type.
        enum:
        - TemplateHostnameConfiguration
        - WebhookHostnameConfiguration
        type: string
    required:
    - type
    x-abstractType:
      $ref: '#/definitions/HostnameConfiguration'
    x-discriminator: type
  TemplateMetadata:
    properties:
      schema_version:
        description: Template metadata.
        type: string
  Trigger:
    discriminator: triggerType
    properties:
      triggerType:
        enum:
        - AllEventsTrigger
        - SpecificEventTrigger
        type: string
    required:
    - triggerType
    x-concreteTypes:
    - $ref: '#/definitions/AllEventsTrigger'
    - $ref: '#/definitions/SpecificEventTrigger'
  TriggeringFarmRoleTarget:
    description: Selects all the Servers that belong to the same Farm Role as the
      Server that triggered the Event.
    properties:
      targetType:
        enum:
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-abstractType:
      $ref: '#/definitions/Target'
    x-discriminator: targetType
  TriggeringServerTarget:
    description: Select only the Server that triggered the Event.
    properties:
      conditions:
        description: 'Triggering servers conditions. '
        items:
          $ref: '#/definitions/OrchestrationRuleCondition'
        type: array
      targetType:
        enum:
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-abstractType:
      $ref: '#/definitions/Target'
    x-discriminator: targetType
  UrlResponseTimeScalingRule:
    description: It is used in combination with the user defined Scaling Metrics.
    properties:
      name:
        description: Scaling rule name.
        enum:
        - UrlResponseTime
        type: string
      ruleType:
        enum:
        - BasicScalingRule
        - LoadAveragesScalingRule
        - FreeRamScalingRule
        - UrlResponseTimeScalingRule
        - SqsQueueSizeScalingRule
        - DateAndTimeScalingRule
        - BandWidthScalingRule
        type: string
      scaleDown:
        description: Scale down threshold.
        type: integer
      scaleUp:
        description: Scale up threshold.
        type: integer
      url:
        description: URL to check
        type: string
    required:
    - name
    - ruleType
    - scaleUp
    - scaleDown
    - url
    x-abstractType:
      $ref: '#/definitions/BasicScalingRule'
    x-createOnly:
    - name
    - ruleType
    x-discriminator: ruleType
    x-filterable:
    - name
    - ruleType
  UserForeignKey:
    properties:
      id:
        description: Unique identifier for an User.
        type: integer
    required:
    - id
  VmwareCloudFeatures:
    description: VMware Farm Role configuration. Required for VMware Farm Roles.
    properties:
      computeResource:
        description: Identifier of the VMware compute resource.
        type: string
      customizationSpec:
        description: Unique name of the specification.
        type: string
      dataStore:
        description: The data storage or storage pod identifier. Storage pod with
          enabled SDRS is allowed to pass only.
        type: string
      folder:
        description: A VMware folder.
        type: string
      hosts:
        description: The machine host addresses. If property is empty or not specified,
          host will be chosen by the Distributed Resource Scheduler.
        items:
          type: string
        type: array
      placementStrategy:
        default: manual
        description: Passing with scalr-auto value means enabling 'auto' mode  (Compute
          resource will be selected by Scalr). The next properties computeResource,
          resourcePool, dataStore and hosts have to be empty or omitted.
        enum:
        - manual
        - scalr-auto
        type: string
      resourcePool:
        description: The resource pool identifier.
        type: string
      type:
        enum:
        - AwsCloudFeatures
        - AzureCloudFeatures
        - VmwareCloudFeatures
        - GceCloudFeatures
        type: string
    required:
    - type
    - folder
    x-abstractType:
      $ref: '#/definitions/CloudFeatures'
    x-createOnly:
    - type
    - folder
    - computeResource
    - hosts
    - placementStrategy
    x-discriminator: type
  VmwareImageCloudFeatures:
    description: Cloud specifics Image configuration.
    properties:
      type:
        enum:
        - AwsImageCloudFeatures
        - VmwareImageCloudFeatures
        type: string
      vCenterHost:
        description: The vCenter host where the current Image exists. At the Environment
          scope this property is read-only.
        type: string
    required:
    - type
    x-abstractType:
      $ref: '#/definitions/ImageCloudFeatures'
    x-discriminator: type
  VmwareStorageTemplateCloudFeatures:
    description: Cloud specifics template configuration.
    properties:
      diskObjectId:
        description: VMware Virtual disk durable and unmutable identifier.
        readOnly: true
        type: string
      type:
        enum:
        - AwsStorageTemplateCloudFeatures
        - VmwareStorageTemplateCloudFeatures
        - AzureStorageTemplateCloudFeatures
        type: string
    required:
    - type
    x-abstractType:
      $ref: '#/definitions/StorageTemplateCloudFeatures'
    x-createOnly:
    - type
    x-discriminator: type
  WebhookEndpoint:
    description: Webhook endpoint summary.
    properties:
      id:
        description: Webhook endpoint identifier.
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        type: string
      scope:
        enum: *id001
        type: string
      url:
        description: Endpoint URL.
        type: string
  WebhookEndpointForeignKey:
    properties:
      id:
        description: Webhook endpoint identifier.
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/WebhookEndpoint'
    x-references:
      $ref: '#/definitions/WebhookEndpoint'
  WebhookEndpointListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/WebhookEndpoint'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/WebhookEndpoint'
    x-usedIn:
    - /user/{envId}/webhook-endpoints/
  WebhookHostnameConfiguration:
    description: Webhook endpoint configuration to obtain hostname.
    properties:
      endpoint:
        $ref: '#/definitions/WebhookEndpointForeignKey'
        description: Webhook endpoint to obtain hostname.
      type:
        description: Hostname configuration type.
        enum:
        - TemplateHostnameConfiguration
        - WebhookHostnameConfiguration
        type: string
    required:
    - type
    - endpoint
    x-abstractType:
      $ref: '#/definitions/HostnameConfiguration'
    x-discriminator: type
info:
  description: Manage Roles, Images, Farms, Farm Roles, and Servers.
  title: Scalr User API
  version: 1.0.0
paths:
  /{envId}/clouds/{cloudPlatform}/cloud-locations/:
    get:
      description: The list of the Cloud Locations.
      responses:
        200:
          description: A list of CloudLocation objects.
          schema:
            $ref: '#/definitions/CloudLocationListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The Cloud Platform this resource resides in.
      enum:
      - ec2
      - gce
      - azure
      - cloudstack
      - idcf
      - openstack
      - ocs
      - rackspacenguk
      - rackspacengus
      - hpcloud
      - mirantis
      - vio
      - cisco
      - vmware
      in: path
      name: cloudPlatform
      required: true
      type: string
  /{envId}/clouds/{cloudPlatform}/cloud-locations/{cloudLocation}/instance-types/:
    get:
      description: The list of all Instance Types available for the specified Cloud
        Location.
      responses:
        200:
          description: A list of InstanceType objects.
          schema:
            $ref: '#/definitions/InstanceTypeListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The Cloud Platform this resource resides in.
      enum:
      - ec2
      - gce
      - azure
      - cloudstack
      - idcf
      - openstack
      - ocs
      - rackspacenguk
      - rackspacengus
      - hpcloud
      - mirantis
      - vio
      - cisco
      - vmware
      in: path
      name: cloudPlatform
      required: true
      type: string
    - description: 'Cloud Location, inside a given Cloud Platform, for this resource.
        May be null if this resource does not have a specific location. Note: if you
        would like to filter on this property, you **must** also filter on `cloudPlatform`.'
      in: path
      name: cloudLocation
      required: true
      type: string
  /{envId}/cost-centers/:
    get:
      description: List the Cost Centers available in the Environment.
      responses:
        200:
          description: A list of CostCenter objects.
          schema:
            $ref: '#/definitions/CostCenterListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
  /{envId}/cost-centers/{costCenterId}/:
    get:
      description: Retrieve detailed information about a given Cost Center.
      responses:
        200:
          description: The JSON representation of a CostCenter object.
          schema:
            $ref: '#/definitions/CostCenterDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a CostCenter object.
      in: path
      maxLength: 36
      minLength: 36
      name: costCenterId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/CostCenter'
  /{envId}/event-logs/:
    get:
      description: List of all Event logs.
      responses:
        200:
          description: A list of EventLogEntry objects.
          schema:
            $ref: '#/definitions/EventLogEntryListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
  /{envId}/event-logs/{eventLogEntryId}/:
    get:
      description: Describes detailed information about the Event that has been fired.
      responses:
        200:
          description: The JSON representation of a EventLogEntry object.
          schema:
            $ref: '#/definitions/EventLogEntryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a EventLogEntry object.
      in: path
      maxLength: 36
      minLength: 36
      name: eventLogEntryId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/EventLogEntry'
  /{envId}/events/:
    get:
      description: List all the Events available in this Environment.
      responses:
        200:
          description: A list of Event objects.
          schema:
            $ref: '#/definitions/EventListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Create a new Custom Event in this Environment.
      parameters:
      - description: The JSON representation of a Event object.
        in: body
        name: eventObject
        required: true
        schema:
          $ref: '#/definitions/Event'
      responses:
        201:
          description: The JSON representation of a Event object.
          schema:
            $ref: '#/definitions/EventDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/events/{eventId}/:
    delete:
      description: Delete an Event from this Environment.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a given Event.
      responses:
        200:
          description: The JSON representation of a Event object.
          schema:
            $ref: '#/definitions/EventDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Event object.
      in: path
      maxLength: 25
      name: eventId
      pattern: '[A-Za-z0-9]+'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Event'
    patch:
      description: Modify the attributes of an Event.
      parameters:
      - description: The JSON representation of a Event object.
        in: body
        name: eventObject
        required: true
        schema:
          $ref: '#/definitions/Event'
      responses:
        200:
          description: The JSON representation of a Event object.
          schema:
            $ref: '#/definitions/EventDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/events/{eventId}/actions/fire/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Event object.
      in: path
      maxLength: 25
      name: eventId
      pattern: '[A-Za-z0-9]+'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Event'
    post:
      description: It fires the Custom Event on the Server.
      parameters:
      - description: Fire Event options.
        in: body
        name: fireEventRequest
        required: true
        schema:
          properties:
            server:
              $ref: '#/definitions/ServerForeignKey'
              description: Identifier of the Server.
          required:
          - server
      responses:
        200:
          description: The JSON representation of a EventLogEntry object.
          schema:
            $ref: '#/definitions/EventLogEntryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/:
    delete:
      description: Remove a given Farm Role from its Farm.
      responses:
        204:
          description: Farm Role deleted.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a given Farm Role.
      responses:
        200:
          description: The JSON representation of a FarmRole object.
          schema:
            $ref: '#/definitions/FarmRoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    patch:
      description: Modify the attributes of a Farm Role.
      parameters:
      - description: The JSON representation of a FarmRole object.
        in: body
        name: farmRoleObject
        required: true
        schema:
          $ref: '#/definitions/FarmRole'
      responses:
        200:
          description: The JSON representation of a FarmRole object.
          schema:
            $ref: '#/definitions/FarmRoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/actions/import-server/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    post:
      description: Import a running server from a Cloud Platform to a Scalr Farm Role.
      parameters:
      - description: Server import settings.
        in: body
        name: importServerRequest
        required: true
        schema:
          properties:
            cloudServerId:
              description: Identifier of the instance on the cloud to import.
              type: string
            tags:
              description: The list of tags that should be applied to the server on
                the Cloud.
              items:
                $ref: '#/definitions/Tag'
              type: array
          required:
          - cloudServerId
      responses:
        201:
          description: The JSON representation of a ServerSummary object.
          schema:
            $ref: '#/definitions/ServerSummaryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/global-variables/:
    get:
      description: List all the Global Variables associated with this Farm Role.
      responses:
        200:
          description: A list of GlobalVariable objects.
          schema:
            $ref: '#/definitions/GlobalVariableListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    post:
      description: Declare a new Global Variable for this Farm Role.
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        201:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/global-variables/{globalVariableName}/:
    delete:
      description: Delete a Global Variable from this Farm Role's scope.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a Global Variable in this Farm
        Role's scope.
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    - description: The name of the Global Variable being accessed.
      in: path
      maxLength: 128
      minLength: 2
      name: globalVariableName
      pattern: \w+
      required: true
      type: string
    patch:
      description: Modify the attributes of a Global Variable in this Farm Role's
        scope.
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/orchestration-rules/:
    get:
      description: List all Orchestration Rules associated with this Farm Role, including
        Rules from higher Scopes (those are read-only).
      responses:
        200:
          description: A list of OrchestrationRule objects.
          schema:
            $ref: '#/definitions/OrchestrationRuleListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    post:
      description: Create a new Orchestration Rule associated to this Farm Role.
      parameters:
      - description: The JSON representation of a OrchestrationRule object.
        in: body
        name: orchestrationRuleObject
        required: true
        schema:
          $ref: '#/definitions/OrchestrationRule'
      responses:
        201:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/orchestration-rules/{orchestrationRuleId}/:
    delete:
      description: Delete an Orchestration Rule from this Farm Role.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about an Orchestration Rule associated
        to this Farm Role.
      responses:
        200:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    - description: The ID of a OrchestrationRule object.
      in: path
      maxLength: 36
      minLength: 36
      name: orchestrationRuleId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/OrchestrationRule'
    patch:
      description: Modify the attributes of an Orchestration Rule associated to this
        Farm Role.
      parameters:
      - description: The JSON representation of a OrchestrationRule object.
        in: body
        name: orchestrationRuleObject
        required: true
        schema:
          $ref: '#/definitions/OrchestrationRule'
      responses:
        200:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/scaling/:
    get:
      description: Retrieve the Scaling configuration of a Farm Role.
      responses:
        200:
          description: The JSON representation of a ScalingConfiguration object.
          schema:
            $ref: '#/definitions/ScalingConfigurationDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
      summary: get scaling configuration
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    patch:
      description: Modify the Scaling configuration of a Farm Role.
      parameters:
      - description: The JSON representation of a ScalingConfiguration object.
        in: body
        name: scalingConfigurationObject
        required: true
        schema:
          $ref: '#/definitions/ScalingConfiguration'
      responses:
        200:
          description: The JSON representation of a ScalingConfiguration object.
          schema:
            $ref: '#/definitions/ScalingConfigurationDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
      summary: edit scaling configuration
    post:
      description: Add a new Scaling Rule to a Farm Role.
      parameters:
      - description: The JSON representation of a ScalingRule object.
        in: body
        name: scalingRuleObject
        required: true
        schema:
          $ref: '#/definitions/ScalingRule'
      responses:
        201:
          description: The JSON representation of a ScalingConfiguration object.
          schema:
            $ref: '#/definitions/ScalingConfigurationDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
      summary: create rule
  /{envId}/farm-roles/{farmRoleId}/scaling/{metricName}/:
    delete:
      description: Delete a Scaling Rule from a Farm Role.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
      summary: delete rule
    get:
      description: Retrieve the Scaling rules of the Farm Role.
      responses:
        200:
          description: The JSON representation of a ScalingRule object.
          schema:
            $ref: '#/definitions/ScalingRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
      summary: get rule
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    - description: The name of the Scaling Metric.
      in: path
      maxLength: 50
      minLength: 5
      name: metricName
      pattern: '[A-Za-z0-9]+'
      required: true
      type: string
    patch:
      description: Modify a Scaling Rule of a Farm Role.
      parameters:
      - description: The JSON representation of a ScalingRule object.
        in: body
        name: scalingRuleObject
        required: true
        schema:
          $ref: '#/definitions/ScalingRule'
      responses:
        200:
          description: The JSON representation of a ScalingRule object.
          schema:
            $ref: '#/definitions/ScalingRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
      summary: edit rule
  /{envId}/farm-roles/{farmRoleId}/servers/:
    get:
      description: Describes all the Servers associated to a Farm Role.
      responses:
        200:
          description: A list of ServerSummary objects.
          schema:
            $ref: '#/definitions/ServerSummaryListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    post:
      description: Launch a new Server for the specified Farm Role.
      responses:
        201:
          description: The JSON representation of a ServerSummary object.
          schema:
            $ref: '#/definitions/ServerSummaryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/storage/:
    get:
      description: Describe the Storage configuration of the Farm Role.
      responses:
        200:
          description: A list of StorageConfiguration objects.
          schema:
            $ref: '#/definitions/StorageConfigurationListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    post:
      description: Add a new storage configuration to the Farm Role.
      parameters:
      - description: The JSON representation of a StorageConfiguration object.
        in: body
        name: storageConfigurationObject
        required: true
        schema:
          $ref: '#/definitions/StorageConfiguration'
      responses:
        201:
          description: The JSON representation of a StorageConfiguration object.
          schema:
            $ref: '#/definitions/StorageConfigurationDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/storage/{storageConfigurationId}/:
    delete:
      description: Delete the storage configuration from the Farm Role.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve a specific storage configuration of the Farm Role.
      responses:
        200:
          description: The JSON representation of a StorageConfiguration object.
          schema:
            $ref: '#/definitions/StorageConfigurationDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    - description: The ID of a StorageConfiguration object.
      in: path
      maxLength: 36
      minLength: 36
      name: storageConfigurationId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/StorageConfiguration'
    patch:
      description: Modify the storage configuration of the Farm Role.
      parameters:
      - description: The JSON representation of a StorageConfiguration object.
        in: body
        name: storageConfigurationObject
        required: true
        schema:
          $ref: '#/definitions/StorageConfiguration'
      responses:
        200:
          description: The JSON representation of a StorageConfiguration object.
          schema:
            $ref: '#/definitions/StorageConfigurationDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/:
    get:
      description: List all the Farms available in this Environment.
      responses:
        200:
          description: A list of Farm objects.
          schema:
            $ref: '#/definitions/FarmListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Create a new Farm in this Environment.
      parameters:
      - description: The JSON representation of a CreateFarmRequest object.
        in: body
        name: createFarmRequestObject
        required: true
        schema:
          $ref: '#/definitions/CreateFarmRequest'
      responses:
        201:
          description: The JSON representation of a Farm object.
          schema:
            $ref: '#/definitions/FarmDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/:
    delete:
      description: Delete a Farm from this Environment.
      responses:
        204:
          description: Farm deleted.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a given Farm.
      responses:
        200:
          description: The JSON representation of a Farm object.
          schema:
            $ref: '#/definitions/FarmDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
    patch:
      description: Modify the attributes of a Farm.
      parameters:
      - description: The JSON representation of a Farm object.
        in: body
        name: farmObject
        required: true
        schema:
          $ref: '#/definitions/Farm'
      responses:
        200:
          description: The JSON representation of a Farm object.
          schema:
            $ref: '#/definitions/FarmDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/actions/clone/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
    post:
      description: Clone a given Farm.
      parameters:
      - description: Farm cloning options.
        in: body
        name: cloneFarmRequest
        required: true
        schema:
          properties:
            name:
              description: The name of the new Farm.
              type: string
          required:
          - name
      responses:
        201:
          description: The JSON representation of a Farm object.
          schema:
            $ref: '#/definitions/FarmDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/actions/generate-template/:
    get:
      description: Get Farm Template body for given Farm.
      responses:
        200:
          description: The JSON representation of a FarmTemplate object.
          schema:
            $ref: '#/definitions/FarmTemplateDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
  /{envId}/farms/{farmId}/actions/launch/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
    post:
      description: Launch a Farm.
      responses:
        200:
          description: The JSON representation of a Farm object.
          schema:
            $ref: '#/definitions/FarmDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/actions/lock/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
    post:
      description: Lock a Farm.
      parameters:
      - description: Lock Farm options.
        in: body
        name: lockFarmRequest
        required: true
        schema:
          properties:
            lockComment:
              description: Comment to lock Farm.
              type: string
            unlockPermission:
              default: anyone
              description: If you would like to prevent other users unlocking the
                Farm you should set 'owner' options. With 'team' options only members
                of the Farm's Teams can unlock this Farm. Default value 'anyone' means
                that anyone with access can unlock this Farm.
              enum: *id009
              type: string
          required:
          - lockComment
      responses:
        200:
          description: The JSON representation of a Farm object.
          schema:
            $ref: '#/definitions/FarmDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/actions/resume/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
    post:
      description: Resume a suspended Farm.
      responses:
        200:
          description: The JSON representation of a Farm object.
          schema:
            $ref: '#/definitions/FarmDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/actions/suspend/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
    post:
      description: Suspend a Farm.
      responses:
        200:
          description: The JSON representation of a Farm object.
          schema:
            $ref: '#/definitions/FarmDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/actions/terminate/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
    post:
      description: Terminate a Farm.
      parameters:
      - description: Terminate Farm options.
        in: body
        name: terminateFarmRequest
        required: false
        schema:
          properties:
            force:
              description: Skip all shutdown routines (Do not process the BeforeHostTerminate
                event).
              type: boolean
          required:
          - force
      responses:
        200:
          description: The JSON representation of a Farm object.
          schema:
            $ref: '#/definitions/FarmDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/actions/unlock/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
    post:
      description: Unlock a Farm.
      responses:
        200:
          description: The JSON representation of a Farm object.
          schema:
            $ref: '#/definitions/FarmDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/farm-roles/:
    get:
      description: List all the Farm Roles in a Farm.
      responses:
        200:
          description: A list of FarmRoleSummary objects.
          schema:
            $ref: '#/definitions/FarmRoleSummaryListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
    post:
      description: Create a new Farm Role in a Farm.
      parameters:
      - description: The JSON representation of a FarmRole object.
        in: body
        name: farmRoleObject
        required: true
        schema:
          $ref: '#/definitions/FarmRole'
      responses:
        201:
          description: The JSON representation of a FarmRole object.
          schema:
            $ref: '#/definitions/FarmRoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/global-variables/:
    get:
      description: List all Global Variables associated to a Farm.
      responses:
        200:
          description: A list of GlobalVariable objects.
          schema:
            $ref: '#/definitions/GlobalVariableListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
    post:
      description: Declare a new Global Variable for this Farm.
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        201:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/global-variables/{globalVariableName}/:
    delete:
      description: Delete a Global Variable from a given Farm's scope.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a Global Variable in the Farm's
        scope
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
    - description: The name of the Global Variable being accessed.
      in: path
      maxLength: 128
      minLength: 2
      name: globalVariableName
      pattern: \w+
      required: true
      type: string
    patch:
      description: Modify the attributes of a Global Variable's in the Farm's scope.
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/servers/:
    get:
      description: List all the Servers associated to a Farm.
      responses:
        200:
          description: A list of ServerSummary objects.
          schema:
            $ref: '#/definitions/ServerSummaryListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
  /{envId}/global-variables/:
    get:
      description: List Global Variables declared in environment scope.
      responses:
        200:
          description: A list of GlobalVariable objects.
          schema:
            $ref: '#/definitions/GlobalVariableListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Declare a new Global Variable for this environment scope.
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        201:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/global-variables/{globalVariableName}/:
    delete:
      description: Delete a Global Variable from environment scope.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a Global Variable declared
        in environment scope.
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The name of the Global Variable being accessed.
      in: path
      maxLength: 128
      minLength: 2
      name: globalVariableName
      pattern: \w+
      required: true
      type: string
    patch:
      description: Modify the attributes of a Global Variable declared in environment
        scope.
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/images/:
    get:
      description: List all the Images available in the Environment.
      responses:
        200:
          description: A list of Image objects.
          schema:
            $ref: '#/definitions/ImageListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Register a new Image in this Environment.
      parameters:
      - description: The JSON representation of a Image object.
        in: body
        name: imageObject
        required: true
        schema:
          $ref: '#/definitions/Image'
      responses:
        201:
          description: The JSON representation of a Image object.
          schema:
            $ref: '#/definitions/ImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/images/{imageId}/:
    delete:
      description: Remove an Image from the Environment. By default this does not
        delete the underlying machine image from the Cloud it resides in.
      parameters:
      - description: Attempt to also delete this Image from the Cloud.
        in: query
        name: deleteFromCloud
        required: false
        type: boolean
      responses:
        202:
          description: Image scheduled for deregistration and deletion from cloud.
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about an Image.
      responses:
        200:
          description: The JSON representation of a Image object.
          schema:
            $ref: '#/definitions/ImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Image object.
      in: path
      maxLength: 36
      minLength: 36
      name: imageId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Image'
    patch:
      description: Modify the attributes of an Images. Currently only the name of
        the Image be can changed.
      parameters:
      - description: The updated definition.
        in: body
        name: image
        required: true
        schema:
          $ref: '#/definitions/Image'
      responses:
        200:
          description: The JSON representation of a Image object.
          schema:
            $ref: '#/definitions/ImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/images/{imageId}/actions/copy/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Image object.
      in: path
      maxLength: 36
      minLength: 36
      name: imageId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Image'
    post:
      description: Copy an Image from one EC2 region to another.
      parameters:
      - description: The EC2 region to copy this Image to.
        in: body
        name: copyImageRequest
        required: true
        schema:
          $ref: '#/definitions/CloudLocation'
      responses:
        201:
          description: The JSON representation of a Image object.
          schema:
            $ref: '#/definitions/ImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/images/{imageId}/actions/replace/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The identifier of the old Image object.
      in: path
      maxLength: 36
      minLength: 36
      name: imageId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Image'
    post:
      description: Replace the current Image with a specified one for all Roles which
        use this Image. The Image will be replaced only within the Environment scope.
      parameters:
      - description: Replace image options.
        in: body
        name: replaceImageRequest
        required: true
        schema:
          properties:
            deprecateOldImage:
              default: false
              description: If the value is true Scalr will mark old Image as deprecated.
              type: boolean
            newImage:
              $ref: '#/definitions/ImageForeignKey'
              description: The identifier of a new Image object.
          required:
          - newImage
      responses:
        200:
          description: A list of RoleScopeIdentity objects.
          schema:
            $ref: '#/definitions/RoleScopeIdentityListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/orchestration-logs/:
    get:
      description: List of all Orchestration logs.
      responses:
        200:
          description: A list of LogEntrySummary objects.
          schema:
            $ref: '#/definitions/LogEntrySummaryListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
  /{envId}/orchestration-logs/{logEntryId}/:
    get:
      description: Describes detailed information about a result of the orchestration.
      responses:
        200:
          description: The JSON representation of a LogEntry object.
          schema:
            $ref: '#/definitions/LogEntryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a LogEntry object.
      in: path
      maxLength: 36
      minLength: 36
      name: logEntryId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/LogEntry'
  /{envId}/orchestration-rules/:
    get:
      description: List the Orchestration Rules in this Environment.
      responses:
        200:
          description: A list of OrchestrationRule objects.
          schema:
            $ref: '#/definitions/OrchestrationRuleListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Create a new Orchestration Rule for this Environment.
      parameters:
      - description: The JSON representation of a OrchestrationRule object.
        in: body
        name: orchestrationRuleObject
        required: true
        schema:
          $ref: '#/definitions/OrchestrationRule'
      responses:
        201:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/orchestration-rules/{orchestrationRuleId}/:
    delete:
      description: Delete an Orchestration Rule from this Environment.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a given Orchestration Rule.
      responses:
        200:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a OrchestrationRule object.
      in: path
      maxLength: 36
      minLength: 36
      name: orchestrationRuleId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/OrchestrationRule'
    patch:
      description: Modify an Orchestration Rule.
      parameters:
      - description: The JSON representation of a OrchestrationRule object.
        in: body
        name: orchestrationRuleObject
        required: true
        schema:
          $ref: '#/definitions/OrchestrationRule'
      responses:
        200:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/os/:
    get:
      description: List all the Operating Systems definitions available in this Environment.
      responses:
        200:
          description: A list of Os objects.
          schema:
            $ref: '#/definitions/OsListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
  /{envId}/os/{osId}/:
    get:
      description: Retrieve detailed information about a given OS.
      responses:
        200:
          description: The JSON representation of a Os object.
          schema:
            $ref: '#/definitions/OsDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Os object.
      in: path
      name: osId
      pattern: '[A-Za-z0-9-]+'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Os'
  /{envId}/projects/:
    get:
      description: List the Projects available in this Environment.
      responses:
        200:
          description: A list of Project objects.
          schema:
            $ref: '#/definitions/ProjectListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Create a new Project in this Environment.
      parameters:
      - description: The JSON representation of a Project object.
        in: body
        name: projectObject
        required: true
        schema:
          $ref: '#/definitions/Project'
      responses:
        201:
          description: The JSON representation of a Project object.
          schema:
            $ref: '#/definitions/ProjectDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/projects/{projectId}/:
    get:
      description: Retrieve detailed information about a Project.
      responses:
        200:
          description: The JSON representation of a Project object.
          schema:
            $ref: '#/definitions/ProjectDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Project object.
      in: path
      maxLength: 36
      minLength: 36
      name: projectId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Project'
  /{envId}/role-categories/:
    get:
      description: List the Role Categories available in this Environment.
      responses:
        200:
          description: A list of RoleCategory objects.
          schema:
            $ref: '#/definitions/RoleCategoryListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Create a new Role Category in this Environment.
      parameters:
      - description: The JSON representation of a RoleCategory object.
        in: body
        name: roleCategoryObject
        required: true
        schema:
          $ref: '#/definitions/RoleCategory'
      responses:
        201:
          description: The JSON representation of a RoleCategory object.
          schema:
            $ref: '#/definitions/RoleCategoryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/role-categories/{roleCategoryId}/:
    delete:
      description: Delete a Role Category from this Environment.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a given Role Category.
      responses:
        200:
          description: The JSON representation of a RoleCategory object.
          schema:
            $ref: '#/definitions/RoleCategoryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a RoleCategory object.
      in: path
      name: roleCategoryId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/RoleCategory'
    patch:
      description: Modify the attributes of a given Role Category.
      parameters:
      - description: The JSON representation of a RoleCategory object.
        in: body
        name: roleCategoryObject
        required: true
        schema:
          $ref: '#/definitions/RoleCategory'
      responses:
        200:
          description: The JSON representation of a RoleCategory object.
          schema:
            $ref: '#/definitions/RoleCategoryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/:
    get:
      description: List all the Roles available in this Environment.
      responses:
        200:
          description: A list of Role objects.
          schema:
            $ref: '#/definitions/RoleListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Create a new Role in this Environment.
      parameters:
      - description: The JSON representation of a Role object.
        in: body
        name: roleObject
        required: true
        schema:
          $ref: '#/definitions/Role'
      responses:
        201:
          description: The JSON representation of a Role object.
          schema:
            $ref: '#/definitions/RoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/:
    delete:
      description: Delete a Role from this Environment.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a given Role.
      responses:
        200:
          description: The JSON representation of a Role object.
          schema:
            $ref: '#/definitions/RoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    patch:
      description: Modify the attributes of a given Role.
      parameters:
      - description: The JSON representation of a Role object.
        in: body
        name: roleObject
        required: true
        schema:
          $ref: '#/definitions/Role'
      responses:
        200:
          description: The JSON representation of a Role object.
          schema:
            $ref: '#/definitions/RoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/actions/clone/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    post:
      description: Make a copy of an existing Role by cloning it.
      parameters:
      - description: Role cloning options.
        in: body
        name: cloneRoleRequest
        required: true
        schema:
          properties:
            name:
              description: The name of the new Role.
              type: string
          required:
          - name
      responses:
        201:
          description: The JSON representation of a Role object.
          schema:
            $ref: '#/definitions/RoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/actions/deprecate/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    post:
      description: Deprecate a Role and set another Role to replace it.
      parameters:
      - description: Deprecate Role options.
        in: body
        name: deprecateRoleRequest
        required: false
        schema:
          properties:
            deprecate:
              default: true
              description: By default deprecate Role If a value is true clears the
                deprecate from Role.
              type: boolean
            replacement:
              $ref: '#/definitions/RoleForeignKey'
              description: The suggested replacement Role foreign key for the current
                Role.
      responses:
        200:
          description: The JSON representation of a Role object.
          schema:
            $ref: '#/definitions/RoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/actions/promote/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    post:
      description: Promote Role to account scope.
      responses:
        200:
          description: The JSON representation of a Role object.
          schema:
            $ref: '#/definitions/RoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/global-variables/:
    get:
      description: List all the Global Variables associated with a given Role.
      responses:
        200:
          description: A list of GlobalVariable objects.
          schema:
            $ref: '#/definitions/GlobalVariableListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    post:
      description: Declares a new Global Variable for this Role.
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        201:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/global-variables/{globalVariableName}/:
    delete:
      description: Deletes a Global Variable from this Role's scope.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about Global Variable in the Role's
        scope.
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    - description: The name of the Global Variable being accessed.
      in: path
      maxLength: 128
      minLength: 2
      name: globalVariableName
      pattern: \w+
      required: true
      type: string
    patch:
      description: Modify the attributes of a Global Variable in the Role's scope.
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/images/:
    get:
      description: List all Images associated with a given Role.
      responses:
        200:
          description: A list of RoleImage objects.
          schema:
            $ref: '#/definitions/RoleImageListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    post:
      description: Associates a new Image with a given Role. This will fail if an
        Image associated to the Role is in the same location than the Image you are
        trying to add.
      parameters:
      - description: The JSON representation of a RoleImage object.
        in: body
        name: roleImageObject
        required: true
        schema:
          $ref: '#/definitions/RoleImage'
      responses:
        201:
          description: The JSON representation of a RoleImage object.
          schema:
            $ref: '#/definitions/RoleImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/images/{imageId}/:
    delete:
      description: Dis-associates an Image from a given Role.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about an Image.
      responses:
        200:
          description: Redirects to the Image.
          schema:
            $ref: '#/definitions/ImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    - description: The ID of a Image object.
      in: path
      maxLength: 36
      minLength: 36
      name: imageId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Image'
  /{envId}/roles/{roleId}/images/{imageId}/actions/replace/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    - description: The ID of a Image object.
      in: path
      maxLength: 36
      minLength: 36
      name: imageId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Image'
    post:
      description: Replace an Image in-place in a given Role. This allows to replace
        an Image without having to dis-associate it and then associate a new one,
        which may not be possible if a Farm Role is currently using this Image.
      parameters:
      - description: The JSON representation of a RoleImage object.
        in: body
        name: roleImageObject
        required: true
        schema:
          $ref: '#/definitions/RoleImage'
      responses:
        200:
          description: The JSON representation of a RoleImage object.
          schema:
            $ref: '#/definitions/RoleImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/orchestration-rules/:
    get:
      description: List the Orchestration Rules associated with a given Role, including
        Rules from higher Scopes (those are read-only).
      responses:
        200:
          description: A list of OrchestrationRule objects.
          schema:
            $ref: '#/definitions/OrchestrationRuleListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    post:
      description: Create a new Orchestration Rule associated to a Role.
      parameters:
      - description: The JSON representation of a OrchestrationRule object.
        in: body
        name: orchestrationRuleObject
        required: true
        schema:
          $ref: '#/definitions/OrchestrationRule'
      responses:
        201:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}/:
    delete:
      description: Delete the specified Orchestration Rule from the Role.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve a given Orchestration Rule associated to a Role.
      responses:
        200:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    - description: The ID of a OrchestrationRule object.
      in: path
      maxLength: 36
      minLength: 36
      name: orchestrationRuleId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/OrchestrationRule'
    patch:
      description: Modify the attributes of a given Orchestration Rule.
      parameters:
      - description: The JSON representation of a OrchestrationRule object.
        in: body
        name: orchestrationRuleObject
        required: true
        schema:
          $ref: '#/definitions/OrchestrationRule'
      responses:
        200:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/scaling-metrics/:
    get:
      description: List all Scaling metrics available in this Environment.
      responses:
        200:
          description: A list of ScalingMetric objects.
          schema:
            $ref: '#/definitions/ScalingMetricListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Add a new custom Scaling metric to this Environment.
      parameters:
      - description: The JSON representation of a ScalingMetric object.
        in: body
        name: scalingMetricObject
        required: true
        schema:
          $ref: '#/definitions/ScalingMetric'
      responses:
        201:
          description: The JSON representation of a ScalingMetric object.
          schema:
            $ref: '#/definitions/ScalingMetricDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/scaling-metrics/{metricName}/:
    delete:
      description: Delete a Scaling metric.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a given Scaling metric.
      responses:
        200:
          description: The JSON representation of a ScalingMetric object.
          schema:
            $ref: '#/definitions/ScalingMetricDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The name of the Scaling Metric.
      in: path
      maxLength: 50
      minLength: 5
      name: metricName
      pattern: '[A-Za-z0-9]+'
      required: true
      type: string
    patch:
      description: Modify the attributes of a Scaling metric.
      parameters:
      - description: The JSON representation of a ScalingMetric object.
        in: body
        name: scalingMetricObject
        required: true
        schema:
          $ref: '#/definitions/ScalingMetric'
      responses:
        200:
          description: The JSON representation of a ScalingMetric object.
          schema:
            $ref: '#/definitions/ScalingMetricDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/script-executions/{scriptExecutionId}/:
    get:
      description: Describes detailed information about a state of the script execution.
      responses:
        200:
          description: The JSON representation of a ScriptExecution object.
          schema:
            $ref: '#/definitions/ScriptExecutionDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a ScriptExecution object.
      in: path
      maxLength: 36
      minLength: 36
      name: scriptExecutionId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/ScriptExecution'
  /{envId}/scripts/:
    get:
      description: List all the Scripts available in this Environment.
      responses:
        200:
          description: A list of Script objects.
          schema:
            $ref: '#/definitions/ScriptListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Create a new Script in this Environment.
      parameters:
      - description: The JSON representation of a Script object.
        in: body
        name: scriptObject
        required: true
        schema:
          $ref: '#/definitions/Script'
      responses:
        201:
          description: The JSON representation of a Script object.
          schema:
            $ref: '#/definitions/ScriptDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/scripts/{scriptId}/:
    delete:
      description: Deletes a given Script from this Environment.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a Script.
      responses:
        200:
          description: The JSON representation of a Script object.
          schema:
            $ref: '#/definitions/ScriptDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Script object.
      in: path
      name: scriptId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Script'
    patch:
      description: Modify the attributes of a Script.
      parameters:
      - description: The JSON representation of a Script object.
        in: body
        name: scriptObject
        required: true
        schema:
          $ref: '#/definitions/Script'
      responses:
        200:
          description: The JSON representation of a Script object.
          schema:
            $ref: '#/definitions/ScriptDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/scripts/{scriptId}/actions/execute/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Script object.
      in: path
      name: scriptId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Script'
    post:
      description: It executes the latest version of the Script on the Server.
      parameters:
      - description: The JSON representation of a ScriptExecutionRequest object.
        in: body
        name: scriptExecutionRequestObject
        required: true
        schema:
          $ref: '#/definitions/ScriptExecutionRequest'
      responses:
        202:
          description: The JSON representation of a ScriptExecution object.
          schema:
            $ref: '#/definitions/ScriptExecutionDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/scripts/{scriptId}/script-versions/:
    get:
      description: List all Script Versions for the specified Script.
      responses:
        200:
          description: A list of ScriptVersion objects.
          schema:
            $ref: '#/definitions/ScriptVersionListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Script object.
      in: path
      name: scriptId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Script'
    post:
      description: Create a new Script Version for a given Script.
      parameters:
      - description: The JSON representation of a ScriptVersion object.
        in: body
        name: scriptVersionObject
        required: true
        schema:
          $ref: '#/definitions/ScriptVersion'
      responses:
        201:
          description: The JSON representation of a ScriptVersion object.
          schema:
            $ref: '#/definitions/ScriptVersionDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/:
    delete:
      description: Delete a Script Version from this Script.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a specified Script Version.
      responses:
        200:
          description: The JSON representation of a ScriptVersion object.
          schema:
            $ref: '#/definitions/ScriptVersionDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Script object.
      in: path
      name: scriptId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Script'
    - description: The version number of the Script Version being accessed.
      in: path
      name: scriptVersionNumber
      required: true
      type: integer
    patch:
      description: Modify the attributes of a Script Version.
      parameters:
      - description: The JSON representation of a ScriptVersion object.
        in: body
        name: scriptVersionObject
        required: true
        schema:
          $ref: '#/definitions/ScriptVersion'
      responses:
        200:
          description: The JSON representation of a ScriptVersion object.
          schema:
            $ref: '#/definitions/ScriptVersionDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/actions/execute/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Script object.
      in: path
      name: scriptId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Script'
    - description: The version number of the Script Version being accessed.
      in: path
      name: scriptVersionNumber
      required: true
      type: integer
    post:
      description: It executes the specified version of the Script on the Server.
      parameters:
      - description: The JSON representation of a ScriptExecutionRequest object.
        in: body
        name: scriptExecutionRequestObject
        required: true
        schema:
          $ref: '#/definitions/ScriptExecutionRequest'
      responses:
        202:
          description: The JSON representation of a ScriptExecution object.
          schema:
            $ref: '#/definitions/ScriptExecutionDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/servers/:
    get:
      description: List all the Servers that exist in this Environment.
      responses:
        200:
          description: A list of ServerSummary objects.
          schema:
            $ref: '#/definitions/ServerSummaryListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Launch a new Server for the specified Farm Role.
      parameters:
      - description: Server launch options.
        in: body
        name: serverLaunchRequest
        required: true
        schema:
          properties:
            farmRole:
              $ref: '#/definitions/FarmRoleForeignKey'
          required:
          - farmRole
      responses:
        201:
          description: The JSON representation of a ServerSummary object.
          schema:
            $ref: '#/definitions/ServerSummaryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/servers/{serverId}/:
    get:
      description: Retrieve detailed information about a Server.
      responses:
        200:
          description: The JSON representation of a ServerSummary object.
          schema:
            $ref: '#/definitions/ServerSummaryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Server object.
      in: path
      maxLength: 36
      minLength: 36
      name: serverId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Server'
    patch:
      description: 'Modify the Instance type of the Server. Server status before this
        action depends on CloudPlatform: - For EC2 and OpenStack instance type change
        requires server status "suspended". - For VMware instance type change requires
        server status "running" or "suspended".'
      parameters:
      - description: The JSON representation of a Server object.
        in: body
        name: serverObject
        required: true
        schema:
          $ref: '#/definitions/Server'
      responses:
        200:
          description: The JSON representation of a ServerSummary object.
          schema:
            $ref: '#/definitions/ServerSummaryDetailsResponse'
        202:
          description: The JSON representation of a ServerSummary object.
          schema:
            $ref: '#/definitions/ServerSummaryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/servers/{serverId}/actions/reboot/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Server object.
      in: path
      maxLength: 36
      minLength: 36
      name: serverId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Server'
    post:
      description: Reboot a Server.
      parameters:
      - description: Additional options for the Server reboot.
        in: body
        name: serverRebootOptions
        required: false
        schema:
          properties:
            hard:
              description: 'Reboot type.  A soft reboot is performed unless this option
                is set to true. Note: some instance types do not support soft reboots.'
              type: boolean
      responses:
        200:
          description: The JSON representation of a ServerSummary object.
          schema:
            $ref: '#/definitions/ServerSummaryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/servers/{serverId}/actions/resume/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Server object.
      in: path
      maxLength: 36
      minLength: 36
      name: serverId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Server'
    post:
      description: Resume a suspended Server.
      responses:
        200:
          description: The JSON representation of a ServerSummary object.
          schema:
            $ref: '#/definitions/ServerSummaryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/servers/{serverId}/actions/suspend/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Server object.
      in: path
      maxLength: 36
      minLength: 36
      name: serverId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Server'
    post:
      description: Suspend a Server.
      responses:
        200:
          description: The JSON representation of a ServerSummary object.
          schema:
            $ref: '#/definitions/ServerSummaryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/servers/{serverId}/actions/terminate/:
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Server object.
      in: path
      maxLength: 36
      minLength: 36
      name: serverId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Server'
    post:
      description: Terminate a Server.
      parameters:
      - description: Additional options for the Server termination.
        in: body
        name: serverTerminationOptions
        required: false
        schema:
          properties:
            force:
              description: Whether the Server should be terminated immediately, ignoring
                scalr.system.server_terminate_timeout.
              type: boolean
      responses:
        200:
          description: The JSON representation of a ServerSummary object.
          schema:
            $ref: '#/definitions/ServerSummaryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/servers/{serverId}/global-variables/:
    get:
      description: List all the Global Variables associated with this Server.
      responses:
        200:
          description: A list of GlobalVariable objects.
          schema:
            $ref: '#/definitions/GlobalVariableListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Server object.
      in: path
      maxLength: 36
      minLength: 36
      name: serverId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Server'
    post:
      description: Declare a new Global Variable for this Server.
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        201:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/servers/{serverId}/global-variables/{globalVariableName}/:
    delete:
      description: Delete a Global Variable from this Server's scope.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a Global Variable in this Server's
        scope.
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Server object.
      in: path
      maxLength: 36
      minLength: 36
      name: serverId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Server'
    - description: The name of the Global Variable being accessed.
      in: path
      maxLength: 128
      minLength: 2
      name: globalVariableName
      pattern: \w+
      required: true
      type: string
    patch:
      description: Modify the attributes of a Global Variable in this Server's scope.
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/webhook-endpoints/:
    get:
      description: List all the Webhook endpoints available in this Environment.
      responses:
        200:
          description: A list of WebhookEndpoint objects.
          schema:
            $ref: '#/definitions/WebhookEndpointListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of the objects or actions being access are deprecated.
            name: Deprecated
          - description: The action can't be perfomed in the current object's state.
            name: UnacceptableState
          - description: The object that you are trying to access does not exist on
              the cloud.
            name: ObjectNotFoundOnCloud
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request.
      in: path
      name: envId
      required: true
      type: integer
produces:
- application/json
swagger: '2.0'
x-dry-yaml-definitions:
  FarmRoleExpandProperites:
    advancedConfiguration: *id003
    availabilityZones: *id004
    bootstrapping: *id005
    cloudFeatures: *id006
    networking: *id007
    security: *id008
  architecture:
    enum: *id012
    type: string
  cloudLocationProperties:
    cloudLocation: *id010
    cloudPlatform: *id011
  cloudstackProvider:
    description: Cloud provider that should be specified for CloudStack based clouds.
    enum:
    - cloudstack
    - idcf
    type: string
  mounting:
    $ref: '#/definitions/MountConfiguration'
    description: Configuration contains the necessary information to automate the
      process of mounting partitions.
  openstackProvider:
    description: Cloud provider that should be specified for OpenStack based clouds.
    enum:
    - openstack
    - ocs
    - hpcloud
    - mirantis
    - vio
    - cisco
    type: string
  pathParamsPatterns:
    uuid:
      maxLength: 36
      minLength: 36
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
    uuidShort:
      maxLength: 12
      minLength: 12
      pattern: '[A-Fa-f0-9]+'
  scopeProperty:
    enum: *id001
    type: string
  unlockPermission:
    enum: *id009
    type: string

