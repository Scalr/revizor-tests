basePath: /api/v1beta0/account
definitions:
  AccountRole:
    properties:
      allowedEnvironments:
        description: List of allowed Environments accessible to this Role.
        items:
          $ref: '#/definitions/EnvironmentForeignKey'
        type: array
      builtinAutomation:
        items:
          enum:
          - base
          - chef
          - mysql
          - percona
          - postgresql
          - redis
          - apache
          - nginx
          - tomcat
          - haproxy
          - rabbitmq
          - memcached
          type: string
        type: array
      category:
        $ref: '#/definitions/RoleCategoryForeignKey'
      deprecated:
        $ref: '#/definitions/RoleDeprecatedOptions'
        description: The deprecation options associated with this Role.
        readOnly: true
      description:
        type: string
      id:
        readOnly: true
        type: integer
      name:
        type: string
      os:
        $ref: '#/definitions/OsForeignKey'
      quickStart:
        description: Whether this Role is a QuickStart Role.
        type: boolean
      quickStartGroup:
        description: The name of the QuickStart Group.
        type: string
      restrictedAccess:
        description: It restricts access to the Role except of allowed Environments.
        type: boolean
      scope:
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      tags:
        description: The list of tags that should be applied to the Role.
        items:
          type: string
        type: array
      useScalrAgent:
        description: Whether this Role uses Scalarizr, the Scalr agent.
        type: boolean
    required:
    - name
    - category
    - os
    x-createOnly:
    - useScalrAgent
    - builtinAutomation
    - os
    x-derived:
      $ref: '#/definitions/Role'
    x-filterable:
    - id
    - name
    - os
    - category
    - scope
    - quickStart
    - quickStartGroup
    - useScalrAgent
    - builtinAutomation
    - restrictedAccess
    x-references:
      $ref: '#/definitions/Role'
    x-usedIn:
    - /account/{accountId}/roles/
    - /account/{accountId}/roles/{roleId}/
  AccountRoleDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/AccountRole'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/AccountRole'
    x-usedIn:
    - /account/{accountId}/roles/{roleId}/actions/clone/
    - /account/{accountId}/roles/
    - /account/{accountId}/roles/{roleId}/actions/deprecate/
    - /account/{accountId}/roles/{roleId}/
  AccountRoleListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/AccountRole'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/AccountRole'
    x-usedIn:
    - /account/{accountId}/roles/
  AclRole:
    properties:
      baseRole:
        description: Base ACL Role to override.
        enum:
        - no-access
        - full-access
        - read-only
        type: string
      id:
        description: Unique identifier for this ACL Role object.
        maxLength: 20
        minLength: 20
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      name:
        description: Name of this ACL Role.
        type: string
    required:
    - name
    x-createOnly:
    - baseRole
    x-filterable:
    - id
    - name
    - baseRole
  AclRoleForeignKey:
    properties:
      id:
        description: Unique identifier for this ACL Role object.
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/AclRole'
    x-references:
      $ref: '#/definitions/AclRole'
  AclRoleListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/AclRole'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/AclRole'
    x-usedIn:
    - /account/{accountId}/acl-roles/
  Action:
    discriminator: actionType
    properties:
      actionType:
        enum:
        - ScalrScriptAction
        - RemoteScriptAction
        - ChefAction
        - LocalScriptAction
        - AnsibleTowerAction
        type: string
    required:
    - actionType
    x-concreteTypes:
    - $ref: '#/definitions/RemoteScriptAction'
    - $ref: '#/definitions/LocalScriptAction'
    - $ref: '#/definitions/AnsibleTowerAction'
    - $ref: '#/definitions/ChefAction'
    - $ref: '#/definitions/ScalrScriptAction'
  AllEventsTrigger:
    description: Triggers when any Event fires.
    properties:
      triggerType:
        enum:
        - AllEventsTrigger
        - SpecificEventTrigger
        type: string
    required:
    - triggerType
    x-abstractType:
      $ref: '#/definitions/Trigger'
    x-discriminator: triggerType
  AnsibleTowerAction:
    properties:
      actionType:
        enum:
        - ScalrScriptAction
        - RemoteScriptAction
        - ChefAction
        - LocalScriptAction
        - AnsibleTowerAction
        type: string
      configuration:
        $ref: '#/definitions/AnsibleTowerConfigurationIdentity'
        description: Ansible Tower identity stored at Bootstrap Configurations.
      jobTemplate:
        $ref: '#/definitions/JobTemplateIdentity'
        description: Ansible Tower Job template stored at Tower Server.
      variables:
        description: The Ansible Tower variables to override. JSON or YAML representation.
        type: string
    required:
    - actionType
    - configuration
    - jobTemplate
    x-abstractType:
      $ref: '#/definitions/Action'
    x-discriminator: actionType
  AnsibleTowerConfigurationIdentity:
    properties:
      id:
        description: The Ansible Tower configuration identifier.
        type: integer
      name:
        description: The Ansible Tower configuration name.
        type: string
  ApiErrorResponse:
    description: Common reponse for erroneous requests.
    properties:
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-usedIn:
    - /account/{accountId}/roles/{roleId}/images/{imageId}/actions/replace/
    - /account/{accountId}/images/{imageId}/
    - /account/{accountId}/roles/{roleId}/global-variables/
    - /account/{accountId}/environments/{envId}/clouds/{cloud}/
    - /account/{accountId}/os/
    - /account/{accountId}/roles/{roleId}/actions/clone/
    - /account/{accountId}/global-variables/
    - /account/{accountId}/environments/{envId}/teams/{teamId}/
    - /account/{accountId}/cost-centers/{costCenterId}/
    - /account/{accountId}/roles/{roleId}/orchestration-rules/
    - /account/{accountId}/roles/{roleId}/images/{imageId}/
    - /account/{accountId}/scaling-metrics/{metricName}/
    - /account/{accountId}/environments/
    - /account/{accountId}/roles/
    - /account/{accountId}/role-categories/{roleCategoryId}/
    - /account/{accountId}/cloud-credentials/{cloudCredentialsId}/
    - /account/{accountId}/scaling-metrics/
    - /account/{accountId}/cloud-credentials/
    - /account/{accountId}/orchestration-rules/{orchestrationRuleId}/
    - /account/{accountId}/orchestration-rules/
    - /account/{accountId}/images/{imageId}/actions/replace/
    - /account/{accountId}/scripts/{scriptId}/
    - /account/{accountId}/os/{osId}/
    - /account/{accountId}/cost-centers/
    - /account/{accountId}/scripts/{scriptId}/script-versions/
    - /account/{accountId}/acl-roles/
    - /account/{accountId}/environments/{envId}/
    - /account/{accountId}/teams/{teamId}/
    - /account/{accountId}/teams/
    - /account/{accountId}/environments/{envId}/teams/
    - /account/{accountId}/role-categories/
    - /account/{accountId}/events/
    - /account/{accountId}/roles/{roleId}/global-variables/{globalVariableName}/
    - /account/{accountId}/scripts/
    - /account/{accountId}/roles/{roleId}/actions/deprecate/
    - /account/{accountId}/webhook-endpoints/
    - /account/{accountId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/
    - /account/{accountId}/roles/{roleId}/images/
    - /account/{accountId}/roles/{roleId}/
    - /account/{accountId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}/
    - /account/{accountId}/images/
    - /account/{accountId}/environments/{envId}/clouds/
    - /account/{accountId}/global-variables/{globalVariableName}/
    - /account/{accountId}/images/{imageId}/actions/copy/
    - /account/{accountId}/events/{eventId}/
  ApiMessage:
    properties:
      code:
        description: A machine-readable representation of the message.
        type: string
      message:
        description: A human-readable representation of the message.
        type: string
  ApiMetaContainer:
    properties:
      sample:
        description: Actual properties TBD.
        type: string
  ApiPagination:
    properties:
      first:
        readOnly: true
        type: string
      last:
        readOnly: true
        type: string
      next:
        readOnly: true
        type: string
      prev:
        readOnly: true
        type: string
  AwsCloudCredentials:
    properties:
      accessKey:
        description: Acces key ID.
        type: string
      accountId:
        description: AWS Account ID.
        readOnly: true
        type: string
      accountType:
        description: AWS Account type.
        enum:
        - regular
        - govcloud
        - china
        type: string
      billing:
        $ref: '#/definitions/AwsDetailedBilling'
      cloudCredentialsType:
        description: The Cloud Platform these credentials allow access to.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        - VmwareCloudCredentials
        type: string
      description:
        type: string
      id:
        description: Unique identifier for this Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      name:
        description: Unique name of these Cloud Credentials.
        type: string
      provider:
        description: Cloud provider for Openstack or Cloudstack based clouds.
        type: string
      scope:
        description: The scope in which these Cloud Credentials were added.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      secretKey:
        description: The secret key.
        type: string
      status:
        description: The status of these Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
    required:
    - name
    - cloudCredentialsType
    - accountType
    - accessKey
    - secretKey
    x-abstractType:
      $ref: '#/definitions/CloudCredentials'
    x-createOnly:
    - cloudCredentialsType
    - provider
    x-discriminator: cloudCredentialsType
    x-filterable:
    - id
    - name
    - cloudCredentialsType
    - status
    - scope
    - provider
    - accountType
  AwsDetailedBilling:
    properties:
      bucket:
        description: Billing bucket name.
        type: string
      cloudCredentials:
        $ref: '#/definitions/CloudCredentialsForeignKey'
        description: Payer AWS Cloud Credentials.
      cloudLocation:
        description: Billing bucket region.
        type: string
      enabled:
        default: false
        description: Whether detailed billing is enabled.
        type: boolean
  AwsImageCloudFeatures:
    description: Cloud specifics Image configuration.
    properties:
      type:
        enum:
        - AwsImageCloudFeatures
        - VmwareImageCloudFeatures
        type: string
      virtualization:
        description: 'The Image virtualization type. Can be one of two types of virtualization:
          paravirtual (pv) or hardware virtual machine (hvm). At the Environment scope
          this property is read-only.'
        enum:
        - hvm
        - paravirtual
        type: string
    required:
    - type
    x-abstractType:
      $ref: '#/definitions/ImageCloudFeatures'
    x-discriminator: type
  AzureCloudCredentials:
    properties:
      cloudCredentialsType:
        description: The Cloud Platform these credentials allow access to.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        - VmwareCloudCredentials
        type: string
      description:
        type: string
      id:
        description: Unique identifier for this Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      name:
        description: Unique name of these Cloud Credentials.
        type: string
      provider:
        description: Cloud provider for Openstack or Cloudstack based clouds.
        type: string
      scope:
        description: The scope in which these Cloud Credentials were added.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      status:
        description: The status of these Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
      subscription:
        description: The Azure Subscription ID.
        type: string
      tenantId:
        description: The Azure Active Directory identifier.
        type: string
    required:
    - name
    - cloudCredentialsType
    - tenantId
    - subscription
    x-abstractType:
      $ref: '#/definitions/CloudCredentials'
    x-createOnly:
    - cloudCredentialsType
    - provider
    x-discriminator: cloudCredentialsType
    x-filterable:
    - id
    - name
    - cloudCredentialsType
    - status
    - scope
    - provider
  ChefAction:
    properties:
      actionType:
        enum:
        - ScalrScriptAction
        - RemoteScriptAction
        - ChefAction
        - LocalScriptAction
        - AnsibleTowerAction
        type: string
    required:
    - actionType
    x-abstractType:
      $ref: '#/definitions/Action'
    x-discriminator: actionType
  Cloud:
    properties:
      cloud:
        description: The Cloud Platform this resource resides in.
        enum: &id001
        - ec2
        - gce
        - azure
        - cloudstack
        - idcf
        - openstack
        - ocs
        - rackspacenguk
        - rackspacengus
        - hpcloud
        - mirantis
        - vio
        - cisco
        - vmware
        type: string
      credentials:
        $ref: '#/definitions/CloudCredentialsForeignKey'
  CloudCredentials:
    discriminator: cloudCredentialsType
    properties:
      cloudCredentialsType:
        description: The Cloud Platform these credentials allow access to.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        - VmwareCloudCredentials
        type: string
      description:
        type: string
      id:
        description: Unique identifier for this Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      name:
        description: Unique name of these Cloud Credentials.
        type: string
      provider:
        description: Cloud provider for Openstack or Cloudstack based clouds.
        type: string
      scope:
        description: The scope in which these Cloud Credentials were added.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      status:
        description: The status of these Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
    required:
    - name
    - cloudCredentialsType
    x-concreteTypes:
    - $ref: '#/definitions/AwsCloudCredentials'
    - $ref: '#/definitions/OpenstackCloudCredentials'
    - $ref: '#/definitions/GceCloudCredentials'
    - $ref: '#/definitions/CloudstackCloudCredentials'
    - $ref: '#/definitions/RackspaceCloudCredentials'
    - $ref: '#/definitions/VmwareCloudCredentials'
    - $ref: '#/definitions/AzureCloudCredentials'
    x-createOnly:
    - cloudCredentialsType
    - provider
    x-filterable:
    - id
    - name
    - cloudCredentialsType
    - status
    - scope
    - provider
    x-usedIn:
    - /account/{accountId}/cloud-credentials/{cloudCredentialsId}/
    - /account/{accountId}/cloud-credentials/
  CloudCredentialsDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/CloudCredentials'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/CloudCredentials'
    x-usedIn:
    - /account/{accountId}/environments/{envId}/clouds/{cloud}/
    - /account/{accountId}/cloud-credentials/{cloudCredentialsId}/
    - /account/{accountId}/cloud-credentials/
  CloudCredentialsForeignKey:
    properties:
      id:
        description: Unique identifier of a Cloud Credentials object.
        type: string
    required:
    - id
    x-usedIn:
    - /account/{accountId}/environments/{envId}/clouds/{cloud}/
  CloudCredentialsSummary:
    properties:
      cloudCredentialsType:
        description: The Cloud Platform these credentials allow access to.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        - VmwareCloudCredentials
        type: string
      description:
        type: string
      id:
        description: Unique identifier for this Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      name:
        description: Unique name of these Cloud Credentials.
        type: string
      provider:
        description: Cloud provider for Openstack or Cloudstack based clouds.
        type: string
      scope:
        description: The scope in which these Cloud Credentials were added.
        enum: &id002
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      status:
        description: The status of these Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
    required:
    - name
    - cloudCredentialsType
    x-createOnly:
    - cloudCredentialsType
    - provider
    x-filterable:
    - id
    - name
    - cloudCredentialsType
    - status
    - scope
    - provider
  CloudCredentialsSummaryListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/CloudCredentialsSummary'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/CloudCredentialsSummary'
    x-usedIn:
    - /account/{accountId}/cloud-credentials/
  CloudListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Cloud'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Cloud'
    x-usedIn:
    - /account/{accountId}/environments/{envId}/clouds/
  CloudLocation:
    properties:
      cloudLocation: &id003
        description: 'Cloud Location, inside a given Cloud Platform, for this resource.
          May be null if this resource does not have a specific location. Note: if
          you would like to filter on this property, you **must** also filter on `cloudPlatform`.'
        type: string
      cloudPlatform: &id004
        description: The Cloud Platform this resource resides in.
        enum: *id001
        type: string
    required:
    - cloudPlatform
    x-filterable:
    - cloudPlatform
    - cloudLocation
  CloudstackCloudCredentials:
    properties:
      apiKey:
        description: The API key.
        type: string
      apiUrl:
        description: 'The URL like: http(s)://<cloudstack_ip>:<cloudstack_port>/client/api.'
        type: string
      cloudCredentialsType:
        description: The Cloud Platform these credentials allow access to.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        - VmwareCloudCredentials
        type: string
      description:
        type: string
      id:
        description: Unique identifier for this Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      name:
        description: Unique name of these Cloud Credentials.
        type: string
      provider:
        description: Cloud provider that should be specified for CloudStack based
          clouds.
        enum: &id006
        - cloudstack
        - idcf
        type: string
      scope:
        description: The scope in which these Cloud Credentials were added.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      secretKey:
        description: The secret key.
        type: string
      status:
        description: The status of these Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
    required:
    - name
    - cloudCredentialsType
    - provider
    - apiUrl
    - apiKey
    - secretKey
    x-abstractType:
      $ref: '#/definitions/CloudCredentials'
    x-createOnly:
    - cloudCredentialsType
    - provider
    - provider
    x-discriminator: cloudCredentialsType
    x-filterable:
    - id
    - name
    - cloudCredentialsType
    - status
    - scope
    - provider
  ComposedTeamIdentity:
    properties:
      id:
        description: Unique identifier for a Team.
        type: integer
      name:
        description: Team name.
        readOnly: true
        type: string
    required:
    - id
  CostCenter:
    properties:
      billingCode:
        readOnly: true
        type: string
      id:
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      name:
        type: string
    required:
    - name
    x-filterable:
    - id
    - name
    - billingCode
    x-usedIn:
    - /account/{accountId}/cost-centers/{costCenterId}/
  CostCenterDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/CostCenter'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/CostCenter'
    x-usedIn:
    - /account/{accountId}/cost-centers/{costCenterId}/
  CostCenterForeignKey:
    properties:
      id:
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/CostCenter'
    x-references:
      $ref: '#/definitions/CostCenter'
  CostCenterListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/CostCenter'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/CostCenter'
    x-usedIn:
    - /account/{accountId}/cost-centers/
  Environment:
    properties:
      added:
        format: date-time
        readOnly: true
        type: string
      costCenter:
        $ref: '#/definitions/CostCenterForeignKey'
      id:
        readOnly: true
        type: integer
      name:
        type: string
      status:
        enum:
        - active
        - inactive
        type: string
    required:
    - name
    - costCenter
    x-filterable:
    - id
    - name
    - added
    - status
    - costCenter
    x-usedIn:
    - /account/{accountId}/environments/
    - /account/{accountId}/environments/{envId}/
  EnvironmentDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Environment'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Environment'
    x-usedIn:
    - /account/{accountId}/environments/
    - /account/{accountId}/environments/{envId}/
  EnvironmentForeignKey:
    properties:
      id:
        description: Unique identifier of a Environment object.
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/Environment'
    x-references:
      $ref: '#/definitions/Environment'
  EnvironmentListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Environment'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Environment'
    x-usedIn:
    - /account/{accountId}/environments/
  EnvironmentTeam:
    properties:
      defaultAclRole:
        $ref: '#/definitions/AclRoleForeignKey'
        description: Default ACL Role to override the Team's default ACL Role for
          this Environment. If it is ommited Team's default ACL Role will be used.
          Note that this default ACL Role is only applied for members of the Team
          that don't have an explicitely defined ACL Role.
      team:
        $ref: '#/definitions/ComposedTeamIdentity'
        description: Identifier and name of the Team.
    required:
    - team
    x-createOnly:
    - team
    x-filterable:
    - team
    - defaultAclRole
    x-usedIn:
    - /account/{accountId}/environments/{envId}/teams/{teamId}/
    - /account/{accountId}/environments/{envId}/teams/
  EnvironmentTeamDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/EnvironmentTeam'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/EnvironmentTeam'
    x-usedIn:
    - /account/{accountId}/environments/{envId}/teams/{teamId}/
    - /account/{accountId}/environments/{envId}/teams/
  EnvironmentTeamListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/EnvironmentTeam'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/EnvironmentTeam'
    x-usedIn:
    - /account/{accountId}/environments/{envId}/teams/
  Event:
    properties:
      description:
        type: string
      id:
        description: The name of this Custom Event.
        maxLength: 25
        pattern: '[A-Za-z0-9]+'
        type: string
      scope:
        enum: *id002
        readOnly: true
        type: string
    required:
    - id
    x-createOnly:
    - id
    x-filterable:
    - id
    - scope
    x-usedIn:
    - /account/{accountId}/events/
    - /account/{accountId}/events/{eventId}/
  EventDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Event'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Event'
    x-usedIn:
    - /account/{accountId}/events/
    - /account/{accountId}/events/{eventId}/
  EventForeignKey:
    properties:
      id:
        description: The name of this Custom Event.
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/Event'
    x-references:
      $ref: '#/definitions/Event'
  EventListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Event'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Event'
    x-usedIn:
    - /account/{accountId}/events/
  FarmRoleForeignKey:
    properties:
      id:
        description: The ID of the Farm that is referred to.
        type: integer
    required:
    - id
  FarmRoleIdentity:
    properties:
      alias:
        description: The Alias for this Farm Role.
        type: string
      id:
        description: Unique identifier for this Farm Role.
        readOnly: true
        type: integer
  FarmRolesCondition:
    properties:
      farmRoles:
        description: Farm Role identity objects.
        items:
          $ref: '#/definitions/FarmRoleIdentity'
        type: array
      type:
        description: Orchestration rule condition type. Selected only those servers
          that match conditions.
        enum:
        - FarmRolesCondition
        - OsCondition
        - TagsCondition
        type: string
    required:
    - type
    x-abstractType:
      $ref: '#/definitions/OrchestrationRuleCondition'
    x-discriminator: type
  FarmTarget:
    description: Selects all the Servers that belong to the triggering Server's Farm.
    properties:
      conditions:
        description: 'Triggering servers conditions. '
        items:
          $ref: '#/definitions/OrchestrationRuleCondition'
        type: array
      targetType:
        enum:
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-abstractType:
      $ref: '#/definitions/Target'
    x-discriminator: targetType
  GceCloudCredentials:
    properties:
      accountName:
        description: The service account name.
        type: string
      clientId:
        description: GCE client ID.
        type: string
      cloudCredentialsType:
        description: The Cloud Platform these credentials allow access to.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        - VmwareCloudCredentials
        type: string
      description:
        type: string
      id:
        description: Unique identifier for this Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      name:
        description: Unique name of these Cloud Credentials.
        type: string
      privateKey:
        description: Private key with boundary.
        format: byte
        type: string
      projectId:
        description: GCE project ID.
        type: string
      provider:
        description: Cloud provider for Openstack or Cloudstack based clouds.
        type: string
      scope:
        description: The scope in which these Cloud Credentials were added.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      status:
        description: The status of these Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
    required:
    - name
    - cloudCredentialsType
    - projectId
    - clientId
    - accountName
    - privateKey
    x-abstractType:
      $ref: '#/definitions/CloudCredentials'
    x-createOnly:
    - cloudCredentialsType
    - provider
    x-discriminator: cloudCredentialsType
    x-filterable:
    - id
    - name
    - cloudCredentialsType
    - status
    - scope
    - provider
  GlobalVariable:
    properties:
      category:
        description: The category of this Global Variable.
        type: string
      computedCategory:
        description: The category computed by Scalr for this Global Variable.
        readOnly: true
        type: string
      computedValue:
        description: The value computed by Scalr for this Global Variable.
        readOnly: true
        type: string
      declaredIn:
        description: The Scope in which this Global Variable is declared.
        enum: *id002
        readOnly: true
        type: string
      definedIn:
        description: The Scope in which this Global Vsariable is given a value.
        enum: *id002
        readOnly: true
        type: string
      description:
        description: A description that explains what this Global Variable is used
          for.
        type: string
      hidden:
        description: Whether this Global Variable is hidden in inner scopes. This
          is read-only if `declaredIn` is not the current scope.
        type: boolean
      locked:
        description: Whether this Global Variable is locked in inner scopes. This
          is read-only if `declaredIn` is not the current scope.
        type: boolean
      name:
        type: string
      outputFormat:
        description: The formatting to apply when displaying this variable. This is
          read-only if `declaredIn` is not the current scope.
        type: string
      requiredIn:
        description: The scope where this Global Variable is required. This is read-only
          if `declaredIn` is not the current scope.
        enum: *id002
        type: string
      validationPattern:
        description: A validation pattern to apply in inner scopes. This is read-only
          if `declaredIn` is not the current scope.
        type: string
      value:
        description: The value declared in the current scope for this Global Variable.
          If it is null, the value will be inherited from higher scopes. This field
          is ignored if `declaredIn` is not the current scope.
        type: string
    required:
    - name
    x-createOnly:
    - name
    x-usedIn:
    - /account/{accountId}/roles/{roleId}/global-variables/
    - /account/{accountId}/global-variables/
    - /account/{accountId}/roles/{roleId}/global-variables/{globalVariableName}/
    - /account/{accountId}/global-variables/{globalVariableName}/
  GlobalVariableDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/GlobalVariable'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/GlobalVariable'
    x-usedIn:
    - /account/{accountId}/roles/{roleId}/global-variables/
    - /account/{accountId}/global-variables/
    - /account/{accountId}/roles/{roleId}/global-variables/{globalVariableName}/
    - /account/{accountId}/global-variables/{globalVariableName}/
  GlobalVariableListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/GlobalVariable'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/GlobalVariable'
    x-usedIn:
    - /account/{accountId}/roles/{roleId}/global-variables/
    - /account/{accountId}/global-variables/
  Image:
    properties:
      added:
        description: Date and time at which this Image was created.
        format: date-time
        readOnly: true
        type: string
      architecture:
        enum: &id005
        - i386
        - x86_64
        type: string
      cloudFeatures:
        $ref: '#/definitions/ImageCloudFeatures'
      cloudImageId:
        type: string
      cloudInitInstalled:
        description: Whether cloud-init is installed on this Image.
        type: boolean
      cloudLocation: *id003
      cloudPlatform: *id004
      deprecated:
        description: Whether this Image is deprecated.
        type: boolean
      id:
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      lastUsed:
        description: Date and time at which this Image was last used.
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      os:
        $ref: '#/definitions/OsForeignKey'
      scalrAgentInstalled:
        description: Whether Scalarizer is installed on this Image.
        type: boolean
      scope:
        enum: *id002
        readOnly: true
        type: string
      size:
        description: Size of the image in GB. This property is read-only at the Environment
          scope.
        type: integer
      source:
        description: Indicates how this Image was created.
        enum:
        - Manual
        - BundleTask
        readOnly: true
        type: string
      status:
        description: Current status for this Image. `failed` means that the deletion
          failed.
        enum:
        - active
        - pending_delete
        - failed
        readOnly: true
        type: string
      statusError:
        description: If the Image is in a failed state, this indicates why.
        readOnly: true
        type: string
      type:
        description: (Only used on EC2 currently) Whether this Image is HVM or EBS.
          At the Environment scope this property is read-only. Property is deprecated
          and will be removed soon. Use 'cloudFeatures' instead.
        type: string
    required:
    - name
    - cloudPlatform
    - cloudImageId
    - architecture
    - os
    x-createOnly:
    - cloudImageId
    - size
    - type
    - scalrAgentInstalled
    - cloudInitInstalled
    - cloudLocation
    - cloudPlatform
    - os
    - architecture
    - cloudFeatures
    x-filterable:
    - id
    - name
    - scope
    - cloudPlatform
    - cloudLocation
    - cloudImageId
    - architecture
    - source
    - status
    - deprecated
    - os
    - scalrAgentInstalled
    - cloudInitInstalled
    x-usedIn:
    - /account/{accountId}/roles/{roleId}/images/{imageId}/actions/replace/
    - /account/{accountId}/images/{imageId}/
    - /account/{accountId}/roles/{roleId}/images/{imageId}/
    - /account/{accountId}/images/{imageId}/actions/replace/
    - /account/{accountId}/images/
    - /account/{accountId}/images/{imageId}/actions/copy/
  ImageCloudFeatures:
    description: Cloud specifics Image configuration.
    discriminator: type
    properties:
      type:
        enum:
        - AwsImageCloudFeatures
        - VmwareImageCloudFeatures
        type: string
    required:
    - type
    x-concreteTypes:
    - $ref: '#/definitions/VmwareImageCloudFeatures'
    - $ref: '#/definitions/AwsImageCloudFeatures'
  ImageDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Image'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Image'
    x-usedIn:
    - /account/{accountId}/images/{imageId}/
    - /account/{accountId}/roles/{roleId}/images/{imageId}/
    - /account/{accountId}/images/
    - /account/{accountId}/images/{imageId}/actions/copy/
  ImageForeignKey:
    properties:
      id:
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/Image'
    x-references:
      $ref: '#/definitions/Image'
  ImageListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Image'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Image'
    x-usedIn:
    - /account/{accountId}/images/
  JobTemplateIdentity:
    properties:
      id:
        description: The Ansible Tower Job template identifier.
        type: integer
      name:
        description: The Ansible Tower Job template name.
        type: string
  LocalScriptAction:
    properties:
      actionType:
        enum:
        - ScalrScriptAction
        - RemoteScriptAction
        - ChefAction
        - LocalScriptAction
        - AnsibleTowerAction
        type: string
      path:
        description: Path to the script to execute.
        type: string
    required:
    - actionType
    - path
    x-abstractType:
      $ref: '#/definitions/Action'
    x-discriminator: actionType
  OpenstackCloudCredentials:
    properties:
      cloudCredentialsType:
        description: The Cloud Platform these credentials allow access to.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        - VmwareCloudCredentials
        type: string
      description:
        type: string
      domainName:
        description: Domain name. It must be provided for the Identity API v3.
        type: string
      id:
        description: Unique identifier for this Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      keystoneUrl:
        description: Keystone URL.
        type: string
      name:
        description: Unique name of these Cloud Credentials.
        type: string
      password:
        description: The password for the user.
        format: password
        type: string
      provider:
        description: Cloud provider that should be specified for OpenStack based clouds.
        enum: &id007
        - openstack
        - ocs
        - hpcloud
        - mirantis
        - vio
        - cisco
        type: string
      scope:
        description: The scope in which these Cloud Credentials were added.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      sslVerification:
        description: Specifies whether it should verify SSL Certificate.
        type: boolean
      status:
        description: The status of these Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
      tenantName:
        description: The tenant name.
        type: string
      userName:
        description: The user name.
        type: string
    required:
    - name
    - cloudCredentialsType
    - provider
    - keystoneUrl
    - userName
    - password
    - tenantName
    x-abstractType:
      $ref: '#/definitions/CloudCredentials'
    x-createOnly:
    - cloudCredentialsType
    - provider
    - provider
    x-discriminator: cloudCredentialsType
    x-filterable:
    - id
    - name
    - cloudCredentialsType
    - status
    - scope
    - provider
  OrchestrationRule:
    properties:
      action:
        $ref: '#/definitions/Action'
        description: Orchestration Rule action that will be executed on the target
          servers.
      blocking:
        description: Whether this Orchestration Rule's execution should delay the
          execution of further Orchestration Rules and the triggering of further Events.
          Defaults to the action's default when null.
        type: boolean
      enabled:
        default: true
        description: If Orchestration Rule is not enabled this Rule won't be triggered.
        type: boolean
      id:
        description: Unique identifier for an Orchestration Rule.
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        readOnly: true
        type: string
      order:
        description: The priority of this Orchestration Rule relative to other Orchestration
          Rules that use the same triggeringEvent. Default is relative to existing
          Rules.
        type: integer
      runAs:
        description: User the Orchestration Rule should execute as. Defaults to root
          / Administrator when null.
        type: string
      scope:
        enum: *id002
        readOnly: true
        type: string
      target:
        $ref: '#/definitions/Target'
        description: The set of Servers where the Orchestration Rules Action will
          be executed.
      timeout:
        description: The time Scalr should wait for before aborting the execution
          of this Orchestration Rule, in seconds. Defaults to the action's default
          when null.
        type: integer
      trigger:
        $ref: '#/definitions/Trigger'
        description: Orchestration Rule trigger.
    required:
    - trigger
    - action
    - target
    x-filterable:
    - id
    - blocking
    - order
    - runAs
    x-usedIn:
    - /account/{accountId}/roles/{roleId}/orchestration-rules/
    - /account/{accountId}/orchestration-rules/{orchestrationRuleId}/
    - /account/{accountId}/orchestration-rules/
    - /account/{accountId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}/
  OrchestrationRuleCondition:
    discriminator: type
    properties:
      type:
        description: Orchestration rule condition type. Selected only those servers
          that match conditions.
        enum:
        - FarmRolesCondition
        - OsCondition
        - TagsCondition
        type: string
    required:
    - type
    x-concreteTypes:
    - $ref: '#/definitions/TagsCondition'
    - $ref: '#/definitions/OsCondition'
    - $ref: '#/definitions/FarmRolesCondition'
  OrchestrationRuleDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/OrchestrationRule'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/OrchestrationRule'
    x-usedIn:
    - /account/{accountId}/roles/{roleId}/orchestration-rules/
    - /account/{accountId}/orchestration-rules/{orchestrationRuleId}/
    - /account/{accountId}/orchestration-rules/
    - /account/{accountId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}/
  OrchestrationRuleListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/OrchestrationRule'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/OrchestrationRule'
    x-usedIn:
    - /account/{accountId}/roles/{roleId}/orchestration-rules/
    - /account/{accountId}/orchestration-rules/
  Os:
    properties:
      family:
        description: OS family.
        type: string
      generation:
        type: string
      id:
        description: An ID uniquely identifying this OS in Scalr.
        pattern: '[A-Za-z0-9-]+'
        type: string
      name:
        description: A human-readable name for this OS.
        type: string
      version:
        type: string
    required:
    - id
    - name
    - family
    - generation
    - version
    x-filterable:
    - id
    - name
    - family
    - generation
    x-usedIn:
    - /account/{accountId}/os/{osId}/
  OsCondition:
    properties:
      osType:
        description: OS family or type.
        type: string
      type:
        description: Orchestration rule condition type. Selected only those servers
          that match conditions.
        enum:
        - FarmRolesCondition
        - OsCondition
        - TagsCondition
        type: string
    required:
    - type
    x-abstractType:
      $ref: '#/definitions/OrchestrationRuleCondition'
    x-discriminator: type
  OsDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Os'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Os'
    x-usedIn:
    - /account/{accountId}/os/{osId}/
  OsForeignKey:
    properties:
      id:
        description: An ID uniquely identifying this OS in Scalr.
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/Os'
    x-references:
      $ref: '#/definitions/Os'
  OsListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Os'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Os'
    x-usedIn:
    - /account/{accountId}/os/
  RackspaceCloudCredentials:
    properties:
      apiKey:
        description: The API access key.
        type: string
      cloudCredentialsType:
        description: The Cloud Platform these credentials allow access to.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        - VmwareCloudCredentials
        type: string
      description:
        type: string
      id:
        description: Unique identifier for this Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      isUk:
        description: Indicates if these credentials are for Rackspace UK (true) or
          Rackspace US (false).
        type: boolean
      name:
        description: Unique name of these Cloud Credentials.
        type: string
      provider:
        description: Cloud provider for Openstack or Cloudstack based clouds.
        type: string
      scope:
        description: The scope in which these Cloud Credentials were added.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      status:
        description: The status of these Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
      userName:
        description: The user name.
        type: string
    required:
    - name
    - cloudCredentialsType
    - userName
    - apiKey
    x-abstractType:
      $ref: '#/definitions/CloudCredentials'
    x-createOnly:
    - cloudCredentialsType
    - provider
    - isUk
    x-discriminator: cloudCredentialsType
    x-filterable:
    - id
    - name
    - cloudCredentialsType
    - status
    - scope
    - provider
  RemoteScriptAction:
    properties:
      actionType:
        enum:
        - ScalrScriptAction
        - RemoteScriptAction
        - ChefAction
        - LocalScriptAction
        - AnsibleTowerAction
        type: string
      path:
        description: Path or URL to the script to execute.
        type: string
    required:
    - actionType
    - path
    x-abstractType:
      $ref: '#/definitions/Action'
    x-discriminator: actionType
  Role:
    properties:
      builtinAutomation:
        items:
          enum:
          - base
          - chef
          - mysql
          - percona
          - postgresql
          - redis
          - apache
          - nginx
          - tomcat
          - haproxy
          - rabbitmq
          - memcached
          type: string
        type: array
      category:
        $ref: '#/definitions/RoleCategoryForeignKey'
      deprecated:
        $ref: '#/definitions/RoleDeprecatedOptions'
        description: The deprecation options associated with this Role.
        readOnly: true
      description:
        type: string
      id:
        readOnly: true
        type: integer
      name:
        type: string
      os:
        $ref: '#/definitions/OsForeignKey'
      quickStart:
        description: Whether this Role is a QuickStart Role.
        type: boolean
      quickStartGroup:
        description: The name of the QuickStart Group.
        type: string
      scope:
        enum: *id002
        readOnly: true
        type: string
      tags:
        description: The list of tags that should be applied to the Role.
        items:
          type: string
        type: array
      useScalrAgent:
        description: Whether this Role uses Scalarizr, the Scalr agent.
        type: boolean
    required:
    - name
    - category
    - os
    x-createOnly:
    - useScalrAgent
    - builtinAutomation
    - os
    x-filterable:
    - id
    - name
    - os
    - category
    - scope
    - quickStart
    - quickStartGroup
    - useScalrAgent
    - builtinAutomation
    x-usedIn:
    - /account/{accountId}/roles/{roleId}/images/{imageId}/actions/replace/
    - /account/{accountId}/roles/{roleId}/global-variables/
    - /account/{accountId}/roles/{roleId}/actions/clone/
    - /account/{accountId}/roles/{roleId}/orchestration-rules/
    - /account/{accountId}/roles/{roleId}/images/{imageId}/
    - /account/{accountId}/roles/{roleId}/global-variables/{globalVariableName}/
    - /account/{accountId}/roles/{roleId}/actions/deprecate/
    - /account/{accountId}/roles/{roleId}/images/
    - /account/{accountId}/roles/{roleId}/
    - /account/{accountId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}/
  RoleCategory:
    properties:
      id:
        readOnly: true
        type: integer
      name:
        type: string
      scope:
        enum: *id002
        readOnly: true
        type: string
    required:
    - name
    x-filterable:
    - id
    - name
    - scope
    x-usedIn:
    - /account/{accountId}/role-categories/{roleCategoryId}/
    - /account/{accountId}/role-categories/
  RoleCategoryDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/RoleCategory'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/RoleCategory'
    x-usedIn:
    - /account/{accountId}/role-categories/{roleCategoryId}/
    - /account/{accountId}/role-categories/
  RoleCategoryForeignKey:
    properties:
      id:
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/RoleCategory'
    x-references:
      $ref: '#/definitions/RoleCategory'
  RoleCategoryListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/RoleCategory'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/RoleCategory'
    x-usedIn:
    - /account/{accountId}/role-categories/
  RoleDeprecatedOptions:
    properties:
      deprecated:
        description: The timestamp at which this Role was deprecated.
        format: date-time
        readOnly: true
        type: string
      replacement:
        $ref: '#/definitions/RoleForeignKey'
        description: The suggested replacement Role foreign key for the current Role.
        readOnly: true
  RoleForeignKey:
    properties:
      id:
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/Role'
    x-references:
      $ref: '#/definitions/Role'
  RoleImage:
    description: A Representation of a Role Image. Note that the `role` property is
      optional when POST-ing to a URL that already includes `{roleId}`.
    properties:
      image:
        $ref: '#/definitions/ImageForeignKey'
      role:
        $ref: '#/definitions/RoleForeignKey'
    required:
    - role
    - image
    x-filterable:
    - role
    - image
    x-usedIn:
    - /account/{accountId}/roles/{roleId}/images/{imageId}/actions/replace/
    - /account/{accountId}/roles/{roleId}/images/
  RoleImageDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/RoleImage'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/RoleImage'
    x-usedIn:
    - /account/{accountId}/roles/{roleId}/images/{imageId}/actions/replace/
    - /account/{accountId}/roles/{roleId}/images/
  RoleImageListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/RoleImage'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/RoleImage'
    x-usedIn:
    - /account/{accountId}/roles/{roleId}/images/
  RoleScopeIdentity:
    description: The Role Scope identity relation.
    properties:
      accountId:
        description: Account identifier.
        readOnly: true
        type: integer
      envId:
        description: Environment identifier.
        readOnly: true
        type: integer
      id:
        description: Identifier of the Role.
        readOnly: true
        type: integer
      scope:
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
  RoleScopeIdentityListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/RoleScopeIdentity'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/RoleScopeIdentity'
    x-usedIn:
    - /account/{accountId}/images/{imageId}/actions/replace/
  ScalingMetric:
    properties:
      filePath:
        description: Path to the File
        type: string
      function:
        description: Aggregate function to use when executing decision logic.
        enum:
        - average
        - sum
        - min
        - max
        type: string
      inverted:
        description: Whether this metric should be inverted. By default Farm Roles
          scale up when the value goes above the scale up threshold. If this is true,
          Farm Roles will scale up when the value goes below the scale up threshold.
        type: boolean
      name:
        description: The name of a Scaling Metric.
        type: string
      retrieveMethod:
        description: The operation that should be performed on the File to obtain
          the value of the Metric.
        enum:
        - read
        - execute
        - url-request
        type: string
      scope:
        enum: *id002
        readOnly: true
        type: string
    required:
    - name
    - retrieveMethod
    - filePath
    - function
    x-filterable:
    - name
    - retrieveMethod
    - function
    - inverted
    - scope
    x-usedIn:
    - /account/{accountId}/scaling-metrics/{metricName}/
    - /account/{accountId}/scaling-metrics/
  ScalingMetricDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/ScalingMetric'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ScalingMetric'
    x-usedIn:
    - /account/{accountId}/scaling-metrics/{metricName}/
    - /account/{accountId}/scaling-metrics/
  ScalingMetricForeignKey:
    properties:
      name:
        description: The name of a Scaling Metric.
        type: string
    required:
    - name
    x-filterable:
    - name
  ScalingMetricListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/ScalingMetric'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ScalingMetric'
    x-usedIn:
    - /account/{accountId}/scaling-metrics/
  ScalrScriptAction:
    properties:
      actionType:
        enum:
        - ScalrScriptAction
        - RemoteScriptAction
        - ChefAction
        - LocalScriptAction
        - AnsibleTowerAction
        type: string
      scriptVersion:
        $ref: '#/definitions/ScriptVersionForeignKey'
        description: ScriptVersion to execute.
    required:
    - actionType
    - scriptVersion
    x-abstractType:
      $ref: '#/definitions/Action'
    x-discriminator: actionType
  ScopeIdentity:
    properties:
      accountId:
        description: Account identifier.
        readOnly: true
        type: integer
      envId:
        description: Environment identifier.
        readOnly: true
        type: integer
      scope:
        enum: *id002
        readOnly: true
        type: string
  Script:
    properties:
      added:
        format: date-time
        readOnly: true
        type: string
      blockingDefault:
        description: Wether this Script is blocking by default. This can be overridden
          in the Orchestration Rules that use this Script.
        type: boolean
      deprecated:
        default: false
        description: Whether the Script is deprecated.
        type: boolean
      description:
        type: string
      id:
        readOnly: true
        type: integer
      lastChanged:
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      osType:
        description: Type of OS this Script should execute on. This will influence
          Orchestration Rules, and will impact the validation rules applied to the
          ScriptVersions.
        enum:
        - linux
        - windows
        - cross-platform
        type: string
      scope:
        enum: *id002
        readOnly: true
        type: string
      tags:
        description: The list of tags that should be applied to the Script.
        items:
          type: string
        type: array
      timeoutDefault:
        description: The time after which Scalr will abort the execution of this Script,
          in seconds. This can be overridden in the Orchestration Rules that use this
          Script.
        type: integer
    required:
    - name
    - osType
    x-createOnly:
    - osType
    x-filterable:
    - id
    - name
    - osType
    - blockingDefault
    - scope
    - deprecated
    x-usedIn:
    - /account/{accountId}/scripts/{scriptId}/
    - /account/{accountId}/scripts/{scriptId}/script-versions/
    - /account/{accountId}/scripts/
    - /account/{accountId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/
  ScriptDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Script'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Script'
    x-usedIn:
    - /account/{accountId}/scripts/{scriptId}/
    - /account/{accountId}/scripts/
  ScriptForeignKey:
    properties:
      id:
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/Script'
    x-references:
      $ref: '#/definitions/Script'
  ScriptListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Script'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Script'
    x-usedIn:
    - /account/{accountId}/scripts/
  ScriptVersion:
    properties:
      added:
        format: date-time
        readOnly: true
        type: string
      body:
        description: The content of this ScriptVersion. This content will be validated
          according to the Script's OS Type.
        type: string
      script:
        $ref: '#/definitions/ScriptForeignKey'
        description: The Script this ScriptVersion is a version of.
      version:
        description: The Script version number. null is interpreted as the latest
          Version.
        readOnly: true
        type: integer
    required:
    - script
    - body
    x-createOnly:
    - script
    x-filterable:
    - script
    x-usedIn:
    - /account/{accountId}/scripts/{scriptId}/script-versions/
    - /account/{accountId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/
  ScriptVersionDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/ScriptVersion'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ScriptVersion'
    x-usedIn:
    - /account/{accountId}/scripts/{scriptId}/script-versions/
    - /account/{accountId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/
  ScriptVersionForeignKey:
    properties:
      script:
        $ref: '#/definitions/ScriptForeignKey'
        description: The Script this ScriptVersion is a version of.
      version:
        description: The Script version number. null is interpreted as the latest
          Version.
        type: integer
    required:
    - script
  ScriptVersionListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/ScriptVersion'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ScriptVersion'
    x-usedIn:
    - /account/{accountId}/scripts/{scriptId}/script-versions/
  SpecificEventTrigger:
    description: Triggers when a specific Event fires.
    properties:
      event:
        $ref: '#/definitions/EventForeignKey'
      triggerType:
        enum:
        - AllEventsTrigger
        - SpecificEventTrigger
        type: string
    required:
    - triggerType
    - event
    x-abstractType:
      $ref: '#/definitions/Trigger'
    x-discriminator: triggerType
  TagsCondition:
    properties:
      tags:
        description: Selects all the Servers that belong to the Role with at least
          one tag from this list.
        items:
          type: string
        type: array
      type:
        description: Orchestration rule condition type. Selected only those servers
          that match conditions.
        enum:
        - FarmRolesCondition
        - OsCondition
        - TagsCondition
        type: string
    required:
    - type
    x-abstractType:
      $ref: '#/definitions/OrchestrationRuleCondition'
    x-discriminator: type
  Target:
    discriminator: targetType
    properties:
      targetType:
        enum:
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-concreteTypes:
    - $ref: '#/definitions/FarmTarget'
    - $ref: '#/definitions/TriggeringFarmRoleTarget'
    - $ref: '#/definitions/TriggeringServerTarget'
  Team:
    properties:
      defaultAclRole:
        $ref: '#/definitions/AclRoleForeignKey'
        description: Default ACL Role for the Team. This ACL Role is applied by default
          to all the members of the Team, but it can be overridden for specific users.
      description:
        description: Description of the Team.
        type: string
      id:
        description: Identifier of the Team.
        readOnly: true
        type: integer
      name:
        description: Name of the Team.
        type: string
    required:
    - defaultAclRole
    - name
    x-filterable:
    - id
    - name
    - defaultAclRole
    x-usedIn:
    - /account/{accountId}/environments/{envId}/teams/{teamId}/
    - /account/{accountId}/teams/{teamId}/
    - /account/{accountId}/teams/
  TeamDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/Team'
        readOnly: true
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Team'
    x-usedIn:
    - /account/{accountId}/teams/{teamId}/
    - /account/{accountId}/teams/
  TeamListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Team'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Team'
    x-usedIn:
    - /account/{accountId}/teams/
  Trigger:
    discriminator: triggerType
    properties:
      triggerType:
        enum:
        - AllEventsTrigger
        - SpecificEventTrigger
        type: string
    required:
    - triggerType
    x-concreteTypes:
    - $ref: '#/definitions/AllEventsTrigger'
    - $ref: '#/definitions/SpecificEventTrigger'
  TriggeringFarmRoleTarget:
    description: Selects all the Servers that belong to the same Farm Role as the
      Server that triggered the Event.
    properties:
      targetType:
        enum:
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-abstractType:
      $ref: '#/definitions/Target'
    x-discriminator: targetType
  TriggeringServerTarget:
    description: Select only the Server that triggered the Event.
    properties:
      conditions:
        description: 'Triggering servers conditions. '
        items:
          $ref: '#/definitions/OrchestrationRuleCondition'
        type: array
      targetType:
        enum:
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-abstractType:
      $ref: '#/definitions/Target'
    x-discriminator: targetType
  VmwareCloudCredentials:
    properties:
      cloudCredentialsType:
        description: The Cloud Platform these credentials allow access to.
        enum:
        - AwsCloudCredentials
        - GceCloudCredentials
        - AzureCloudCredentials
        - CloudstackCloudCredentials
        - OpenstackCloudCredentials
        - RackspaceCloudCredentials
        - VmwareCloudCredentials
        type: string
      description:
        type: string
      id:
        description: Unique identifier for this Cloud Credentials object.
        maxLength: 12
        minLength: 12
        pattern: '[A-Fa-f0-9]+'
        readOnly: true
        type: string
      name:
        description: Unique name of these Cloud Credentials.
        type: string
      password:
        description: The password for the user.
        format: password
        type: string
      provider:
        description: Cloud provider for Openstack or Cloudstack based clouds.
        type: string
      scope:
        description: The scope in which these Cloud Credentials were added.
        enum:
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - role
        - server
        readOnly: true
        type: string
      sslVerification:
        description: Specifies whether it should verify SSL Certificate.
        type: boolean
      status:
        description: The status of these Cloud Credentials.
        enum:
        - disabled
        - enabled
        - suspended
        readOnly: true
        type: string
      url:
        description: vSphere Web Services SDK Server URL.
        type: string
      userName:
        description: The ID of the user.
        type: string
    required:
    - name
    - cloudCredentialsType
    - url
    - userName
    - password
    x-abstractType:
      $ref: '#/definitions/CloudCredentials'
    x-createOnly:
    - cloudCredentialsType
    - provider
    x-discriminator: cloudCredentialsType
    x-filterable:
    - id
    - name
    - cloudCredentialsType
    - status
    - scope
    - provider
  VmwareImageCloudFeatures:
    description: Cloud specifics Image configuration.
    properties:
      type:
        enum:
        - AwsImageCloudFeatures
        - VmwareImageCloudFeatures
        type: string
      vCenterHost:
        description: The vCenter host where the current Image exists. At the Environment
          scope this property is read-only.
        type: string
    required:
    - type
    x-abstractType:
      $ref: '#/definitions/ImageCloudFeatures'
    x-discriminator: type
  WebhookEndpoint:
    description: Webhook endpoint summary.
    properties:
      id:
        description: Identifier of the Webhook endpoint.
        maxLength: 36
        minLength: 36
        pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
        type: string
      scope:
        enum: *id002
        type: string
      url:
        description: Endpoint URL.
        type: string
  WebhookEndpointListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/WebhookEndpoint'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/WebhookEndpoint'
    x-usedIn:
    - /account/{accountId}/webhook-endpoints/
info:
  description: Manage Roles, Images, Environments and etc.
  title: Scalr Account API
  version: 1.0.0
paths:
  /{accountId}/acl-roles/:
    get:
      description: List the ACL Roles in this account.
      responses:
        200:
          description: A list of AclRole objects.
          schema:
            $ref: '#/definitions/AclRoleListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
  /{accountId}/cloud-credentials/:
    get:
      description: List all Cloud Credentials available in this Account.
      responses:
        200:
          description: A list of CloudCredentialsSummary objects.
          schema:
            $ref: '#/definitions/CloudCredentialsSummaryListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    post:
      description: Create new Cloud Credentials at this Account's scope.
      parameters:
      - description: The JSON representation of a CloudCredentials object.
        in: body
        name: cloudCredentialsObject
        required: true
        schema:
          $ref: '#/definitions/CloudCredentials'
      responses:
        201:
          description: The JSON representation of a CloudCredentials object.
          schema:
            $ref: '#/definitions/CloudCredentialsDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/cloud-credentials/{cloudCredentialsId}/:
    delete:
      description: Delete the specified Cloud Credentials from this Account.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about given Cloud Credentials. You
        can only obtain information about Cloud Credentials defined in this Account's
        scope.
      responses:
        200:
          description: The JSON representation of a CloudCredentials object.
          schema:
            $ref: '#/definitions/CloudCredentialsDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of a CloudCredentials object.
      in: path
      maxLength: 12
      minLength: 12
      name: cloudCredentialsId
      pattern: '[A-Fa-f0-9]+'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/CloudCredentials'
    patch:
      description: Modify the attributes of given Cloud Credentials.
      parameters:
      - description: The JSON representation of a CloudCredentials object.
        in: body
        name: cloudCredentialsObject
        required: true
        schema:
          $ref: '#/definitions/CloudCredentials'
      responses:
        200:
          description: The JSON representation of a CloudCredentials object.
          schema:
            $ref: '#/definitions/CloudCredentialsDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/cost-centers/:
    get:
      description: List the Cost Centers available in the Account.
      responses:
        200:
          description: A list of CostCenter objects.
          schema:
            $ref: '#/definitions/CostCenterListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
  /{accountId}/cost-centers/{costCenterId}/:
    get:
      description: Retrieve detailed information about a given Cost Center.
      responses:
        200:
          description: The JSON representation of a CostCenter object.
          schema:
            $ref: '#/definitions/CostCenterDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of a CostCenter object.
      in: path
      maxLength: 36
      minLength: 36
      name: costCenterId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/CostCenter'
  /{accountId}/environments/:
    get:
      description: List Environments available in this Account.
      responses:
        200:
          description: A list of Environment objects.
          schema:
            $ref: '#/definitions/EnvironmentListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    post:
      description: Create a new Environment in the Account.
      parameters:
      - description: The JSON representation of a Environment object.
        in: body
        name: environmentObject
        required: true
        schema:
          $ref: '#/definitions/Environment'
      responses:
        201:
          description: The JSON representation of a Environment object.
          schema:
            $ref: '#/definitions/EnvironmentDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/environments/{envId}/:
    delete:
      description: Delete an Environment from the Account.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a given Environment.
      responses:
        200:
          description: The JSON representation of a Environment object.
          schema:
            $ref: '#/definitions/EnvironmentDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of the Environment being accessed.
      in: path
      name: envId
      required: true
      type: integer
    patch:
      description: Update the attributes of an Environment.
      parameters:
      - description: The JSON representation of a Environment object.
        in: body
        name: environmentObject
        required: true
        schema:
          $ref: '#/definitions/Environment'
      responses:
        200:
          description: The JSON representation of a Environment object.
          schema:
            $ref: '#/definitions/EnvironmentDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/environments/{envId}/clouds/:
    get:
      description: List the Clouds this environment has acceess to.
      responses:
        200:
          description: A list of Cloud objects.
          schema:
            $ref: '#/definitions/CloudListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of the Environment being accessed.
      in: path
      name: envId
      required: true
      type: integer
  /{accountId}/environments/{envId}/clouds/{cloud}/:
    delete:
      description: Detaches Cloud Credentials from this Environment.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about given Cloud Credentials that
        this Environment is using.
      responses:
        200:
          description: The JSON representation of a CloudCredentials object.
          schema:
            $ref: '#/definitions/CloudCredentialsDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of the Environment being accessed.
      in: path
      name: envId
      required: true
      type: integer
    - description: The name of the cloud.
      in: path
      name: cloud
      pattern: \w+
      required: true
      type: string
    post:
      description: Associate or replace Cloud Credentials with this Environment for
        the given Cloud.
      parameters:
      - description: The JSON representation of a CloudCredentialsForeignKey object.
        in: body
        name: cloudCredentialsForeignKeyObject
        required: true
        schema:
          $ref: '#/definitions/CloudCredentialsForeignKey'
      responses:
        200:
          description: The JSON representation of a CloudCredentials object.
          schema:
            $ref: '#/definitions/CloudCredentialsDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/environments/{envId}/teams/:
    get:
      description: List the Teams that have access to this Environment.
      responses:
        200:
          description: A list of EnvironmentTeam objects.
          schema:
            $ref: '#/definitions/EnvironmentTeamListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of the Environment being accessed.
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Grants a Team access to this Environment.
      parameters:
      - description: The JSON representation of a EnvironmentTeam object.
        in: body
        name: environmentTeamObject
        required: true
        schema:
          $ref: '#/definitions/EnvironmentTeam'
      responses:
        201:
          description: The JSON representation of a EnvironmentTeam object.
          schema:
            $ref: '#/definitions/EnvironmentTeamDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/environments/{envId}/teams/{teamId}/:
    delete:
      description: Withhold a Team's access to this Environment.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of the Environment being accessed.
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Team object.
      in: path
      name: teamId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Team'
    patch:
      description: Update the attributes of an Team access on this Environment.
      parameters:
      - description: The JSON representation of a EnvironmentTeam object.
        in: body
        name: environmentTeamObject
        required: true
        schema:
          $ref: '#/definitions/EnvironmentTeam'
      responses:
        200:
          description: The JSON representation of a EnvironmentTeam object.
          schema:
            $ref: '#/definitions/EnvironmentTeamDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/events/:
    get:
      description: List all the Events available in this Account.
      responses:
        200:
          description: A list of Event objects.
          schema:
            $ref: '#/definitions/EventListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    post:
      description: Create a new Custom Event in this Account.
      parameters:
      - description: The JSON representation of a Event object.
        in: body
        name: eventObject
        required: true
        schema:
          $ref: '#/definitions/Event'
      - description: Replace all Events declared at a lower scope with the same name
          with this one.
        in: query
        name: replace
        required: false
        type: boolean
      responses:
        201:
          description: The JSON representation of a Event object.
          schema:
            $ref: '#/definitions/EventDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/events/{eventId}/:
    delete:
      description: Delete a given Event from this Account.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a given Event.
      responses:
        200:
          description: The JSON representation of a Event object.
          schema:
            $ref: '#/definitions/EventDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of a Event object.
      in: path
      maxLength: 25
      name: eventId
      pattern: '[A-Za-z0-9]+'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Event'
    patch:
      description: Modify the attributes of a given Event.
      parameters:
      - description: The JSON representation of a Event object.
        in: body
        name: eventObject
        required: true
        schema:
          $ref: '#/definitions/Event'
      responses:
        200:
          description: The JSON representation of a Event object.
          schema:
            $ref: '#/definitions/EventDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/global-variables/:
    get:
      description: List Global Variables declared in account scope.
      responses:
        200:
          description: A list of GlobalVariable objects.
          schema:
            $ref: '#/definitions/GlobalVariableListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    post:
      description: Declare a new Global Variable for this account scope.
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        201:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/global-variables/{globalVariableName}/:
    delete:
      description: Delete a Global Variable from account scope.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a Global Variable declared
        in account scope.
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The name of the Global Variable being accessed.
      in: path
      maxLength: 128
      minLength: 2
      name: globalVariableName
      pattern: \w+
      required: true
      type: string
    patch:
      description: Modify the attributes of a Global Variable declared in account
        scope.
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/images/:
    get:
      description: List all the Images available in this Account.
      responses:
        200:
          description: A list of Image objects.
          schema:
            $ref: '#/definitions/ImageListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    post:
      description: Register a new Image in this Account.
      parameters:
      - description: The JSON representation of a Image object.
        in: body
        name: imageObject
        required: true
        schema:
          $ref: '#/definitions/Image'
      responses:
        201:
          description: The JSON representation of a Image object.
          schema:
            $ref: '#/definitions/ImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/images/{imageId}/:
    delete:
      description: Remove an Image from this Account. This does not remove the underlying
        machine image from the Cloud it resides in.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about an image.
      responses:
        200:
          description: The JSON representation of a Image object.
          schema:
            $ref: '#/definitions/ImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of a Image object.
      in: path
      maxLength: 36
      minLength: 36
      name: imageId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Image'
    patch:
      description: Modify the attributes of an Image. Currently only the name of the
        Image can be changed.
      parameters:
      - description: The updated definition.
        in: body
        name: image
        required: true
        schema:
          $ref: '#/definitions/Image'
      responses:
        200:
          description: The JSON representation of a Image object.
          schema:
            $ref: '#/definitions/ImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/images/{imageId}/actions/copy/:
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of a Image object.
      in: path
      maxLength: 36
      minLength: 36
      name: imageId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Image'
    post:
      description: Copy an Image from one EC2 region to another.
      parameters:
      - description: Copy Image options.
        in: body
        name: copyImageRequest
        required: true
        schema:
          properties:
            cloudCredentials:
              $ref: '#/definitions/CloudCredentialsForeignKey'
            cloudLocation:
              description: The EC2 destination region where this Image will be copied.
              type: string
          required:
          - cloudLocation
          - cloudCredentials
      responses:
        201:
          description: The JSON representation of a Image object.
          schema:
            $ref: '#/definitions/ImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/images/{imageId}/actions/replace/:
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The identifier of the old Image object.
      in: path
      maxLength: 36
      minLength: 36
      name: imageId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Image'
    post:
      description: Replace the current Image with a specified one for all Roles which
        use this Image.
      parameters:
      - description: Replace image options.
        in: body
        name: replaceImageRequest
        required: true
        schema:
          properties:
            deprecateOldImage:
              default: false
              description: If the value is true Scalr will mark old Image as deprecated.
              type: boolean
            newImage:
              $ref: '#/definitions/ImageForeignKey'
              description: The identifier of a new Image object.
            scope:
              default:
              - account
              description: Make a replacement for all Roles from the selected scopes.
                If you choose to make a replacement including lower scope you must
                also choose higher scope values.
              items:
                enum:
                - account
                - environment
                type: string
              type: array
          required:
          - newImage
      responses:
        200:
          description: A list of RoleScopeIdentity objects.
          schema:
            $ref: '#/definitions/RoleScopeIdentityListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/orchestration-rules/:
    get:
      description: List the Orchestration Rules in this Account.
      responses:
        200:
          description: A list of OrchestrationRule objects.
          schema:
            $ref: '#/definitions/OrchestrationRuleListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    post:
      description: Create a new Orchestration Rule for this Account.
      parameters:
      - description: The JSON representation of a OrchestrationRule object.
        in: body
        name: orchestrationRuleObject
        required: true
        schema:
          $ref: '#/definitions/OrchestrationRule'
      responses:
        201:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/orchestration-rules/{orchestrationRuleId}/:
    delete:
      description: Delete an Orchestration Rule from this Account.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a given Orchestration Rule.
      responses:
        200:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of a OrchestrationRule object.
      in: path
      maxLength: 36
      minLength: 36
      name: orchestrationRuleId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/OrchestrationRule'
    patch:
      description: Modify an Orchestration Rule.
      parameters:
      - description: The JSON representation of a OrchestrationRule object.
        in: body
        name: orchestrationRuleObject
        required: true
        schema:
          $ref: '#/definitions/OrchestrationRule'
      responses:
        200:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/os/:
    get:
      description: List all the Operating Systems definitions available in this Account.
      responses:
        200:
          description: A list of Os objects.
          schema:
            $ref: '#/definitions/OsListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
  /{accountId}/os/{osId}/:
    get:
      description: Retrieve detailed information about a given OS.
      responses:
        200:
          description: The JSON representation of a Os object.
          schema:
            $ref: '#/definitions/OsDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of a Os object.
      in: path
      name: osId
      pattern: '[A-Za-z0-9-]+'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Os'
  /{accountId}/role-categories/:
    get:
      description: List the Role Categories available in this Account.
      responses:
        200:
          description: A list of RoleCategory objects.
          schema:
            $ref: '#/definitions/RoleCategoryListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    post:
      description: Create a new Role Category in this Account.
      parameters:
      - description: The JSON representation of a RoleCategory object.
        in: body
        name: roleCategoryObject
        required: true
        schema:
          $ref: '#/definitions/RoleCategory'
      responses:
        201:
          description: The JSON representation of a RoleCategory object.
          schema:
            $ref: '#/definitions/RoleCategoryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/role-categories/{roleCategoryId}/:
    delete:
      description: Delete a Role Category from this Account.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a given Role Category.
      responses:
        200:
          description: The JSON representation of a RoleCategory object.
          schema:
            $ref: '#/definitions/RoleCategoryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of a RoleCategory object.
      in: path
      name: roleCategoryId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/RoleCategory'
    patch:
      description: Modify the attributes of a given Role Category.
      parameters:
      - description: The JSON representation of a RoleCategory object.
        in: body
        name: roleCategoryObject
        required: true
        schema:
          $ref: '#/definitions/RoleCategory'
      responses:
        200:
          description: The JSON representation of a RoleCategory object.
          schema:
            $ref: '#/definitions/RoleCategoryDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/roles/:
    get:
      description: List all the Roles available in this Account.
      responses:
        200:
          description: A list of AccountRole objects.
          schema:
            $ref: '#/definitions/AccountRoleListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    post:
      description: Create a new Role in this Account.
      parameters:
      - description: The JSON representation of a AccountRole object.
        in: body
        name: accountRoleObject
        required: true
        schema:
          $ref: '#/definitions/AccountRole'
      responses:
        201:
          description: The JSON representation of a AccountRole object.
          schema:
            $ref: '#/definitions/AccountRoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/roles/{roleId}/:
    delete:
      description: Delete a Role from this Account.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a given Role.
      responses:
        200:
          description: The JSON representation of a AccountRole object.
          schema:
            $ref: '#/definitions/AccountRoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    patch:
      description: Modify the attributes of a given Role.
      parameters:
      - description: The JSON representation of a AccountRole object.
        in: body
        name: accountRoleObject
        required: true
        schema:
          $ref: '#/definitions/AccountRole'
      responses:
        200:
          description: The JSON representation of a AccountRole object.
          schema:
            $ref: '#/definitions/AccountRoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/roles/{roleId}/actions/clone/:
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    post:
      description: Make a copy of an existing Role by cloning it.
      parameters:
      - description: Role cloning options.
        in: body
        name: cloneRoleRequest
        required: true
        schema:
          properties:
            name:
              description: The name of the new Role.
              type: string
          required:
          - name
      responses:
        201:
          description: The JSON representation of a AccountRole object.
          schema:
            $ref: '#/definitions/AccountRoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/roles/{roleId}/actions/deprecate/:
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    post:
      description: Deprecate a Role and set another Role to replace it.
      parameters:
      - description: Deprecate Role options.
        in: body
        name: deprecateRoleRequest
        required: false
        schema:
          properties:
            deprecate:
              default: true
              description: By default deprecate Role If a value is true clears the
                deprecate from Role.
              type: boolean
            replacement:
              $ref: '#/definitions/RoleForeignKey'
              description: The suggested replacement Role foreign key for the current
                Role.
      responses:
        200:
          description: The JSON representation of a AccountRole object.
          schema:
            $ref: '#/definitions/AccountRoleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/roles/{roleId}/global-variables/:
    get:
      description: List all the Global Variables associated with a given Role.
      responses:
        200:
          description: A list of GlobalVariable objects.
          schema:
            $ref: '#/definitions/GlobalVariableListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    post:
      description: Declare a new Global Variable for this Role.
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        201:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/roles/{roleId}/global-variables/{globalVariableName}/:
    delete:
      description: Delete a Global Variable from a given Role's scope.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about Global Variable in the Role's
        scope.
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    - description: The name of the Global Variable being accessed.
      in: path
      maxLength: 128
      minLength: 2
      name: globalVariableName
      pattern: \w+
      required: true
      type: string
    patch:
      description: Modify the attributes of a Global Variable in the Role's scope.
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/roles/{roleId}/images/:
    get:
      description: List all the Images associated with a given Role.
      responses:
        200:
          description: A list of RoleImage objects.
          schema:
            $ref: '#/definitions/RoleImageListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    post:
      description: Associate a new Image with a given Role. This will fail if an Image
        associated to the Role is in the same location than the Image you are trying
        to add.
      parameters:
      - description: The JSON representation of a RoleImage object.
        in: body
        name: roleImageObject
        required: true
        schema:
          $ref: '#/definitions/RoleImage'
      responses:
        201:
          description: The JSON representation of a RoleImage object.
          schema:
            $ref: '#/definitions/RoleImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/roles/{roleId}/images/{imageId}/:
    delete:
      description: Dis-associate an Image from a given Role.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about an Image.
      responses:
        200:
          description: Redirects to the Image.
          schema:
            $ref: '#/definitions/ImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    - description: The ID of a Image object.
      in: path
      maxLength: 36
      minLength: 36
      name: imageId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Image'
  /{accountId}/roles/{roleId}/images/{imageId}/actions/replace/:
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    - description: The ID of a Image object.
      in: path
      maxLength: 36
      minLength: 36
      name: imageId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Image'
    post:
      description: Replace an Image in-place in a given Role. This allows to replace
        an Image without having to dis-associate it and then associate a new one,
        which may not be possible if a Farm Role is currently using this Image.
      parameters:
      - description: The JSON representation of a RoleImage object.
        in: body
        name: roleImageObject
        required: true
        schema:
          $ref: '#/definitions/RoleImage'
      responses:
        200:
          description: The JSON representation of a RoleImage object.
          schema:
            $ref: '#/definitions/RoleImageDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/roles/{roleId}/orchestration-rules/:
    get:
      description: List the Orchestration Rules associated with a given Role, including
        Rules from higher Scopes (those are read-only).
      responses:
        200:
          description: A list of OrchestrationRule objects.
          schema:
            $ref: '#/definitions/OrchestrationRuleListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    post:
      description: Create a new Orchestration Rule associated to a Role.
      parameters:
      - description: The JSON representation of a OrchestrationRule object.
        in: body
        name: orchestrationRuleObject
        required: true
        schema:
          $ref: '#/definitions/OrchestrationRule'
      responses:
        201:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}/:
    delete:
      description: Delete an Orchestration Rule from the Role.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a given Orchestration Rule
        associated to this Role.
      responses:
        200:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    - description: The ID of a OrchestrationRule object.
      in: path
      maxLength: 36
      minLength: 36
      name: orchestrationRuleId
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
      required: true
      type: string
      x-references:
        $ref: '#/definitions/OrchestrationRule'
    patch:
      description: Modify the attributes of a given Orchestration Rule.
      parameters:
      - description: The JSON representation of a OrchestrationRule object.
        in: body
        name: orchestrationRuleObject
        required: true
        schema:
          $ref: '#/definitions/OrchestrationRule'
      responses:
        200:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/scaling-metrics/:
    get:
      description: List all Scaling metrics in the Account scope.
      responses:
        200:
          description: A list of ScalingMetric objects.
          schema:
            $ref: '#/definitions/ScalingMetricListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    post:
      description: Add a new custom Scaling metric in the Account scope.
      parameters:
      - description: The JSON representation of a ScalingMetric object.
        in: body
        name: scalingMetricObject
        required: true
        schema:
          $ref: '#/definitions/ScalingMetric'
      responses:
        201:
          description: The JSON representation of a ScalingMetric object.
          schema:
            $ref: '#/definitions/ScalingMetricDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/scaling-metrics/{metricName}/:
    delete:
      description: Delete a Scaling metric.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a given Scaling metric.
      responses:
        200:
          description: The JSON representation of a ScalingMetric object.
          schema:
            $ref: '#/definitions/ScalingMetricDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The name of the Scaling Metric.
      in: path
      maxLength: 50
      minLength: 5
      name: metricName
      pattern: '[A-Za-z0-9]+'
      required: true
      type: string
    patch:
      description: Modify the Scaling metric.
      parameters:
      - description: The JSON representation of a ScalingMetric object.
        in: body
        name: scalingMetricObject
        required: true
        schema:
          $ref: '#/definitions/ScalingMetric'
      responses:
        200:
          description: The JSON representation of a ScalingMetric object.
          schema:
            $ref: '#/definitions/ScalingMetricDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/scripts/:
    get:
      description: List all the Scripts available in this Account.
      responses:
        200:
          description: A list of Script objects.
          schema:
            $ref: '#/definitions/ScriptListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    post:
      description: Create a new Script in this Account.
      parameters:
      - description: The JSON representation of a Script object.
        in: body
        name: scriptObject
        required: true
        schema:
          $ref: '#/definitions/Script'
      responses:
        201:
          description: The JSON representation of a Script object.
          schema:
            $ref: '#/definitions/ScriptDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/scripts/{scriptId}/:
    delete:
      description: Delete a given Script from this Account.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a given Script.
      responses:
        200:
          description: The JSON representation of a Script object.
          schema:
            $ref: '#/definitions/ScriptDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of a Script object.
      in: path
      name: scriptId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Script'
    patch:
      description: Modify the attributes of a given Script.
      parameters:
      - description: The JSON representation of a Script object.
        in: body
        name: scriptObject
        required: true
        schema:
          $ref: '#/definitions/Script'
      responses:
        200:
          description: The JSON representation of a Script object.
          schema:
            $ref: '#/definitions/ScriptDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/scripts/{scriptId}/script-versions/:
    get:
      description: List all the Script Versions for the specified Script.
      responses:
        200:
          description: A list of ScriptVersion objects.
          schema:
            $ref: '#/definitions/ScriptVersionListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of a Script object.
      in: path
      name: scriptId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Script'
    post:
      description: Create a new Script Version for a given Script.
      parameters:
      - description: The JSON representation of a ScriptVersion object.
        in: body
        name: scriptVersionObject
        required: true
        schema:
          $ref: '#/definitions/ScriptVersion'
      responses:
        201:
          description: The JSON representation of a ScriptVersion object.
          schema:
            $ref: '#/definitions/ScriptVersionDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/:
    delete:
      description: Delete a given Script Version from this Script.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a given Script Version.
      responses:
        200:
          description: The JSON representation of a ScriptVersion object.
          schema:
            $ref: '#/definitions/ScriptVersionDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of a Script object.
      in: path
      name: scriptId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Script'
    - description: The version number of the Script Version being accessed.
      in: path
      name: scriptVersionNumber
      required: true
      type: integer
    patch:
      description: Modify the attributes of a given Script Version
      parameters:
      - description: The JSON representation of a ScriptVersion object.
        in: body
        name: scriptVersionObject
        required: true
        schema:
          $ref: '#/definitions/ScriptVersion'
      responses:
        200:
          description: The JSON representation of a ScriptVersion object.
          schema:
            $ref: '#/definitions/ScriptVersionDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/teams/:
    get:
      description: List all the Teams in this account.
      responses:
        200:
          description: A list of Team objects.
          schema:
            $ref: '#/definitions/TeamListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    post:
      description: Creates a new Team in the Account.
      parameters:
      - description: The JSON representation of a Team object.
        in: body
        name: teamObject
        required: true
        schema:
          $ref: '#/definitions/Team'
      responses:
        201:
          description: The JSON representation of a Team object.
          schema:
            $ref: '#/definitions/TeamDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/teams/{teamId}/:
    delete:
      description: Delete a Team from this Account.
      responses:
        204:
          description: Successful deletion.
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve detailed information about a given Team.
      responses:
        200:
          description: The JSON representation of a Team object.
          schema:
            $ref: '#/definitions/TeamDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
    - description: The ID of a Team object.
      in: path
      name: teamId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Team'
    patch:
      description: Update the attributes of the specified Team.
      parameters:
      - description: The JSON representation of a Team object.
        in: body
        name: teamObject
        required: true
        schema:
          $ref: '#/definitions/Team'
      responses:
        200:
          description: The JSON representation of a Team object.
          schema:
            $ref: '#/definitions/TeamDetailsResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{accountId}/webhook-endpoints/:
    get:
      description: List all the Webhook endpoints available in this Account.
      responses:
        200:
          description: A list of WebhookEndpoint objects.
          schema:
            $ref: '#/definitions/WebhookEndpointListResponse'
        400:
          description: A client-side error was made.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: The request was understood by the API, but included invalid
              data.
            name: InvalidValue
          - description: The request wasn't understood by the API.
            name: BadRequest
        401:
          description: The request was not authenticated.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The request was not properly authenticated.
            name: BadAuthentication
        403:
          description: Insufficient permissions.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This request should be made in a different Scope.
            name: ScopeViolation
          - description: You do not have the necessary permissions to perform this
              request.
            name: PermissionViolation
          - description: The maximum memory limit in GB has been reached.
            name: MemoryQuotaExceeded
          - description: The vCPUs limit has been reached.
            name: VcpusQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume has been reached.
            name: ServersQuotaExceeded
          - description: The maximum number of the Servers that you can launch or
              resume on current Farm has been reached.
            name: ServersPerFarmQuotaExceeded
        404:
          description: Resource not found.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: This endpoint does not exist.
            name: EndpointNotFound
            noDoc: true
          - description: The object you are trying to access does not exist.
            name: ObjectNotFound
        409:
          description: Conflict with current state.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: These changes aren't possible while this object is in use.
            name: ObjectInUse
          - description: These changes would violate a policy.
            name: PolicyViolation
          - description: These changes would violate a unicity constraint.
            name: UnicityViolation
          - description: Some of the objects being changed are locked and cannot be
              changed.
            name: Locked
          - description: This Cloud platform is not enabled.
            name: NotEnabledPlatform
          - description: The Operating System does not match.
            name: OperatingSystemMismatch
          - description: Some of these settings cannot be applied, they either conflict
              with the current state or are invalid.
            name: UnacceptableObjectConfiguration
        422:
          description: This request was well-formed but was rejected due to semantic
            errors.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Some of the configuration settings cannot be applied because
              they conflict with the current state.
            name: ConfigurationMismatch
        500:
          description: A server-side error occured.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        501:
          description: This feature is not implemented in Scalr.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
        503:
          description: The service is currently unavailable.
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Account scoping this request.
      in: path
      name: accountId
      required: true
      type: integer
produces:
- application/json
swagger: '2.0'
x-dry-yaml-definitions:
  architecture:
    enum: *id005
    type: string
  cloudLocationProperties:
    cloudLocation: *id003
    cloudPlatform: *id004
  cloudstackProvider:
    description: Cloud provider that should be specified for CloudStack based clouds.
    enum: *id006
    type: string
  openstackProvider:
    description: Cloud provider that should be specified for OpenStack based clouds.
    enum: *id007
    type: string
  pathParamsPatterns:
    uuid:
      maxLength: 36
      minLength: 36
      pattern: '[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}'
    uuidShort:
      maxLength: 12
      minLength: 12
      pattern: '[A-Fa-f0-9]+'
  scopeProperty:
    enum: *id002
    type: string
